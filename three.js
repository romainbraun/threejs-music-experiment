// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"54dev"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;
THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;
THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setContextStyle:function(a){a=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/i.exec(a);this.r=parseInt(a[1],10)/255;this.g=parseInt(a[2],10)/255;this.b=parseInt(a[3],10)/255;return this},getHSV:function(a){var b=
this.r,c=this.g,d=this.b,e=Math.max(Math.max(b,c),d),f=Math.min(Math.min(b,c),d);if(f===e)f=b=0;else{var g=e-f,f=g/e,b=(b===e?(c-d)/g:c===e?2+(d-b)/g:4+(b-c)/g)/6;0>b&&(b+=1);1<b&&(b-=1)}void 0===a&&(a={h:0,s:0,v:0});a.h=b;a.s=f;a.v=e;return a},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],m=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-j,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(m,i),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(j)),0.99999>Math.abs(j)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-k,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(m)),0.99999>Math.abs(m)?(this.y=Math.atan2(-k,d),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.x=Math.atan2(m,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-j,i),this.y=Math.atan2(-k,e)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(m,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-j,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var j=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(i-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(i+b)&&0.1>Math.abs(e+h+j-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;j=(j+1)/2;d=(d+g)/4;f=(f+c)/4;i=(i+b)/4;e>h&&e>j?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/
b):h>j?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):0.01>j?(c=b=0.707106781,d=0):(d=Math.sqrt(j),b=f/d,c=i/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d));0.0010>Math.abs(a)&&(a=1);this.x=(b-i)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+j-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=b[0]*c+b[3]*d+b[6]*e;a.y=b[1]*c+b[4]*d+b[7]*e;a.z=b[2]*c+b[5]*d+b[8]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix3.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*
b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],j=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,k=this.elements;k[0]=b*a;k[1]=b*c;k[2]=b*d;k[3]=b*e;k[4]=b*f;k[5]=b*g;k[6]=b*h;k[7]=b*i;k[8]=b*j;return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.elements;
a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix3.__v1=new THREE.Vector3;THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,m,n,q,p,s){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,i||0,j||0,void 0!==k?k:1,m||0,n||0,q||0,p||0,void 0!==s?s:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,m,n,q,p,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=i;u[6]=j;u[10]=k;u[14]=m;u[3]=n;u[7]=q;u[11]=p;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],m=c[9],n=c[13],q=c[2],p=c[6],s=c[10],u=c[14],t=c[3],A=c[7],x=c[11],c=c[15],r=d[0],C=d[4],w=d[8],
v=d[12],y=d[1],E=d[5],D=d[9],I=d[13],O=d[2],F=d[6],M=d[10],J=d[14],N=d[3],P=d[7],R=d[11],d=d[15];e[0]=f*r+g*y+h*O+i*N;e[4]=f*C+g*E+h*F+i*P;e[8]=f*w+g*D+h*M+i*R;e[12]=f*v+g*I+h*J+i*d;e[1]=j*r+k*y+m*O+n*N;e[5]=j*C+k*E+m*F+n*P;e[9]=j*w+k*D+m*M+n*R;e[13]=j*v+k*I+m*J+n*d;e[2]=q*r+p*y+s*O+u*N;e[6]=q*C+p*E+s*F+u*P;e[10]=q*w+p*D+s*M+u*R;e[14]=q*v+p*I+s*J+u*d;e[3]=t*r+A*y+x*O+c*N;e[7]=t*C+A*E+x*F+c*P;e[11]=t*w+A*D+x*M+c*R;e[15]=t*v+A*I+x*J+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],m=a[10],n=a[14],q=a[3],p=a[7],s=a[11],a=a[15];return e*h*k*q-d*i*k*q-e*g*m*q+c*i*m*q+d*g*n*q-c*h*n*q-e*h*j*p+d*i*j*p+e*f*m*p-b*i*m*p-d*f*n*p+b*h*n*p+e*g*j*s-c*i*j*s-e*f*k*s+b*i*k*s+c*f*n*s-b*g*n*s-d*g*j*a+c*h*j*a+d*f*k*a-b*h*k*a-c*f*m*a+b*g*m*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],j=c[9],k=c[13],m=c[2],n=c[6],q=c[10],p=c[14],s=c[3],u=c[7],t=c[11],c=c[15];b[0]=j*p*u-k*q*u+k*n*t-i*p*t-j*n*c+i*q*c;b[4]=g*q*u-f*p*u-g*n*t+e*p*t+f*n*c-e*q*c;b[8]=f*k*u-g*j*u+g*i*t-e*k*t-f*i*c+e*j*c;b[12]=g*j*n-f*k*n-g*i*q+e*k*q+f*i*p-e*j*p;b[1]=k*q*s-j*p*s-k*m*t+h*p*t+j*m*c-h*q*c;b[5]=f*p*s-g*q*s+g*m*t-d*p*t-f*m*c+d*q*c;b[9]=g*j*s-f*k*s-g*h*t+d*k*t+f*h*c-d*j*c;b[13]=f*k*m-g*j*m+g*h*q-d*k*q-f*h*p+d*j*p;b[2]=i*p*s-k*n*s+k*m*u-h*p*
u-i*m*c+h*n*c;b[6]=g*n*s-e*p*s-g*m*u+d*p*u+e*m*c-d*n*c;b[10]=e*k*s-g*i*s+g*h*u-d*k*u-e*h*c+d*i*c;b[14]=g*i*m-e*k*m-g*h*n+d*k*n+e*h*p-d*i*p;b[3]=j*n*s-i*q*s-j*m*u+h*q*u+i*m*t-h*n*t;b[7]=e*q*s-f*n*s+f*m*u-d*q*u-e*m*t+d*n*t;b[11]=f*i*s-e*j*s-f*h*u+d*j*u+e*h*t-d*i*t;b[15]=e*j*m-f*i*m+f*h*n-d*j*n-e*h*q+d*i*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var j=g*i,k=g*f,m=d*i,n=d*f;c[0]=h*i;c[4]=-h*f;c[8]=e;c[1]=k+m*e;c[5]=j-n*e;c[9]=-d*h;c[2]=n-j*e;c[6]=m+k*e;c[10]=g*h}else"YXZ"===b?(j=h*i,k=h*f,m=e*i,n=e*f,c[0]=j+n*d,c[4]=m*d-k,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=k*d-m,c[6]=n+j*d,c[10]=g*h):"ZXY"===b?(j=h*i,k=h*f,m=e*i,n=e*f,c[0]=j-n*d,c[4]=-g*f,c[8]=m+k*d,c[1]=k+m*d,c[5]=g*i,c[9]=n-j*d,c[2]=-g*e,c[6]=d,c[10]=g*h):"ZYX"===b?(j=g*i,k=g*f,m=d*i,n=d*f,c[0]=h*i,c[4]=m*e-k,c[8]=j*e+n,c[1]=h*f,c[5]=n*e+j,c[9]=
k*e-m,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(j=g*h,k=g*e,m=d*h,n=d*e,c[0]=h*i,c[4]=n-j*f,c[8]=m*f+k,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=k*f+m,c[10]=j-n*f):"XZY"===b&&(j=g*h,k=g*e,m=d*h,n=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=j*f+n,c[5]=g*i,c[9]=k*f-m,c[2]=m*f-k,c[6]=d*i,c[10]=n*f+j);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,j=c*h,c=c*i,k=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;b[0]=1-(k+e);b[4]=j-f;b[8]=c+h;b[1]=j+f;b[5]=1-(a+
e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+k);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=
b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);b[4]=k*c+a*g;b[5]=k*d+a*h;b[6]=k*e+a*i;b[7]=k*f+a*j;b[8]=k*g-a*c;b[9]=k*h-a*d;b[10]=k*i-a*e;b[11]=k*j-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);b[0]=k*c-a*g;b[1]=k*d-a*h;b[2]=k*e-a*i;b[3]=k*f-a*j;b[8]=k*g+a*c;b[9]=k*h+a*d;b[10]=
k*i+a*e;b[11]=k*j+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=Math.cos(a),a=Math.sin(a);b[0]=k*c+a*g;b[1]=k*d+a*h;b[2]=k*e+a*i;b[3]=k*f+a*j;b[4]=k*g-a*c;b[5]=k*h-a*d;b[6]=k*i-a*e;b[7]=k*j-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,j=Math.cos(b),k=Math.sin(b),m=1-j,n=d*e*m,q=d*f*m,m=e*f*m,d=d*k,p=e*k,k=f*k,f=g+(1-g)*j,g=n+k,e=q-p,n=n-k,h=h+(1-h)*j,k=m+d,q=q+p,m=m-d,i=i+(1-i)*j,j=c[0],d=c[1],p=c[2],s=c[3],u=c[4],t=c[5],A=c[6],x=c[7],r=c[8],C=c[9],w=c[10],v=c[11];c[0]=f*j+g*u+e*r;c[1]=f*d+g*t+e*C;c[2]=f*p+g*A+e*w;c[3]=f*s+g*x+e*v;c[4]=n*j+h*u+k*r;c[5]=n*d+h*t+k*C;c[6]=n*p+h*A+k*w;c[7]=n*s+h*x+k*v;c[8]=q*j+m*u+i*r;c[9]=q*d+m*t+i*C;c[10]=q*p+m*A+i*w;c[11]=q*s+m*x+i*v;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/j;g[14]=-((f+e)/j);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c)for(var d=0,e=c.length;d<e;d++)c[d](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],j=c[7],k=c[8],m=c[9],n=c[10],q=c[11],p=c[12],s=c[13],u=c[14],c=c[15];b[0].set(f-a,j-g,q-k,c-p);b[1].set(f+a,j+g,q+k,c+p);b[2].set(f+d,j+h,q+m,c+s);b[3].set(f-d,j-h,q-m,c-s);b[4].set(f-e,j-i,q-n,c-u);b[5].set(f+e,j+i,q+n,c+u);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3;new a.Vector3;var f=new a.Vector3,g=new a.Matrix4,h=function(a,b){return a.distance-b.distance},i=new a.Vector3,j=new a.Vector3,k=new a.Vector3,m=function(a,b,c){i.sub(c,a);var d=i.dot(b),a=j.add(a,k.copy(b).multiplyScalar(d));return c.distanceTo(a)},n=function(a,b,c,d){i.sub(d,b);j.sub(c,b);k.sub(a,
b);var a=i.dot(i),b=i.dot(j),c=i.dot(k),e=j.dot(j),d=j.dot(k),f=1/(a*e-b*b),e=(e*c-b*d)*f,a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},q=function(h,i,k){if(h instanceof a.Particle){var j=m(i.origin,i.direction,h.matrixWorld.getPosition());if(j>h.scale.x)return k;k.push({distance:j,point:h.position,face:null,object:h})}else if(h instanceof a.Mesh){var q=h.geometry.boundingSphere.radius*h.matrixWorld.getMaxScaleOnAxis(),j=m(i.origin,i.direction,h.matrixWorld.getPosition());if(j>q)return k;var q=h.geometry,
p=q.vertices,C=h.material instanceof a.MeshFaceMaterial,w=!0===C?h.material.materials:null,j=h.material.side,v,y,E,D=i.precision;h.matrixRotationWorld.extractRotation(h.matrixWorld);b.copy(i.origin);g.getInverse(h.matrixWorld);c.copy(b);g.multiplyVector3(c);d.copy(i.direction);g.rotateAxis(d).normalize();for(var I=0,O=q.faces.length;I<O;I++){var F=q.faces[I],j=!0===C?w[F.materialIndex]:h.material;if(void 0!==j&&(j=j.side,e.sub(F.centroid,c),y=F.normal,v=d.dot(y),!(Math.abs(v)<D)&&(y=y.dot(e)/v,!(0>
y)&&(j===a.DoubleSide||(j===a.FrontSide?0>v:0<v)))))if(f.add(c,d.multiplyScalar(y)),F instanceof a.Face3)j=p[F.a],v=p[F.b],y=p[F.c],n(f,j,v,y)&&(v=h.matrixWorld.multiplyVector3(f.clone()),j=b.distanceTo(v),j<i.near||j>i.far||k.push({distance:j,point:v,face:F,faceIndex:I,object:h}));else if(F instanceof a.Face4&&(j=p[F.a],v=p[F.b],y=p[F.c],E=p[F.d],n(f,j,v,E)||n(f,v,y,E)))v=h.matrixWorld.multiplyVector3(f.clone()),j=b.distanceTo(v),j<i.near||j>i.far||k.push({distance:j,point:v,face:F,faceIndex:I,object:h})}}},
p=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)q(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&p(a,this,c);q(a,this,c);c.sort(h);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)q(a[d],this,c),!0===b&&p(a[d],this,c);c.sort(h);return c}})(THREE);THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,k,m){h=!1;b=f;c=g;d=k;e=m;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,k,m,n,q){!0===h?(h=!1,b=f<k?f<n?f:n:k<n?k:n,c=g<m?g<q?g:q:m<q?m:q,d=f>k?f>n?f:n:k>n?k:n,e=g>m?g>q?g:q:m>q?m:q):(b=f<k?f<n?f<b?f:b:n<b?n:b:k<n?k<b?k:b:n<b?n:b,c=g<m?g<q?g<c?g:c:q<c?q:c:m<q?m<c?m:c:q<c?q:c,d=f>k?f>n?f>d?f:d:n>d?n:d:k>n?k>d?k:d:n>d?n:d,e=g>m?g>q?g>e?g:e:q>e?q:e:m>q?m>e?m:e:q>e?q:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):
this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);
a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());
return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(j===m){var a=new THREE.RenderableVertex;k.push(a);m++;j++;return a}return k[j++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,i,j,k=[],m=0,n,q,p=[],s=0,u,t=[],A=0,x,r,C=[],w=0,v,y,E=[],D=0,I={objects:[],sprites:[],lights:[],elements:[]},O=new THREE.Vector3,F=new THREE.Vector4,M=new THREE.Matrix4,J=new THREE.Matrix4,N=new THREE.Matrix3,P=new THREE.Frustum,R=new THREE.Vector4,S=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);M.multiply(b.projectionMatrix,b.matrixWorldInverse);M.multiplyVector3(a);return a};
this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);M.multiply(b.matrixWorld,b.projectionMatrixInverse);M.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,m,L){var T=h.near,da=h.far,ma=!1,H,W,fa,X,ea,V,ga,aa,fb,Da,wa,ra,za,Wa,ab;y=r=u=q=0;I.elements.length=0;g.updateMatrixWorld();
void 0===h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);M.multiply(h.projectionMatrix,h.matrixWorldInverse);P.setFromMatrix(M);f=0;I.objects.length=0;I.sprites.length=0;I.lights.length=0;var Va=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)I.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===P.contains(f))e=a(),e.object=f,null!==f.renderDepth?
e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),M.multiplyVector3(O),e.z=O.z),I.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),M.multiplyVector3(O),e.z=O.z),I.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),M.multiplyVector3(O),e.z=O.z),I.objects.push(e));Va(f)}}};Va(g);!0===m&&I.objects.sort(c);g=0;for(m=I.objects.length;g<
m;g++)if(aa=I.objects[g].object,fb=aa.matrixWorld,j=0,aa instanceof THREE.Mesh){Da=aa.geometry;fa=Da.vertices;wa=Da.faces;Da=Da.faceVertexUvs;N.getInverse(fb);N.transpose();za=aa.material instanceof THREE.MeshFaceMaterial;Wa=!0===za?aa.material:null;H=0;for(W=fa.length;H<W;H++)i=b(),i.positionWorld.copy(fa[H]),fb.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),M.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,
i.visible=i.positionScreen.z>T&&i.positionScreen.z<da;fa=0;for(H=wa.length;fa<H;fa++)if(W=wa[fa],ab=!0===za?Wa.materials[W.materialIndex]:aa.material,void 0!==ab){V=ab.side;if(W instanceof THREE.Face3)if(X=k[W.a],ea=k[W.b],ga=k[W.c],!0===X.visible&&!0===ea.visible&&!0===ga.visible)if(ma=0>(ga.positionScreen.x-X.positionScreen.x)*(ea.positionScreen.y-X.positionScreen.y)-(ga.positionScreen.y-X.positionScreen.y)*(ea.positionScreen.x-X.positionScreen.x),V===THREE.DoubleSide||ma===(V===THREE.FrontSide))q===
s?(ra=new THREE.RenderableFace3,p.push(ra),s++,q++,n=ra):n=p[q++],n.v1.copy(X),n.v2.copy(ea),n.v3.copy(ga);else continue;else continue;else if(W instanceof THREE.Face4)if(X=k[W.a],ea=k[W.b],ga=k[W.c],ra=k[W.d],!0===X.visible&&!0===ea.visible&&!0===ga.visible&&!0===ra.visible)if(ma=0>(ra.positionScreen.x-X.positionScreen.x)*(ea.positionScreen.y-X.positionScreen.y)-(ra.positionScreen.y-X.positionScreen.y)*(ea.positionScreen.x-X.positionScreen.x)||0>(ea.positionScreen.x-ga.positionScreen.x)*(ra.positionScreen.y-
ga.positionScreen.y)-(ea.positionScreen.y-ga.positionScreen.y)*(ra.positionScreen.x-ga.positionScreen.x),V===THREE.DoubleSide||ma===(V===THREE.FrontSide)){if(u===A){var Sa=new THREE.RenderableFace4;t.push(Sa);A++;u++;n=Sa}else n=t[u++];n.v1.copy(X);n.v2.copy(ea);n.v3.copy(ga);n.v4.copy(ra)}else continue;else continue;n.normalWorld.copy(W.normal);!1===ma&&(V===THREE.BackSide||V===THREE.DoubleSide)&&n.normalWorld.negate();N.multiplyVector3(n.normalWorld).normalize();n.centroidWorld.copy(W.centroid);
fb.multiplyVector3(n.centroidWorld);n.centroidScreen.copy(n.centroidWorld);M.multiplyVector3(n.centroidScreen);ga=W.vertexNormals;X=0;for(ea=ga.length;X<ea;X++)ra=n.vertexNormalsWorld[X],ra.copy(ga[X]),!1===ma&&(V===THREE.BackSide||V===THREE.DoubleSide)&&ra.negate(),N.multiplyVector3(ra).normalize();n.vertexNormalsLength=ga.length;X=0;for(ea=Da.length;X<ea;X++)if(ra=Da[X][fa],void 0!==ra){V=0;for(ga=ra.length;V<ga;V++)n.uvs[X][V]=ra[V]}n.color=W.color;n.material=ab;n.z=n.centroidScreen.z;I.elements.push(n)}}else if(aa instanceof
THREE.Line){J.multiply(M,fb);fa=aa.geometry.vertices;X=b();X.positionScreen.copy(fa[0]);J.multiplyVector4(X.positionScreen);fb=aa.type===THREE.LinePieces?2:1;H=1;for(W=fa.length;H<W;H++)X=b(),X.positionScreen.copy(fa[H]),J.multiplyVector4(X.positionScreen),0<(H+1)%fb||(ea=k[j-2],R.copy(X.positionScreen),S.copy(ea.positionScreen),!0===d(R,S)&&(R.multiplyScalar(1/R.w),S.multiplyScalar(1/S.w),r===w?(wa=new THREE.RenderableLine,C.push(wa),w++,r++,x=wa):x=C[r++],x.v1.positionScreen.copy(R),x.v2.positionScreen.copy(S),
x.z=Math.max(R.z,S.z),x.material=aa.material,I.elements.push(x)))}g=0;for(m=I.sprites.length;g<m;g++)aa=I.sprites[g].object,fb=aa.matrixWorld,aa instanceof THREE.Particle&&(F.set(fb.elements[12],fb.elements[13],fb.elements[14],1),M.multiplyVector4(F),F.z/=F.w,0<F.z&&1>F.z&&(y===D?(T=new THREE.RenderableParticle,E.push(T),D++,y++,v=T):v=E[y++],v.object=aa,v.x=F.x/F.w,v.y=F.y/F.w,v.z=F.z,v.rotation=aa.rotation.z,v.scale.x=aa.scale.x*Math.abs(v.x-(F.x+h.projectionMatrix.elements[0])/(F.w+h.projectionMatrix.elements[12])),
v.scale.y=aa.scale.y*Math.abs(v.y-(F.y+h.projectionMatrix.elements[5])/(F.w+h.projectionMatrix.elements[13])),v.material=aa.material,I.elements.push(v)));!0===L&&I.elements.sort(c);return I}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],j=c+f+b;0<j?(c=0.5/Math.sqrt(j+1),this.w=0.25/c,this.x=(i-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(i-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+i)/c,this.z=0.25*c);return this},inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,j=b.w;this.x=c*j+d*i-e*h+f*g;this.y=-c*i+d*j+e*g+f*h;this.z=c*h-
d*g+e*j+f*i;this.w=-c*g-d*h-e*i+f*j;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,j=i*c+g*e-h*d,k=i*d+h*c-f*e,m=i*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=j*i+c*-f+k*-h-m*-g;b.y=k*i+c*-g+m*-f-j*-h;b.z=m*i+c*-h+j*-g-k*-f;return b},slerpSelf:function(a,b){var c=
this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(0.0010>Math.abs(i))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,
this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var b=Math.acos(e),f=Math.sqrt(1-e*e);if(0.0010>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=
this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix3;b.getInverse(a).transpose();for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal).normalize();for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]).normalize();a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=
this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;
a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.normalize(),c.normal.copy(g)},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,
new THREE.Vector3]:d instanceof THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var f,g,h,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,n=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],i.sub(g,f),j.sub(a,f),i.crossSelf(j),
e[d.a].addSelf(i),e[d.b].addSelf(i),e[d.c].addSelf(i)):d instanceof THREE.Face4&&(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h=this.vertices[d.d],k.sub(h,f),j.sub(a,f),k.crossSelf(j),e[d.a].addSelf(k),e[d.b].addSelf(k),e[d.d].addSelf(k),m.sub(h,g),n.sub(f,g),m.crossSelf(n),e[d.b].addSelf(m),e[d.c].addSelf(m),e[d.d].addSelf(m))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal)):
d instanceof THREE.Face4&&(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal),e[d.d].addSelf(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},
computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<
b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,j;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,j=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(j)}g=this.morphNormals[a];f.vertices=
this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],j=g.vertexNormals[c],i.copy(e.normal),e instanceof THREE.Face3?(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2])):(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2]),j.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,
e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,y){h=a.vertices[b];i=a.vertices[c];j=a.vertices[d];k=g[e];m=g[f];n=g[y];q=i.x-h.x;p=j.x-h.x;s=i.y-h.y;u=j.y-h.y;t=i.z-h.z;A=j.z-h.z;x=m.u-k.u;r=n.u-k.u;C=m.v-k.v;w=n.v-k.v;v=1/(x*w-r*C);I.set((w*q-C*p)*v,(w*s-C*u)*v,(w*t-C*A)*v);O.set((x*p-r*q)*v,(x*u-r*s)*v,(x*A-r*t)*v);E[b].addSelf(I);E[c].addSelf(I);E[d].addSelf(I);D[b].addSelf(O);D[c].addSelf(O);D[d].addSelf(O)}var b,c,d,e,f,g,h,i,j,k,m,n,q,p,s,u,t,A,
x,r,C,w,v,y,E=[],D=[],I=new THREE.Vector3,O=new THREE.Vector3,F=new THREE.Vector3,M=new THREE.Vector3,J=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)E[b]=new THREE.Vector3,D[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var N=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<
f.vertexNormals.length;d++)J.copy(f.vertexNormals[d]),e=f[N[d]],y=E[e],F.copy(y),F.subSelf(J.multiplyScalar(J.dot(y))).normalize(),M.cross(f.vertexNormals[d],y),e=M.dot(D[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(F.x,F.y,F.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});
if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=
0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,i;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];
else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(i=this.faceVertexUvs[d][f])&&i.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=
b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.UV(e[g].u,e[g].v));a.faceVertexUvs[0].push(f)}return a},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,
Infinity,Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});
var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.attributes.position.array,
f=this.attributes.normal.array,g,h,i,j,k,m,n=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,s=new THREE.Vector3,u=new THREE.Vector3;if(this.attributes.index){var t=this.attributes.index.array,A=this.offsets;c=0;for(d=A.length;c<d;++c){b=A[c].start;g=A[c].count;var x=A[c].index;a=b;for(b+=g;a<b;a+=3)g=x+t[a],h=x+t[a+1],i=x+t[a+2],j=e[3*g],k=e[3*g+1],m=e[3*g+2],n.set(j,k,m),j=e[3*h],k=e[3*h+1],m=e[3*h+2],q.set(j,k,m),j=e[3*i],k=e[3*i+1],m=e[3*i+2],p.set(j,k,m),s.sub(p,q),u.sub(n,q),s.crossSelf(u),
f[3*g]+=s.x,f[3*g+1]+=s.y,f[3*g+2]+=s.z,f[3*h]+=s.x,f[3*h+1]+=s.y,f[3*h+2]+=s.z,f[3*i]+=s.x,f[3*i+1]+=s.y,f[3*i+2]+=s.z}}else{a=0;for(b=e.length;a<b;a+=9)j=e[a],k=e[a+1],m=e[a+2],n.set(j,k,m),j=e[a+3],k=e[a+4],m=e[a+5],q.set(j,k,m),j=e[a+6],k=e[a+7],m=e[a+8],p.set(j,k,m),s.sub(p,q),u.sub(n,q),s.crossSelf(u),f[a]=s.x,f[a+1]=s.y,f[a+2]=s.z,f[a+3]=s.x,f[a+4]=s.y,f[a+5]=s.z,f[a+6]=s.x,f[a+7]=s.y,f[a+8]=s.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,
b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){ha.x=d[3*a];ha.y=d[3*a+1];ha.z=d[3*a+2];Q.copy(ha);L=i[a];R.copy(L);R.subSelf(ha.multiplyScalar(ha.dot(L))).normalize();S.cross(Q,L);T=S.dot(j[a]);G=0>T?-1:1;h[4*a]=R.x;h[4*a+1]=R.y;h[4*a+2]=R.z;h[4*a+3]=G}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,i=[],j=[],g=0;g<f;g++)i[g]=new THREE.Vector3,j[g]=new THREE.Vector3;var k,m,n,q,p,s,u,t,A,x,r,C,w,v,y,f=new THREE.Vector3,g=new THREE.Vector3,E,D,I,O,F,M,J,N=this.offsets;I=0;for(O=N.length;I<O;++I){D=
N[I].start;F=N[I].count;var P=N[I].index;E=D;for(D+=F;E<D;E+=3)F=P+b[E],M=P+b[E+1],J=P+b[E+2],k=c[3*F],m=c[3*F+1],n=c[3*F+2],q=c[3*M],p=c[3*M+1],s=c[3*M+2],u=c[3*J],t=c[3*J+1],A=c[3*J+2],x=e[2*F],r=e[2*F+1],C=e[2*M],w=e[2*M+1],v=e[2*J],y=e[2*J+1],q-=k,k=u-k,p-=m,m=t-m,s-=n,n=A-n,C-=x,x=v-x,w-=r,r=y-r,y=1/(C*r-x*w),f.set((r*q-w*k)*y,(r*p-w*m)*y,(r*s-w*n)*y),g.set((C*k-x*q)*y,(C*m-x*p)*y,(C*n-x*s)*y),i[F].addSelf(f),i[M].addSelf(f),i[J].addSelf(f),j[F].addSelf(g),j[M].addSelf(g),j[J].addSelf(g)}var R=
new THREE.Vector3,S=new THREE.Vector3,ha=new THREE.Vector3,Q=new THREE.Vector3,G,L,T;I=0;for(O=N.length;I<O;++I){D=N[I].start;F=N[I].count;P=N[I].index;E=D;for(D+=F;E<D;E+=3)F=P+b[E],M=P+b[E+1],J=P+b[E+2],a(F),a(M),a(J)}this.tangentsNeedUpdate=this.hasTangents=!0}},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,j,k,m,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;j=this.points[c[0]];k=this.points[c[1]];m=this.points[c[2]];n=this.points[c[3]];h=g*g;i=g*h;d.x=b(j.x,k.x,m.x,n.x,g,h,i);d.y=b(j.y,k.y,m.y,n.y,g,h,i);d.z=b(j.z,k.z,m.z,n.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,k=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=k.chunks[b]-k.chunks[b-1];g=Math.ceil(a*c/k.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,i,j,u){var t=f.toLowerCase().endsWith(".dds"),A=b+"/"+f;if(t){var x=THREE.ImageUtils.loadCompressedTexture(A);a[e]=x}else x=document.createElement("canvas"),a[e]=new THREE.Texture(x);a[e].sourceFile=f;h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[e].wrapT=THREE.RepeatWrapping));i&&a[e].offset.set(i[0],i[1]);j&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},
void 0!==f[j[0]]&&(a[e].wrapS=f[j[0]]),void 0!==f[j[1]]&&(a[e].wrapT=f[j[1]]));u&&(a[e].anisotropy=u);if(!t){var r=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);r.image.width=a;r.image.height=b;r.image.getContext("2d").drawImage(this,0,0,a,b)}else r.image=this;r.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=A}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",i={color:15658734,opacity:1,
map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var j=a.shading.toLowerCase();"phong"===j?h="MeshPhongMaterial":"basic"===j&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(i.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)i.transparent=a.transparent;void 0!==a.depthTest&&(i.depthTest=a.depthTest);void 0!==a.depthWrite&&(i.depthWrite=a.depthWrite);void 0!==a.visible&&(i.visible=a.visible);void 0!==a.flipSided&&(i.side=THREE.BackSide);
void 0!==a.doubleSided&&(i.side=THREE.DoubleSide);void 0!==a.wireframe&&(i.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?i.vertexColors=THREE.FaceColors:a.vertexColors&&(i.vertexColors=THREE.VertexColors));a.colorDiffuse?i.color=f(a.colorDiffuse):a.DbgColor&&(i.color=a.DbgColor);a.colorSpecular&&(i.specular=f(a.colorSpecular));a.colorAmbient&&(i.ambient=f(a.colorAmbient));a.transparency&&(i.opacity=a.transparency);a.specularCoef&&(i.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(i,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(i.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,j=THREE.UniformsUtils.clone(h.uniforms),j.tNormal.value=i.normalMap,a.mapNormalFactor&&j.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),i.map&&(j.tDiffuse.value=i.map,j.enableDiffuse.value=!0),i.specularMap&&(j.tSpecular.value=i.specularMap,j.enableSpecular.value=!0),i.lightMap&&(j.tAO.value=i.lightMap,j.enableAO.value=!0),j.uDiffuseColor.value.setHex(i.color),
j.uSpecularColor.value.setHex(i.specular),j.uAmbientColor.value.setHex(i.ambient),j.uShininess.value=i.shininess,void 0!==i.opacity&&(j.uOpacity.value=i.opacity),i=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:j,lights:!0,fog:!0})):i=new THREE[h](i);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c&&"string"===typeof c?c:this.extractUrlBase(a),d=d&&"string"===typeof d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(){var b,c,d,e,j,k,m,n,q,p,s,u,t,A,x,r;function C(a){return a%4?4-a%4:0}function w(a,b){return(new Uint8Array(a,b,1))[0]}function v(a,b){return(new Uint32Array(a,b,1))[0]}function y(b,c){var d,e,f,g,h,i,k,j=new Uint32Array(a,c,3*b);for(d=0;d<b;d++)e=j[3*d],f=j[3*d+1],g=j[3*d+2],h=P[2*e],e=P[2*e+1],i=P[2*f],k=P[2*f+1],f=P[2*g],g=P[2*g+1],M.faceVertexUvs[0].push([new THREE.UV(h,e),new THREE.UV(i,k),new THREE.UV(f,g)])}function E(b,
c){var d,e,f,g,h,i,k,j,n,m=new Uint32Array(a,c,4*b);for(d=0;d<b;d++)e=m[4*d],f=m[4*d+1],g=m[4*d+2],h=m[4*d+3],i=P[2*e],e=P[2*e+1],k=P[2*f],j=P[2*f+1],f=P[2*g],n=P[2*g+1],g=P[2*h],h=P[2*h+1],M.faceVertexUvs[0].push([new THREE.UV(i,e),new THREE.UV(k,j),new THREE.UV(f,n),new THREE.UV(g,h)])}function D(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],M.faces.push(new THREE.Face3(e,f,g,null,null,h))}function I(b,c,d){for(var e,
f,g,h,i,c=new Uint32Array(a,c,4*b),k=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=k[d],M.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function O(b,c,d,e){for(var f,g,h,i,k,j,n,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),m=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];k=d[3*e];j=d[3*e+1];n=d[3*e+2];i=m[e];var q=N[3*j],r=N[3*j+1];j=N[3*j+2];var p=N[3*n],s=N[3*n+1];n=N[3*n+2];M.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(N[3*
k],N[3*k+1],N[3*k+2]),new THREE.Vector3(q,r,j),new THREE.Vector3(p,s,n)],null,i))}}function F(b,c,d,e){for(var f,g,h,i,k,j,n,m,q,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),r=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];j=d[4*e];n=d[4*e+1];m=d[4*e+2];q=d[4*e+3];k=r[e];var p=N[3*n],s=N[3*n+1];n=N[3*n+2];var t=N[3*m],u=N[3*m+1];m=N[3*m+2];var v=N[3*q],x=N[3*q+1];q=N[3*q+2];M.faces.push(new THREE.Face4(f,g,h,i,[new THREE.Vector3(N[3*j],N[3*j+1],N[3*j+2]),new THREE.Vector3(p,
s,n),new THREE.Vector3(t,u,m),new THREE.Vector3(v,x,q)],null,k))}}var M=this,J=0,N=[],P=[],R,S,ha;THREE.Geometry.call(this);r=a;S=J;A=new Uint8Array(r,S,12);p="";for(t=0;12>t;t++)p+=String.fromCharCode(A[S+t]);b=w(r,S+12);w(r,S+13);w(r,S+14);w(r,S+15);c=w(r,S+16);d=w(r,S+17);e=w(r,S+18);j=w(r,S+19);k=v(r,S+20);m=v(r,S+20+4);n=v(r,S+20+8);q=v(r,S+20+12);p=v(r,S+20+16);s=v(r,S+20+20);u=v(r,S+20+24);t=v(r,S+20+28);A=v(r,S+20+32);x=v(r,S+20+36);r=v(r,S+20+40);J+=b;S=3*c+j;ha=4*c+j;R=q*S;b=p*(S+3*d);c=
s*(S+3*e);j=u*(S+3*d+3*e);S=t*ha;d=A*(ha+4*d);e=x*(ha+4*e);ha=J;var J=new Float32Array(a,J,3*k),Q,G,L,T;for(Q=0;Q<k;Q++)G=J[3*Q],L=J[3*Q+1],T=J[3*Q+2],M.vertices.push(new THREE.Vector3(G,L,T));k=J=ha+3*k*Float32Array.BYTES_PER_ELEMENT;if(m){J=new Int8Array(a,J,3*m);for(ha=0;ha<m;ha++)Q=J[3*ha],G=J[3*ha+1],L=J[3*ha+2],N.push(Q/127,G/127,L/127)}J=k+3*m*Int8Array.BYTES_PER_ELEMENT;m=J+=C(3*m);if(n){k=new Float32Array(a,J,2*n);for(J=0;J<n;J++)ha=k[2*J],Q=k[2*J+1],P.push(ha,Q)}n=J=m+2*n*Float32Array.BYTES_PER_ELEMENT;
R=n+R+C(2*q);m=R+b+C(2*p);b=m+c+C(2*s);c=b+j+C(2*u);S=c+S+C(2*t);j=S+d+C(2*A);d=j+e+C(2*x);s&&(e=m+3*s*Uint32Array.BYTES_PER_ELEMENT,D(s,m,e+3*s*Uint32Array.BYTES_PER_ELEMENT),y(s,e));u&&(s=b+3*u*Uint32Array.BYTES_PER_ELEMENT,e=s+3*u*Uint32Array.BYTES_PER_ELEMENT,O(u,b,s,e+3*u*Uint32Array.BYTES_PER_ELEMENT),y(u,e));x&&(u=j+4*x*Uint32Array.BYTES_PER_ELEMENT,I(x,j,u+4*x*Uint32Array.BYTES_PER_ELEMENT),E(x,u));r&&(x=d+4*r*Uint32Array.BYTES_PER_ELEMENT,u=x+4*r*Uint32Array.BYTES_PER_ELEMENT,F(r,d,x,u+4*
r*Uint32Array.BYTES_PER_ELEMENT),E(r,u));q&&D(q,n,n+3*q*Uint32Array.BYTES_PER_ELEMENT);p&&(q=R+3*p*Uint32Array.BYTES_PER_ELEMENT,O(p,R,q,q+3*p*Uint32Array.BYTES_PER_ELEMENT));t&&I(t,c,c+4*t*Uint32Array.BYTES_PER_ELEMENT);A&&(p=S+4*A*Uint32Array.BYTES_PER_ELEMENT,F(A,S,p,p+4*A*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals()};e.prototype=Object.create(THREE.Geometry.prototype);e=new e(c);c=this.initMaterials(d,c);this.needsTangents(c)&&e.computeTangents();b(e,c)};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.withCredentials=this.withCredentials;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===
f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1,f,g,h,i,j,k,m,n,q,p,s,u,t,A,x,r=a.faces;p=a.vertices;var C=a.normals,w=a.colors,v=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&v++;for(f=0;f<v;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];i=0;for(j=p.length;i<j;)k=new THREE.Vector3,k.x=p[i++]*e,k.y=p[i++]*e,k.z=p[i++]*e,d.vertices.push(k);i=0;for(j=r.length;i<j;){p=r[i++];k=p&1;h=p&2;f=p&4;g=p&8;n=p&16;m=p&32;s=p&64;p&=128;k?(u=new THREE.Face4,
u.a=r[i++],u.b=r[i++],u.c=r[i++],u.d=r[i++],k=4):(u=new THREE.Face3,u.a=r[i++],u.b=r[i++],u.c=r[i++],k=3);h&&(h=r[i++],u.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<v;f++)t=a.uvs[f],q=r[i++],x=t[2*q],q=t[2*q+1],d.faceUvs[f][h]=new THREE.UV(x,q);if(g)for(f=0;f<v;f++){t=a.uvs[f];A=[];for(g=0;g<k;g++)q=r[i++],x=t[2*q],q=t[2*q+1],A[g]=new THREE.UV(x,q);d.faceVertexUvs[f][h]=A}n&&(n=3*r[i++],g=new THREE.Vector3,g.x=C[n++],g.y=C[n++],g.z=C[n],u.normal=g);if(m)for(f=0;f<k;f++)n=3*r[i++],g=new THREE.Vector3,
g.x=C[n++],g.y=C[n++],g.z=C[n],u.vertexNormals.push(g);s&&(m=r[i++],m=new THREE.Color(w[m]),u.color=m);if(p)for(f=0;f<k;f++)m=r[i++],m=new THREE.Color(w[m]),u.vertexColors.push(m);d.faces.push(u)}if(a.skinWeights){i=0;for(j=a.skinWeights.length;i<j;i+=2)r=a.skinWeights[i],C=a.skinWeights[i+1],d.skinWeights.push(new THREE.Vector4(r,C,0,0))}if(a.skinIndices){i=0;for(j=a.skinIndices.length;i<j;i+=2)r=a.skinIndices[i],C=a.skinIndices[i+1],d.skinIndices.push(new THREE.Vector4(r,C,0,0))}d.bones=a.bones;
d.animation=a.animation;if(void 0!==a.morphTargets){i=0;for(j=a.morphTargets.length;i<j;i++){d.morphTargets[i]={};d.morphTargets[i].name=a.morphTargets[i].name;d.morphTargets[i].vertices=[];w=d.morphTargets[i].vertices;v=a.morphTargets[i].vertices;r=0;for(C=v.length;r<C;r+=3)p=new THREE.Vector3,p.x=v[r]*e,p.y=v[r+1]*e,p.z=v[r+2]*e,w.push(p)}}if(void 0!==a.morphColors){i=0;for(j=a.morphColors.length;i<j;i++){d.morphColors[i]={};d.morphColors[i].name=a.morphColors[i].name;d.morphColors[i].colors=[];
C=d.morphColors[i].colors;w=a.morphColors[i].colors;e=0;for(r=w.length;e<r;e+=3)v=new THREE.Color(16755200),v.setRGB(w[e],w[e+1],w[e+2]),C.push(v)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:m+"/"+a}function e(){f(Q.scene,L.objects)}function f(a,b){for(var c in b)if(void 0===Q.objects[c]){var e=b[c],g=null;if(e.type&&e.type in k.hierarchyHandlerMap&&void 0===e.loading){var i={},j;for(j in u)"type"!==j&&"url"!==j&&(i[j]=u[j]);D=Q.materials[e.material];e.loading=!0;var n=k.hierarchyHandlerMap[e.type].loaderObject;n.addEventListener?(n.addEventListener("load",h(c,a,D,e)),n.load(d(e.url,L.urlBaseType))):
n.options?n.load(d(e.url,L.urlBaseType),h(c,a,D,e)):n.load(d(e.url,L.urlBaseType),h(c,a,D,e),i)}else if(void 0!==e.geometry){if(E=Q.geometries[e.geometry]){g=!1;D=Q.materials[e.material];g=D instanceof THREE.ShaderMaterial;x=e.position;r=e.rotation;C=e.quaternion;w=e.scale;t=e.matrix;C=0;e.material||(D=new THREE.MeshFaceMaterial(Q.face_materials[e.geometry]));D instanceof THREE.MeshFaceMaterial&&0===D.materials.length&&(D=new THREE.MeshFaceMaterial(Q.face_materials[e.geometry]));if(D instanceof THREE.MeshFaceMaterial)for(i=
0;i<D.materials.length;i++)g=g||D.materials[i]instanceof THREE.ShaderMaterial;g&&E.computeTangents();e.skin?g=new THREE.SkinnedMesh(E,D):e.morph?(g=new THREE.MorphAnimMesh(E,D),void 0!==e.duration&&(g.duration=e.duration),void 0!==e.time&&(g.time=e.time),void 0!==e.mirroredLoop&&(g.mirroredLoop=e.mirroredLoop),D.morphNormals&&E.computeMorphNormals()):g=new THREE.Mesh(E,D);g.name=c;t?(g.matrixAutoUpdate=!1,g.matrix.set(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],
t[15])):(g.position.set(x[0],x[1],x[2]),C?(g.quaternion.set(C[0],C[1],C[2],C[3]),g.useQuaternion=!0):g.rotation.set(r[0],r[1],r[2]),g.scale.set(w[0],w[1],w[2]));g.visible=e.visible;g.castShadow=e.castShadow;g.receiveShadow=e.receiveShadow;a.add(g);Q.objects[c]=g}}else"DirectionalLight"===e.type||"PointLight"===e.type||"AmbientLight"===e.type?(J=void 0!==e.color?e.color:16777215,N=void 0!==e.intensity?e.intensity:1,"DirectionalLight"===e.type?(x=e.direction,M=new THREE.DirectionalLight(J,N),M.position.set(x[0],
x[1],x[2]),e.target&&(G.push({object:M,targetName:e.target}),M.target=null)):"PointLight"===e.type?(x=e.position,A=e.distance,M=new THREE.PointLight(J,N,A),M.position.set(x[0],x[1],x[2])):"AmbientLight"===e.type&&(M=new THREE.AmbientLight(J)),a.add(M),M.name=c,Q.lights[c]=M,Q.objects[c]=M):"PerspectiveCamera"===e.type||"OrthographicCamera"===e.type?("PerspectiveCamera"===e.type?I=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far):"OrthographicCamera"===e.type&&(I=new THREE.OrthographicCamera(v.left,
v.right,v.top,v.bottom,v.near,v.far)),x=e.position,I.position.set(x[0],x[1],x[2]),a.add(I),I.name=c,Q.cameras[c]=I,Q.objects[c]=I):(x=e.position,r=e.rotation,C=e.quaternion,w=e.scale,C=0,g=new THREE.Object3D,g.name=c,g.position.set(x[0],x[1],x[2]),C?(g.quaternion.set(C[0],C[1],C[2],C[3]),g.useQuaternion=!0):g.rotation.set(r[0],r[1],r[2]),g.scale.set(w[0],w[1],w[2]),g.visible=void 0!==e.visible?e.visible:!1,a.add(g),Q.objects[c]=g,Q.empties[c]=g);if(g){if(void 0!==e.properties)for(var m in e.properties)g.properties[m]=
e.properties[m];void 0!==e.children&&f(g,e.children)}}}function g(a){return function(b,c){Q.geometries[a]=b;Q.face_materials[a]=c;e();P-=1;k.onLoadComplete();j()}}function h(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,g=d.position,h=d.rotation,i=d.quaternion,n=d.scale;f.position.set(g[0],g[1],g[2]);i?(f.quaternion.set(i[0],i[1],i[2],i[3]),f.useQuaternion=!0):f.rotation.set(h[0],h[1],h[2]);f.scale.set(n[0],n[1],n[2]);c&&f.traverse(function(a){a.material=c});b.add(f);Q.objects[a]=
f;e();P-=1;k.onLoadComplete();j()}}function i(a){return function(b,c){Q.geometries[a]=b;Q.face_materials[a]=c}}function j(){k.callbackProgress({totalModels:S,totalTextures:ha,loadedModels:S-P,loadedTextures:ha-R},Q);k.onLoadProgress();if(0===P&&0===R){for(var a=0;a<G.length;a++){var c=G[a],d=Q.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,Q.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(Q)}}var k=this,m=THREE.Loader.prototype.extractUrlBase(c),
n,q,p,s,u,t,A,x,r,C,w,v,y,E,D,I,O,F,M,J,N,P,R,S,ha,Q,G=[],L=a,T;for(T in this.geometryHandlerMap)a=this.geometryHandlerMap[T].loaderClass,this.geometryHandlerMap[T].loaderObject=new a;for(T in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[T].loaderClass,this.hierarchyHandlerMap[T].loaderObject=new a;R=P=0;Q={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(L.transform&&(T=L.transform.position,a=L.transform.rotation,
c=L.transform.scale,T&&Q.scene.position.set(T[0],T[1],T[2]),a&&Q.scene.rotation.set(a[0],a[1],a[2]),c&&Q.scene.scale.set(c[0],c[1],c[2]),T||a||c))Q.scene.updateMatrix(),Q.scene.updateMatrixWorld();T=function(a){return function(){R-=a;j();k.onLoadComplete()}};for(p in L.fogs)a=L.fogs[p],"linear"===a.type?O=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(O=new THREE.FogExp2(0,a.density)),v=a.color,O.color.setRGB(v[0],v[1],v[2]),Q.fogs[p]=O;for(n in L.geometries)u=L.geometries[n],u.type in this.geometryHandlerMap&&
(P+=1,k.onLoadStart());for(var da in L.objects)p=L.objects[da],p.type&&p.type in this.hierarchyHandlerMap&&(P+=1,k.onLoadStart());S=P;for(n in L.geometries)if(u=L.geometries[n],"cube"===u.type)E=new THREE.CubeGeometry(u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments),Q.geometries[n]=E;else if("plane"===u.type)E=new THREE.PlaneGeometry(u.width,u.height,u.widthSegments,u.heightSegments),Q.geometries[n]=E;else if("sphere"===u.type)E=new THREE.SphereGeometry(u.radius,u.widthSegments,
u.heightSegments),Q.geometries[n]=E;else if("cylinder"===u.type)E=new THREE.CylinderGeometry(u.topRad,u.botRad,u.height,u.radSegs,u.heightSegs),Q.geometries[n]=E;else if("torus"===u.type)E=new THREE.TorusGeometry(u.radius,u.tube,u.segmentsR,u.segmentsT),Q.geometries[n]=E;else if("icosahedron"===u.type)E=new THREE.IcosahedronGeometry(u.radius,u.subdivisions),Q.geometries[n]=E;else if(u.type in this.geometryHandlerMap){da={};for(F in u)"type"!==F&&"url"!==F&&(da[F]=u[F]);this.geometryHandlerMap[u.type].loaderObject.load(d(u.url,
L.urlBaseType),g(n),da)}else"embedded"===u.type&&(da=L.embeds[u.id],da.metadata=L.metadata,da&&this.geometryHandlerMap.ascii.loaderObject.createModel(da,i(n),""));for(s in L.textures)if(n=L.textures[s],n.url instanceof Array){R+=n.url.length;for(F=0;F<n.url.length;F++)k.onLoadStart()}else R+=1,k.onLoadStart();ha=R;for(s in L.textures){n=L.textures[s];void 0!==n.mapping&&void 0!==THREE[n.mapping]&&(n.mapping=new THREE[n.mapping]);if(n.url instanceof Array){da=n.url.length;p=[];for(F=0;F<da;F++)p[F]=
d(n.url[F],L.urlBaseType);F=(F=p[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(p,n.mapping,T(da)):THREE.ImageUtils.loadTextureCube(p,n.mapping,T(da))}else F=n.url.toLowerCase().endsWith(".dds"),da=d(n.url,L.urlBaseType),p=T(1),F=F?THREE.ImageUtils.loadCompressedTexture(da,n.mapping,p):THREE.ImageUtils.loadTexture(da,n.mapping,p),void 0!==THREE[n.minFilter]&&(F.minFilter=THREE[n.minFilter]),void 0!==THREE[n.magFilter]&&(F.magFilter=THREE[n.magFilter]),n.anisotropy&&(F.anisotropy=
n.anisotropy),n.repeat&&(F.repeat.set(n.repeat[0],n.repeat[1]),1!==n.repeat[0]&&(F.wrapS=THREE.RepeatWrapping),1!==n.repeat[1]&&(F.wrapT=THREE.RepeatWrapping)),n.offset&&F.offset.set(n.offset[0],n.offset[1]),n.wrap&&(da={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==da[n.wrap[0]]&&(F.wrapS=da[n.wrap[0]]),void 0!==da[n.wrap[1]]&&(F.wrapT=da[n.wrap[1]]));Q.textures[s]=F}for(q in L.materials){t=L.materials[q];for(y in t.parameters)"envMap"===y||"map"===y||"lightMap"===y||
"bumpMap"===y?t.parameters[y]=Q.textures[t.parameters[y]]:"shading"===y?t.parameters[y]="flat"===t.parameters[y]?THREE.FlatShading:THREE.SmoothShading:"side"===y?t.parameters[y]="double"==t.parameters[y]?THREE.DoubleSide:"back"==t.parameters[y]?THREE.BackSide:THREE.FrontSide:"blending"===y?t.parameters[y]=t.parameters[y]in THREE?THREE[t.parameters[y]]:THREE.NormalBlending:"combine"===y?t.parameters[y]="MixOperation"==t.parameters[y]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===y?"face"==
t.parameters[y]?t.parameters[y]=THREE.FaceColors:t.parameters[y]&&(t.parameters[y]=THREE.VertexColors):"wrapRGB"===y&&(s=t.parameters[y],t.parameters[y]=new THREE.Vector3(s[0],s[1],s[2]));void 0!==t.parameters.opacity&&1>t.parameters.opacity&&(t.parameters.transparent=!0);t.parameters.normalMap?(s=THREE.ShaderUtils.lib.normal,T=THREE.UniformsUtils.clone(s.uniforms),n=t.parameters.color,F=t.parameters.specular,da=t.parameters.ambient,p=t.parameters.shininess,T.tNormal.value=Q.textures[t.parameters.normalMap],
t.parameters.normalScale&&T.uNormalScale.value.set(t.parameters.normalScale[0],t.parameters.normalScale[1]),t.parameters.map&&(T.tDiffuse.value=t.parameters.map,T.enableDiffuse.value=!0),t.parameters.envMap&&(T.tCube.value=t.parameters.envMap,T.enableReflection.value=!0,T.uReflectivity.value=t.parameters.reflectivity),t.parameters.lightMap&&(T.tAO.value=t.parameters.lightMap,T.enableAO.value=!0),t.parameters.specularMap&&(T.tSpecular.value=Q.textures[t.parameters.specularMap],T.enableSpecular.value=
!0),t.parameters.displacementMap&&(T.tDisplacement.value=Q.textures[t.parameters.displacementMap],T.enableDisplacement.value=!0,T.uDisplacementBias.value=t.parameters.displacementBias,T.uDisplacementScale.value=t.parameters.displacementScale),T.uDiffuseColor.value.setHex(n),T.uSpecularColor.value.setHex(F),T.uAmbientColor.value.setHex(da),T.uShininess.value=p,t.parameters.opacity&&(T.uOpacity.value=t.parameters.opacity),D=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,
uniforms:T,lights:!0,fog:!0})):D=new THREE[t.type](t.parameters);Q.materials[q]=D}for(q in L.materials)if(t=L.materials[q],t.parameters.materials){y=[];for(F=0;F<t.parameters.materials.length;F++)y.push(Q.materials[t.parameters.materials[F]]);Q.materials[q].materials=y}e();Q.cameras&&L.defaults.camera&&(Q.currentCamera=Q.cameras[L.defaults.camera]);Q.fogs&&L.defaults.fog&&(Q.scene.fog=Q.fogs[L.defaults.fog]);v=L.defaults.bgcolor;Q.bgColor=new THREE.Color;Q.bgColor.setRGB(v[0],v[1],v[2]);Q.bgColorAlpha=
L.defaults.bgalpha;k.callbackSync(Q);j()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(a,b,c,d,e,f,g,h,i){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(a){function b(a){A!==a&&(A=s.globalAlpha=a)}function c(a){x!==a&&(a===THREE.NormalBlending?s.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?s.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(s.globalCompositeOperation="darker"),x=a)}function d(a){r!==a&&(r=s.strokeStyle=a)}function e(a){C!==a&&(C=s.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},f=this,g,h,i,j=new THREE.Projector,k=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),m,n,q,p,s=k.getContext("2d"),u=new THREE.Color(0),t=0,A=1,x=0,r=null,C=null,w=null,v=null,y=null,E,D,I,O,F=new THREE.RenderableVertex,M=new THREE.RenderableVertex,J,N,P,R,S,ha,Q,G,L,T,da,ma,H=new THREE.Color,W=new THREE.Color,fa=new THREE.Color,X=new THREE.Color,ea=new THREE.Color,V=new THREE.Color,ga=new THREE.Color,aa={},fb={},Da,wa,ra,za,Wa,ab,Va,Sa,Xa,sb,ib=new THREE.Rectangle,xa=new THREE.Rectangle,Aa=new THREE.Rectangle,ob=!1,sa=new THREE.Color,Qa=new THREE.Color,
Ja=new THREE.Color,ya=new THREE.Vector3,ba,oa,tb,Ia,Ba,Ya,a=16;ba=document.createElement("canvas");ba.width=ba.height=2;oa=ba.getContext("2d");oa.fillStyle="rgba(0,0,0,1)";oa.fillRect(0,0,2,2);tb=oa.getImageData(0,0,2,2);Ia=tb.data;Ba=document.createElement("canvas");Ba.width=Ba.height=a;Ya=Ba.getContext("2d");Ya.translate(-a/2,-a/2);Ya.scale(a,a);a--;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){m=a;n=b;q=
Math.floor(m/2);p=Math.floor(n/2);k.width=m;k.height=n;ib.set(-q,-p,q,p);xa.set(-q,-p,q,p);A=1;x=0;y=v=w=C=r=null};this.setClearColor=function(a,b){u.copy(a);t=void 0!==b?b:1;xa.set(-q,-p,q,p)};this.setClearColorHex=function(a,b){u.setHex(a);t=void 0!==b?b:1;xa.set(-q,-p,q,p)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){s.setTransform(1,0,0,-1,q,p);!1===xa.isEmpty()&&(xa.minSelf(ib),xa.inflate(2),1>t&&s.clearRect(Math.floor(xa.getX()),Math.floor(xa.getY()),Math.floor(xa.getWidth()),
Math.floor(xa.getHeight())),0<t&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*u.r)+","+Math.floor(255*u.g)+","+Math.floor(255*u.b)+","+t+")"),s.fillRect(Math.floor(xa.getX()),Math.floor(xa.getY()),Math.floor(xa.getWidth()),Math.floor(xa.getHeight()))),xa.empty())};this.render=function(a,k){function n(a,b,c){for(var d=0,e=i.length;d<e;d++){var f=i[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),k=b.dot(h);0>=k||(k*=f.intensity,c.r+=g.r*k,
c.g+=g.g*k,c.b+=g.b*k)}else f instanceof THREE.PointLight&&(h=f.matrixWorld.getPosition(),k=b.dot(ya.sub(h,a).normalize()),0>=k||(k*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=k&&(k*=f.intensity,c.r+=g.r*k,c.g+=g.g*k,c.b+=g.b*k)))}}function l(a,d,e,g,h,i,j,l){f.info.render.vertices+=3;f.info.render.faces++;b(l.opacity);c(l.blending);J=a.positionScreen.x;N=a.positionScreen.y;P=d.positionScreen.x;R=d.positionScreen.y;S=e.positionScreen.x;ha=e.positionScreen.y;m(J,N,P,R,S,ha);(l instanceof
THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial)&&null===l.map&&null===l.map?(V.copy(l.color),ga.copy(l.emissive),l.vertexColors===THREE.FaceColors&&(V.r*=j.color.r,V.g*=j.color.g,V.b*=j.color.b),!0===ob?!1===l.wireframe&&l.shading==THREE.SmoothShading&&3==j.vertexNormalsLength?(W.r=fa.r=X.r=sa.r,W.g=fa.g=X.g=sa.g,W.b=fa.b=X.b=sa.b,n(j.v1.positionWorld,j.vertexNormalsWorld[0],W),n(j.v2.positionWorld,j.vertexNormalsWorld[1],fa),n(j.v3.positionWorld,j.vertexNormalsWorld[2],X),W.r=W.r*
V.r+ga.r,W.g=W.g*V.g+ga.g,W.b=W.b*V.b+ga.b,fa.r=fa.r*V.r+ga.r,fa.g=fa.g*V.g+ga.g,fa.b=fa.b*V.b+ga.b,X.r=X.r*V.r+ga.r,X.g=X.g*V.g+ga.g,X.b=X.b*V.b+ga.b,ea.r=0.5*(fa.r+X.r),ea.g=0.5*(fa.g+X.g),ea.b=0.5*(fa.b+X.b),ra=C(W,fa,X,ea),A(J,N,P,R,S,ha,0,0,1,0,0,1,ra)):(H.r=sa.r,H.g=sa.g,H.b=sa.b,n(j.centroidWorld,j.normalWorld,H),H.r=H.r*V.r+ga.r,H.g=H.g*V.g+ga.g,H.b=H.b*V.b+ga.b,!0===l.wireframe?t(H,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):u(H)):!0===l.wireframe?t(l.color,l.wireframeLinewidth,
l.wireframeLinecap,l.wireframeLinejoin):u(l.color)):l instanceof THREE.MeshBasicMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial?null!==l.map?l.map.mapping instanceof THREE.UVMapping&&(za=j.uvs[0],x(J,N,P,R,S,ha,za[g].u,za[g].v,za[h].u,za[h].v,za[i].u,za[i].v,l.map)):null!==l.envMap?l.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=k.matrixWorldInverse,ya.copy(j.vertexNormalsWorld[g]),Wa=0.5*(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])+
0.5,ab=0.5*(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])+0.5,ya.copy(j.vertexNormalsWorld[h]),Va=0.5*(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])+0.5,Sa=0.5*(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])+0.5,ya.copy(j.vertexNormalsWorld[i]),Xa=0.5*(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])+0.5,sb=0.5*(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])+0.5,x(J,N,P,R,S,ha,Wa,ab,Va,Sa,Xa,sb,l.envMap)):(H.copy(l.color),l.vertexColors===THREE.FaceColors&&
(H.r*=j.color.r,H.g*=j.color.g,H.b*=j.color.b),!0===l.wireframe?t(H,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):u(H)):l instanceof THREE.MeshDepthMaterial?(Da=k.near,wa=k.far,W.r=W.g=W.b=1-bb(a.positionScreen.z,Da,wa),fa.r=fa.g=fa.b=1-bb(d.positionScreen.z,Da,wa),X.r=X.g=X.b=1-bb(e.positionScreen.z,Da,wa),ea.r=0.5*(fa.r+X.r),ea.g=0.5*(fa.g+X.g),ea.b=0.5*(fa.b+X.b),ra=C(W,fa,X,ea),A(J,N,P,R,S,ha,0,0,1,0,0,1,ra)):l instanceof THREE.MeshNormalMaterial&&(H.r=Ga(j.normalWorld.x),H.g=Ga(j.normalWorld.y),
H.b=Ga(j.normalWorld.z),!0===l.wireframe?t(H,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):u(H))}function m(a,b,c,d,e,f){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(e,f);s.closePath()}function r(a,b,c,d,e,f,g,h){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(e,f);s.lineTo(g,h);s.closePath()}function t(a,b,c,e){w!==b&&(w=s.lineWidth=b);v!==c&&(v=s.lineCap=c);y!==e&&(y=s.lineJoin=e);d(a.getContextStyle());s.stroke();Aa.inflate(2*b)}function u(a){e(a.getContextStyle());s.fill()}
function x(a,b,c,d,f,g,h,i,k,j,l,n,m){if(!(m instanceof THREE.DataTexture||void 0===m.image||0==m.image.width)){if(!0===m.needsUpdate){var Ga=m.wrapS==THREE.RepeatWrapping,q=m.wrapT==THREE.RepeatWrapping;aa[m.id]=s.createPattern(m.image,!0===Ga&&!0===q?"repeat":!0===Ga&&!1===q?"repeat-x":!1===Ga&&!0===q?"repeat-y":"no-repeat");m.needsUpdate=!1}void 0===aa[m.id]?e("rgba(0,0,0,1)"):e(aa[m.id]);var Ga=m.offset.x/m.repeat.x,q=m.offset.y/m.repeat.y,r=m.image.width*m.repeat.x,p=m.image.height*m.repeat.y,
h=(h+Ga)*r,i=(1-i+q)*p,c=c-a,d=d-b,f=f-a,g=g-b,k=(k+Ga)*r-h,j=(1-j+q)*p-i,l=(l+Ga)*r-h,n=(1-n+q)*p-i,Ga=k*n-l*j;0===Ga?(void 0===fb[m.id]&&(b=document.createElement("canvas"),b.width=m.image.width,b.height=m.image.height,b=b.getContext("2d"),b.drawImage(m.image,0,0),fb[m.id]=b.getImageData(0,0,m.image.width,m.image.height).data),b=fb[m.id],h=4*(Math.floor(h)+Math.floor(i)*m.image.width),H.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),u(H)):(Ga=1/Ga,m=(n*c-j*f)*Ga,j=(n*d-j*g)*Ga,c=(k*f-l*c)*Ga,d=(k*g-l*d)*
Ga,a=a-m*h-c*i,h=b-j*h-d*i,s.save(),s.transform(m,j,c,d,a,h),s.fill(),s.restore())}}function A(a,b,c,d,e,f,g,h,i,k,j,l,n){var m,Ga;m=n.width-1;Ga=n.height-1;g*=m;h*=Ga;c-=a;d-=b;e-=a;f-=b;i=i*m-g;k=k*Ga-h;j=j*m-g;l=l*Ga-h;Ga=1/(i*l-j*k);m=(l*c-k*e)*Ga;k=(l*d-k*f)*Ga;c=(i*e-j*c)*Ga;d=(i*f-j*d)*Ga;a=a-m*g-c*h;b=b-k*g-d*h;s.save();s.transform(m,k,c,d,a,b);s.clip();s.drawImage(n,0,0);s.restore()}function C(a,b,c,d){Ia[0]=255*a.r|0;Ia[1]=255*a.g|0;Ia[2]=255*a.b|0;Ia[4]=255*b.r|0;Ia[5]=255*b.g|0;Ia[6]=
255*b.b|0;Ia[8]=255*c.r|0;Ia[9]=255*c.g|0;Ia[10]=255*c.b|0;Ia[12]=255*d.r|0;Ia[13]=255*d.g|0;Ia[14]=255*d.b|0;oa.putImageData(tb,0,0);Ya.drawImage(ba,0,0);return Ba}function bb(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function Ga(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Wb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===k instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
else{var Xb,tc,pa,ja;!0===this.autoClear?this.clear():s.setTransform(1,0,0,-1,q,p);f.info.render.vertices=0;f.info.render.faces=0;g=j.projectScene(a,k,this.sortObjects,this.sortElements);h=g.elements;i=g.lights;ob=0<i.length;if(!0===ob){sa.setRGB(0,0,0);Qa.setRGB(0,0,0);Ja.setRGB(0,0,0);Xb=0;for(tc=i.length;Xb<tc;Xb++){ja=i[Xb];var qa=ja.color;ja instanceof THREE.AmbientLight?(sa.r+=qa.r,sa.g+=qa.g,sa.b+=qa.b):ja instanceof THREE.DirectionalLight?(Qa.r+=qa.r,Qa.g+=qa.g,Qa.b+=qa.b):ja instanceof THREE.PointLight&&
(Ja.r+=qa.r,Ja.g+=qa.g,Ja.b+=qa.b)}}Xb=0;for(tc=h.length;Xb<tc;Xb++)if(pa=h[Xb],ja=pa.material,!(void 0===ja||!1===ja.visible)){Aa.empty();if(pa instanceof THREE.RenderableParticle){E=pa;E.x*=q;E.y*=p;var qa=E,mb=pa;b(ja.opacity);c(ja.blending);var Db=void 0,Eb=void 0,xb=void 0,yb=void 0,dc=pa=void 0,Kc=void 0;ja instanceof THREE.ParticleBasicMaterial?null===ja.map?(xb=mb.object.scale.x,yb=mb.object.scale.y,xb*=mb.scale.x*q,yb*=mb.scale.y*p,Aa.set(qa.x-xb,qa.y-yb,qa.x+xb,qa.y+yb),!1!==ib.intersects(Aa)&&
(e(ja.color.getContextStyle()),s.save(),s.translate(qa.x,qa.y),s.rotate(-mb.rotation),s.scale(xb,yb),s.fillRect(-1,-1,2,2),s.restore())):(pa=ja.map.image,dc=pa.width>>1,Kc=pa.height>>1,xb=mb.scale.x*q,yb=mb.scale.y*p,Db=xb*dc,Eb=yb*Kc,Aa.set(qa.x-Db,qa.y-Eb,qa.x+Db,qa.y+Eb),!1!==ib.intersects(Aa)&&(s.save(),s.translate(qa.x,qa.y),s.rotate(-mb.rotation),s.scale(xb,-yb),s.translate(-dc,-Kc),s.drawImage(pa,0,0),s.restore())):ja instanceof THREE.ParticleCanvasMaterial&&(Db=mb.scale.x*q,Eb=mb.scale.y*
p,Aa.set(qa.x-Db,qa.y-Eb,qa.x+Db,qa.y+Eb),!1!==ib.intersects(Aa)&&(d(ja.color.getContextStyle()),e(ja.color.getContextStyle()),s.save(),s.translate(qa.x,qa.y),s.rotate(-mb.rotation),s.scale(Db,Eb),ja.program(s),s.restore()))}else pa instanceof THREE.RenderableLine?(E=pa.v1,D=pa.v2,E.positionScreen.x*=q,E.positionScreen.y*=p,D.positionScreen.x*=q,D.positionScreen.y*=p,Aa.addPoint(E.positionScreen.x,E.positionScreen.y),Aa.addPoint(D.positionScreen.x,D.positionScreen.y),!0===ib.intersects(Aa)&&(qa=E,
mb=D,b(ja.opacity),c(ja.blending),s.beginPath(),s.moveTo(qa.positionScreen.x,qa.positionScreen.y),s.lineTo(mb.positionScreen.x,mb.positionScreen.y),ja instanceof THREE.LineBasicMaterial&&(qa=ja.linewidth,w!==qa&&(w=s.lineWidth=qa),qa=ja.linecap,v!==qa&&(v=s.lineCap=qa),qa=ja.linejoin,y!==qa&&(y=s.lineJoin=qa),d(ja.color.getContextStyle()),s.stroke(),Aa.inflate(2*ja.linewidth)))):pa instanceof THREE.RenderableFace3?(E=pa.v1,D=pa.v2,I=pa.v3,E.positionScreen.x*=q,E.positionScreen.y*=p,D.positionScreen.x*=
q,D.positionScreen.y*=p,I.positionScreen.x*=q,I.positionScreen.y*=p,!0===ja.overdraw&&(Wb(E.positionScreen,D.positionScreen),Wb(D.positionScreen,I.positionScreen),Wb(I.positionScreen,E.positionScreen)),Aa.add3Points(E.positionScreen.x,E.positionScreen.y,D.positionScreen.x,D.positionScreen.y,I.positionScreen.x,I.positionScreen.y),!0===ib.intersects(Aa)&&l(E,D,I,0,1,2,pa,ja,a)):pa instanceof THREE.RenderableFace4&&(E=pa.v1,D=pa.v2,I=pa.v3,O=pa.v4,E.positionScreen.x*=q,E.positionScreen.y*=p,D.positionScreen.x*=
q,D.positionScreen.y*=p,I.positionScreen.x*=q,I.positionScreen.y*=p,O.positionScreen.x*=q,O.positionScreen.y*=p,F.positionScreen.copy(D.positionScreen),M.positionScreen.copy(O.positionScreen),!0===ja.overdraw&&(Wb(E.positionScreen,D.positionScreen),Wb(D.positionScreen,O.positionScreen),Wb(O.positionScreen,E.positionScreen),Wb(I.positionScreen,F.positionScreen),Wb(I.positionScreen,M.positionScreen)),Aa.addPoint(E.positionScreen.x,E.positionScreen.y),Aa.addPoint(D.positionScreen.x,D.positionScreen.y),
Aa.addPoint(I.positionScreen.x,I.positionScreen.y),Aa.addPoint(O.positionScreen.x,O.positionScreen.y),!0===ib.intersects(Aa)&&(qa=E,mb=D,Db=I,Eb=O,xb=F,yb=M,dc=a,f.info.render.vertices+=4,f.info.render.faces++,b(ja.opacity),c(ja.blending),void 0!==ja.map&&null!==ja.map||void 0!==ja.envMap&&null!==ja.envMap?(l(qa,mb,Eb,0,1,3,pa,ja,dc),l(xb,Db,yb,1,2,3,pa,ja,dc)):(J=qa.positionScreen.x,N=qa.positionScreen.y,P=mb.positionScreen.x,R=mb.positionScreen.y,S=Db.positionScreen.x,ha=Db.positionScreen.y,Q=Eb.positionScreen.x,
G=Eb.positionScreen.y,L=xb.positionScreen.x,T=xb.positionScreen.y,da=yb.positionScreen.x,ma=yb.positionScreen.y,ja instanceof THREE.MeshLambertMaterial||ja instanceof THREE.MeshPhongMaterial?(V.copy(ja.color),ga.copy(ja.emissive),ja.vertexColors===THREE.FaceColors&&(V.r*=pa.color.r,V.g*=pa.color.g,V.b*=pa.color.b),!0===ob?!1===ja.wireframe&&ja.shading==THREE.SmoothShading&&4==pa.vertexNormalsLength?(W.r=fa.r=X.r=ea.r=sa.r,W.g=fa.g=X.g=ea.g=sa.g,W.b=fa.b=X.b=ea.b=sa.b,n(pa.v1.positionWorld,pa.vertexNormalsWorld[0],
W),n(pa.v2.positionWorld,pa.vertexNormalsWorld[1],fa),n(pa.v4.positionWorld,pa.vertexNormalsWorld[3],X),n(pa.v3.positionWorld,pa.vertexNormalsWorld[2],ea),W.r=W.r*V.r+ga.r,W.g=W.g*V.g+ga.g,W.b=W.b*V.b+ga.b,fa.r=fa.r*V.r+ga.r,fa.g=fa.g*V.g+ga.g,fa.b=fa.b*V.b+ga.b,X.r=X.r*V.r+ga.r,X.g=X.g*V.g+ga.g,X.b=X.b*V.b+ga.b,ea.r=ea.r*V.r+ga.r,ea.g=ea.g*V.g+ga.g,ea.b=ea.b*V.b+ga.b,ra=C(W,fa,X,ea),m(J,N,P,R,Q,G),A(J,N,P,R,Q,G,0,0,1,0,0,1,ra),m(L,T,S,ha,da,ma),A(L,T,S,ha,da,ma,1,0,1,1,0,1,ra)):(H.r=sa.r,H.g=sa.g,
H.b=sa.b,n(pa.centroidWorld,pa.normalWorld,H),H.r=H.r*V.r+ga.r,H.g=H.g*V.g+ga.g,H.b=H.b*V.b+ga.b,r(J,N,P,R,S,ha,Q,G),!0===ja.wireframe?t(H,ja.wireframeLinewidth,ja.wireframeLinecap,ja.wireframeLinejoin):u(H)):(H.r=V.r+ga.r,H.g=V.g+ga.g,H.b=V.b+ga.b,r(J,N,P,R,S,ha,Q,G),!0===ja.wireframe?t(H,ja.wireframeLinewidth,ja.wireframeLinecap,ja.wireframeLinejoin):u(H))):ja instanceof THREE.MeshBasicMaterial?(H.copy(ja.color),ja.vertexColors===THREE.FaceColors&&(H.r*=pa.color.r,H.g*=pa.color.g,H.b*=pa.color.b),
r(J,N,P,R,S,ha,Q,G),!0===ja.wireframe?t(H,ja.wireframeLinewidth,ja.wireframeLinecap,ja.wireframeLinejoin):u(H)):ja instanceof THREE.MeshNormalMaterial?(H.r=Ga(pa.normalWorld.x),H.g=Ga(pa.normalWorld.y),H.b=Ga(pa.normalWorld.z),r(J,N,P,R,S,ha,Q,G),!0===ja.wireframe?t(H,ja.wireframeLinewidth,ja.wireframeLinecap,ja.wireframeLinejoin):u(H)):ja instanceof THREE.MeshDepthMaterial&&(Da=k.near,wa=k.far,W.r=W.g=W.b=1-bb(qa.positionScreen.z,Da,wa),fa.r=fa.g=fa.b=1-bb(mb.positionScreen.z,Da,wa),X.r=X.g=X.b=
1-bb(Eb.positionScreen.z,Da,wa),ea.r=ea.g=ea.b=1-bb(Db.positionScreen.z,Da,wa),ra=C(W,fa,X,ea),m(J,N,P,R,Q,G),A(J,N,P,R,Q,G,0,0,1,0,0,1,ra),m(L,T,S,ha,da,ma),A(L,T,S,ha,da,ma,1,0,1,1,0,1,ra)))));xa.addRectangle(Aa)}s.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",
value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)l.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?
g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=l.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,h=a.faces4,i=3*d.length+4*h.length,k=1*d.length+2*h.length,h=3*d.length+4*h.length,d=e(b,a),j=g(d),n=f(d),m=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*i);n&&(a.__normalArray=new Float32Array(3*i));c.hasTangents&&(a.__tangentArray=new Float32Array(4*i));m&&
(a.__colorArray=new Float32Array(3*i));if(j){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*i);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*i)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*i),a.__skinWeightArray=new Float32Array(4*i));a.__faceArray=new Uint16Array(3*k);a.__lineArray=new Uint16Array(2*h);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(j=a.numMorphTargets;c<
j;c++)a.__morphTargetsArrays.push(new Float32Array(3*i))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(j=a.numMorphNormals;c<j;c++)a.__morphNormalsArrays.push(new Float32Array(3*i))}a.__webglFaceCount=3*k;a.__webglLineCount=2*h;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var q in d.attributes){var k=d.attributes[q],c={},r;for(r in k)c[r]=k[r];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,h=1,"v2"===c.type?h=2:
"v3"===c.type?h=3:"v4"===c.type?h=4:"c"===c.type&&(h=3),c.size=h,c.array=new Float32Array(i*h),c.buffer=l.createBuffer(),c.buffer.belongsToAttribute=q,k.needsUpdate=!0,c.__original=k;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){var b,c,d;for(b in a.attributes)d="index"===b?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER,c=a.attributes[b],c.buffer=l.createBuffer(),l.bindBuffer(d,c.buffer),l.bufferData(d,c.array,l.STATIC_DRAW)}function i(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,k=i.length,j=a.__vertexArray,n=a.__colorArray,m=a.__sortArray,
q=a.verticesNeedUpdate,r=a.colorsNeedUpdate,p=a.__webglCustomAttributesList;if(c.sortParticles){Ba.copy(Ia);Ba.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],Ya.copy(e),Ba.multiplyVector3(Ya),m[d]=[Ya.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[m[d][1]],f=3*d,j[f]=e.x,j[f+1]=e.y,j[f+2]=e.z;for(d=0;d<k;d++)f=3*d,e=i[m[d][1]],n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(p){i=0;for(k=p.length;i<k;i++)if(h=p[i],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=
0;d<e;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(q)for(d=
0;d<g;d++)e=h[d],f=3*d,j[f]=e.x,j[f+1]=e.y,j[f+2]=e.z;if(r)for(d=0;d<k;d++)e=i[d],f=3*d,n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(p){i=0;for(k=p.length;i<k;i++)if(h=p[i],h.needsUpdate&&(void 0===h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=
0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}if(q||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,j,b);if(r||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,n,b);if(p){i=0;for(k=p.length;i<k;i++)if(h=p[i],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,
h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}}function j(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==e&&(l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.buffer),l.bufferData(l.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(l.bindBuffer(l.ARRAY_BUFFER,f.buffer),l.bufferData(l.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(l.bindBuffer(l.ARRAY_BUFFER,g.buffer),l.bufferData(l.ARRAY_BUFFER,g.array,b));
a.uvsNeedUpdate&&void 0!==h&&(l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==i&&(l.bindBuffer(l.ARRAY_BUFFER,i.buffer),l.bufferData(l.ARRAY_BUFFER,i.array,b));a.tangentsNeedUpdate&&void 0!==d&&(l.bindBuffer(l.ARRAY_BUFFER,d.buffer),l.bufferData(l.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function k(a){oa[a]||(l.enableVertexAttribArray(a),oa[a]=!0)}function m(){for(var a in oa)oa[a]&&(l.disableVertexAttribArray(a),
oa[a]=!1)}function n(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function q(a,b){return b[1]-a[1]}function p(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)aa=X=null,V=ga=ra=wa=Xa=Sa=za=-1,ub=!0,a[d].render(b,c,ya,ba),aa=X=null,V=ga=ra=wa=Xa=Sa=za=-1,ub=!0}function s(a,b,c,d,e,f,g,h){var i,k,j,l;b?(k=a.length-1,l=b=-1):(k=0,b=a.length,l=1);for(var n=k;n!==b;n+=l)if(i=a[n],i.render){k=i.object;j=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&H.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);
H.setDepthTest(i.depthTest);H.setDepthWrite(i.depthWrite);I(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}H.setMaterialFaces(i);j instanceof THREE.BufferGeometry?H.renderBufferDirect(d,e,f,i,j,k):H.renderBuffer(d,e,f,i,j,k)}}function u(a,b,c,d,e,f,g){for(var h,i,k=0,j=a.length;k<j;k++)if(h=a[k],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&H.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);H.setDepthTest(h.depthTest);H.setDepthWrite(h.depthWrite);I(h.polygonOffset,
h.polygonOffsetFactor,h.polygonOffsetUnits)}H.renderImmediateObject(c,d,e,h,i)}}function t(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function A(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function x(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function r(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function C(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function w(a,b,c,d,e){Da=0;d.needsUpdate&&
(d.program&&H.deallocateMaterial(d),H.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(H.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;g!==X&&(l.useProgram(g),X=g,f=!0);d.id!==V&&(V=d.id,f=!0);if(f||a!==aa)l.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==aa&&(aa=a);if(d.skinning)if(bb&&e.useVertexTexture){if(null!==h.boneTexture){var k=v();l.uniform1i(h.boneTexture,
k);H.setTexture(e.boneTexture,k)}}else null!==h.boneGlobalMatrices&&l.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(ub){for(var j=0,n=0,m=0,q,r,p,ba=ia,s=ba.directional.colors,t=ba.directional.positions,u=ba.point.colors,oa=ba.point.positions,
tb=ba.point.distances,x=ba.spot.colors,w=ba.spot.positions,A=ba.spot.distances,y=ba.spot.directions,C=ba.spot.anglesCos,Ia=ba.spot.exponents,F=ba.hemi.skyColors,G=ba.hemi.groundColors,Ba=ba.hemi.positions,I=0,L=0,J=0,Q=0,Ya=0,S=0,O=0,W=0,N=r=0,c=N=N=0,f=b.length;c<f;c++)k=b[c],k.onlyShadow||(q=k.color,p=k.intensity,r=k.distance,k instanceof THREE.AmbientLight?k.visible&&(H.gammaInput?(j+=q.r*q.r,n+=q.g*q.g,m+=q.b*q.b):(j+=q.r,n+=q.g,m+=q.b)):k instanceof THREE.DirectionalLight?(Ya+=1,k.visible&&(r=
3*I,H.gammaInput?E(s,r,q,p*p):D(s,r,q,p),lb.copy(k.matrixWorld.getPosition()),lb.subSelf(k.target.matrixWorld.getPosition()),lb.normalize(),t[r]=lb.x,t[r+1]=lb.y,t[r+2]=lb.z,I+=1)):k instanceof THREE.PointLight?(S+=1,k.visible&&(N=3*L,H.gammaInput?E(u,N,q,p*p):D(u,N,q,p),p=k.matrixWorld.getPosition(),oa[N]=p.x,oa[N+1]=p.y,oa[N+2]=p.z,tb[L]=r,L+=1)):k instanceof THREE.SpotLight?(O+=1,k.visible&&(N=3*J,H.gammaInput?E(x,N,q,p*p):D(x,N,q,p),p=k.matrixWorld.getPosition(),w[N]=p.x,w[N+1]=p.y,w[N+2]=p.z,
A[J]=r,lb.copy(p),lb.subSelf(k.target.matrixWorld.getPosition()),lb.normalize(),y[N]=lb.x,y[N+1]=lb.y,y[N+2]=lb.z,C[J]=Math.cos(k.angle),Ia[J]=k.exponent,J+=1)):k instanceof THREE.HemisphereLight&&(W+=1,k.visible&&(q=k.color,r=k.groundColor,N=3*Q,H.gammaInput?(p*=p,E(F,N,q,p),E(G,N,r,p)):(D(F,N,q,p),D(G,N,r,p)),lb.copy(k.matrixWorld.getPosition()),lb.normalize(),Ba[N]=lb.x,Ba[N+1]=lb.y,Ba[N+2]=lb.z,Q+=1)));c=3*I;for(f=Math.max(s.length,3*Ya);c<f;c++)s[c]=0;c=3*I;for(f=Math.max(t.length,3*Ya);c<f;c++)t[c]=
0;c=3*L;for(f=Math.max(u.length,3*S);c<f;c++)u[c]=0;c=3*L;for(f=Math.max(oa.length,3*S);c<f;c++)oa[c]=0;c=L;for(f=Math.max(tb.length,S);c<f;c++)tb[c]=0;c=3*J;for(f=Math.max(x.length,3*O);c<f;c++)x[c]=0;c=3*J;for(f=Math.max(w.length,3*O);c<f;c++)w[c]=0;c=3*J;for(f=Math.max(y.length,3*O);c<f;c++)y[c]=0;c=J;for(f=Math.max(C.length,O);c<f;c++)C[c]=0;c=J;for(f=Math.max(Ia.length,O);c<f;c++)Ia[c]=0;c=J;for(f=Math.max(A.length,O);c<f;c++)A[c]=0;c=3*Q;for(f=Math.max(F.length,3*W);c<f;c++)F[c]=0;c=3*Q;for(f=
Math.max(G.length,3*W);c<f;c++)G[c]=0;c=3*Q;for(f=Math.max(Ba.length,3*W);c<f;c++)Ba[c]=0;ba.directional.length=I;ba.point.length=L;ba.spot.length=J;ba.hemi.length=Q;ba.ambient[0]=j;ba.ambient[1]=n;ba.ambient[2]=m;ub=!1}c=ia;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;i.spotLightColor.value=
c.spot.colors;i.spotLightPosition.value=c.spot.positions;i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngleCos.value=c.spot.anglesCos;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=
d.opacity;H.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale);d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var T;d.map?T=d.map:d.specularMap?T=d.specularMap:d.normalMap?T=d.normalMap:d.bumpMap&&(T=d.bumpMap);void 0!==T&&(c=T.offset,T=T.repeat,i.offsetRepeat.value.set(c.x,c.y,T.x,T.y));
i.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity,i.dashSize.value=d.dashSize,i.totalSize.value=
d.dashSize+d.gapSize,i.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=R.height/2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,H.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),
d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(H.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&
i.shadowMatrix){c=T=0;for(f=b.length;c<f;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))i.shadowMap.value[T]=k.shadowMap,i.shadowMapSize.value[T]=k.shadowMapSize,i.shadowMatrix.value[T]=k.shadowMatrix,i.shadowDarkness.value[T]=k.shadowDarkness,i.shadowBias.value[T]=k.shadowBias,T++}b=d.uniformsList;i=0;for(T=b.length;i<T;i++)if(f=g.uniforms[b[i][1]])if(c=b[i][0],j=c.type,k=c.value,"i"===j)l.uniform1i(f,k);else if("f"===j)l.uniform1f(f,
k);else if("v2"===j)l.uniform2f(f,k.x,k.y);else if("v3"===j)l.uniform3f(f,k.x,k.y,k.z);else if("v4"===j)l.uniform4f(f,k.x,k.y,k.z,k.w);else if("c"===j)l.uniform3f(f,k.r,k.g,k.b);else if("iv1"===j)l.uniform1iv(f,k);else if("iv"===j)l.uniform3iv(f,k);else if("fv1"===j)l.uniform1fv(f,k);else if("fv"===j)l.uniform3fv(f,k);else if("v2v"===j){void 0===c._array&&(c._array=new Float32Array(2*k.length));j=0;for(n=k.length;j<n;j++)m=2*j,c._array[m]=k[j].x,c._array[m+1]=k[j].y;l.uniform2fv(f,c._array)}else if("v3v"===
j){void 0===c._array&&(c._array=new Float32Array(3*k.length));j=0;for(n=k.length;j<n;j++)m=3*j,c._array[m]=k[j].x,c._array[m+1]=k[j].y,c._array[m+2]=k[j].z;l.uniform3fv(f,c._array)}else if("v4v"===j){void 0===c._array&&(c._array=new Float32Array(4*k.length));j=0;for(n=k.length;j<n;j++)m=4*j,c._array[m]=k[j].x,c._array[m+1]=k[j].y,c._array[m+2]=k[j].z,c._array[m+3]=k[j].w;l.uniform4fv(f,c._array)}else if("m4"===j)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),l.uniformMatrix4fv(f,
!1,c._array);else if("m4v"===j){void 0===c._array&&(c._array=new Float32Array(16*k.length));j=0;for(n=k.length;j<n;j++)k[j].flattenToArrayOffset(c._array,16*j);l.uniformMatrix4fv(f,!1,c._array)}else if("t"===j){if(m=k,k=v(),l.uniform1i(f,k),m)if(m.image instanceof Array&&6===m.image.length){if(c=m,f=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=l.createTexture(),H.info.memory.textures++);l.activeTexture(l.TEXTURE0+f);l.bindTexture(l.TEXTURE_CUBE_MAP,
c.image.__webglTextureCube);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;k=[];for(j=0;6>j;j++)n=k,m=j,H.autoScaleCubemaps&&!f?(ba=c.image[j],t=ic,ba.width<=t&&ba.height<=t||(u=Math.max(ba.width,ba.height),s=Math.floor(ba.width*t/u),t=Math.floor(ba.height*t/u),u=document.createElement("canvas"),u.width=s,u.height=t,u.getContext("2d").drawImage(ba,0,0,ba.width,ba.height,0,0,s,t),ba=u)):ba=c.image[j],n[m]=ba;j=k[0];n=0===(j.width&j.width-1)&&0===(j.height&j.height-
1);m=P(c.format);ba=P(c.type);M(l.TEXTURE_CUBE_MAP,c,n);for(j=0;6>j;j++)if(f){t=k[j].mipmaps;u=0;for(oa=t.length;u<oa;u++)s=t[u],l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+j,u,m,s.width,s.height,0,s.data)}else l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,m,m,ba,k[j]);c.generateMipmaps&&n&&l.generateMipmap(l.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else l.activeTexture(l.TEXTURE0+f),l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?
(c=m,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture)):H.setTexture(m,k)}else if("tv"===j){void 0===c._array&&(c._array=[]);j=0;for(n=c.value.length;j<n;j++)c._array[j]=v();l.uniform1iv(f,c._array);j=0;for(n=c.value.length;j<n;j++)m=c.value[j],k=c._array[j],m&&H.setTexture(m,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof
THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&l.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}l.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&l.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&l.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function v(){var a=Da;a>=Gb&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+
Gb);Da+=1;return a}function y(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function E(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function D(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function I(a,b,c){sb!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),sb=a);if(a&&(ib!==b||xa!==c))l.polygonOffset(b,c),ib=b,xa=c}function O(a){for(var a=a.split("\n"),b=0,c=a.length;b<
c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function F(a,b){var c;"fragment"===a?c=l.createShader(l.FRAGMENT_SHADER):"vertex"===a&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(O(b)),null):c}function M(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,P(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,P(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,P(b.magFilter)),l.texParameteri(a,
l.TEXTURE_MIN_FILTER,P(b.minFilter))):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,N(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,N(b.minFilter)));if(Fb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))l.texParameterf(a,Fb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Sb)),b.__oldAnisotropy=b.anisotropy}function J(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?
(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function N(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?
l.NEAREST:l.LINEAR}function P(a){if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;
if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;
if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;
if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;if(void 0!==Hb){if(a===THREE.RGB_S3TC_DXT1_Format)return Hb.COMPRESSED_RGB_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT1_Format)return Hb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Hb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Hb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},R=void 0!==a.canvas?a.canvas:document.createElement("canvas"),S=void 0!==a.precision?a.precision:"highp",ha=void 0!==a.alpha?a.alpha:!0,Q=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,G=void 0!==a.antialias?
a.antialias:!1,L=void 0!==a.stencil?a.stencil:!0,T=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,da=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),ma=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=R;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapSoft=
this.shadowMapAutoUpdate=!0;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var H=this,W=[],fa=0,X=null,ea=null,V=-1,ga=null,aa=null,fb=0,Da=0,wa=-1,ra=-1,za=-1,Wa=-1,ab=-1,Va=-1,Sa=-1,Xa=-1,sb=null,ib=null,xa=null,Aa=null,ob=0,sa=0,Qa=0,
Ja=0,ya=0,ba=0,oa={},tb=new THREE.Frustum,Ia=new THREE.Matrix4,Ba=new THREE.Matrix4,Ya=new THREE.Vector4,lb=new THREE.Vector3,ub=!0,ia={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l,Fb,Hb;try{if(!(l=R.getContext("experimental-webgl",{alpha:ha,premultipliedAlpha:Q,antialias:G,stencil:L,
preserveDrawingBuffer:T})))throw"Error creating WebGL context.";}catch(Jc){console.error(Jc)}a=l.getExtension("OES_texture_float");ha=l.getExtension("OES_standard_derivatives");Fb=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Hb=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||
console.log("THREE.WebGLRenderer: Float textures not supported.");ha||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Fb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Hb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);
l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(da.r,da.g,da.b,ma);this.context=l;var Gb=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),ha=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);l.getParameter(l.MAX_TEXTURE_SIZE);var ic=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),Sb=Fb?l.getParameter(Fb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,wb=0<ha,bb=wb&&a;Hb&&l.getParameter(l.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return l};this.supportsVertexTextures=function(){return wb};this.getMaxAnisotropy=
function(){return Sb};this.setSize=function(a,b){R.width=a;R.height=b;this.setViewport(0,0,R.width,R.height)};this.setViewport=function(a,b,c,d){ob=void 0!==a?a:0;sa=void 0!==b?b:0;Qa=void 0!==c?c:R.width;Ja=void 0!==d?d:R.height;l.viewport(ob,sa,Qa,Ja)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=function(a,b){da.setHex(a);ma=b;l.clearColor(da.r,da.g,da.b,ma)};this.setClearColor=
function(a,b){da.copy(a);ma=b;l.clearColor(da.r,da.g,da.b,ma)};this.getClearColor=function(){return da};this.getClearAlpha=function(){return ma};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);
this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,a instanceof THREE.Mesh)for(var c in a.geometry.geometryGroups){var d=a.geometry.geometryGroups[c];l.deleteBuffer(d.__webglVertexBuffer);l.deleteBuffer(d.__webglNormalBuffer);l.deleteBuffer(d.__webglTangentBuffer);l.deleteBuffer(d.__webglColorBuffer);l.deleteBuffer(d.__webglUVBuffer);l.deleteBuffer(d.__webglUV2Buffer);l.deleteBuffer(d.__webglSkinIndicesBuffer);
l.deleteBuffer(d.__webglSkinWeightsBuffer);l.deleteBuffer(d.__webglFaceBuffer);l.deleteBuffer(d.__webglLineBuffer);var e=void 0,f=void 0;if(d.numMorphTargets){e=0;for(f=d.numMorphTargets;e<f;e++)l.deleteBuffer(d.__webglMorphTargetsBuffers[e])}if(d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)l.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d);H.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),
l.deleteBuffer(a.__webglNormalBuffer),b(a),H.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),l.deleteBuffer(a.__webglLineDistanceBuffer),b(a),H.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),b(a),H.info.memory.geometries--)};this.deallocateTexture=function(a){if(a.image&&a.image.__webglTextureCube)l.deleteTexture(a.image.__webglTextureCube);
else{if(!a.__webglInit)return;a.__webglInit=!1;l.deleteTexture(a.__webglTexture)}H.info.memory.textures--};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(l.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)l.deleteFramebuffer(a.__webglFramebuffer[b]),l.deleteRenderbuffer(a.__webglRenderbuffer[b]);else l.deleteFramebuffer(a.__webglFramebuffer),l.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;
if(b){a.program=void 0;var c,d,e=!1,a=0;for(c=W.length;a<c;a++)if(d=W[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=W.length;a<c;a++)d=W[a],d.program!==b&&e.push(d);W=e;l.deleteProgram(b);H.info.memory.programs--}}};this.updateShadowMap=function(a,b){X=null;V=ga=Xa=Sa=za=-1;ub=!0;ra=wa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=l.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&
(a.__webglNormalBuffer=l.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=l.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=l.createBuffer());a.hasPositions&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormals){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===
THREE.FlatShading){var d,e,f,g,h,i,k,j,n,m,q,p=3*a.count;for(q=0;q<p;q+=9)m=a.normalArray,d=m[q],e=m[q+1],f=m[q+2],g=m[q+3],i=m[q+4],j=m[q+5],h=m[q+6],k=m[q+7],n=m[q+8],d=(d+g+h)/3,e=(e+i+k)/3,f=(f+j+n)/3,m[q]=d,m[q+1]=e,m[q+2]=f,m[q+3]=d,m[q+4]=e,m[q+5]=f,m[q+6]=d,m[q+7]=e,m[q+8]=f}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer),
l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.uv),l.vertexAttribPointer(b.attributes.uv,2,l.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.color),l.vertexAttribPointer(b.attributes.color,3,l.FLOAT,!1,0,0));l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,
e,f){if(!1!==d.visible)if(c=w(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==ga&&(ga=d,b=!0),b&&m(),f instanceof THREE.Mesh)if(f=e.attributes.index){d=e.offsets;1<d.length&&(b=!0);for(var c=0,g=d.length;c<g;c++){var h=d[c].index;if(b){var i=e.attributes.position,j=i.itemSize;l.bindBuffer(l.ARRAY_BUFFER,i.buffer);k(a.position);l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,4*h*j);j=e.attributes.normal;if(0<=a.normal&&j){var n=j.itemSize;l.bindBuffer(l.ARRAY_BUFFER,j.buffer);
k(a.normal);l.vertexAttribPointer(a.normal,n,l.FLOAT,!1,0,4*h*n)}j=e.attributes.uv;0<=a.uv&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.uv),l.vertexAttribPointer(a.uv,n,l.FLOAT,!1,0,4*h*n));j=e.attributes.color;0<=a.color&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.color),l.vertexAttribPointer(a.color,n,l.FLOAT,!1,0,4*h*n));j=e.attributes.tangent;0<=a.tangent&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.tangent),l.vertexAttribPointer(a.tangent,n,l.FLOAT,
!1,0,4*h*n));l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.buffer)}l.drawElements(l.TRIANGLES,d[c].count,l.UNSIGNED_SHORT,2*d[c].start);H.info.render.calls++;H.info.render.vertices+=d[c].count;H.info.render.faces+=d[c].count/3}}else b&&(i=e.attributes.position,j=i.itemSize,l.bindBuffer(l.ARRAY_BUFFER,i.buffer),k(a.position),l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,0),j=e.attributes.normal,0<=a.normal&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.normal),l.vertexAttribPointer(a.normal,
n,l.FLOAT,!1,0,0)),j=e.attributes.uv,0<=a.uv&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.uv),l.vertexAttribPointer(a.uv,n,l.FLOAT,!1,0,0)),j=e.attributes.color,0<=a.color&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.color),l.vertexAttribPointer(a.color,n,l.FLOAT,!1,0,0)),j=e.attributes.tangent,0<=a.tangent&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.tangent),l.vertexAttribPointer(a.tangent,n,l.FLOAT,!1,0,0))),l.drawArrays(l.TRIANGLES,0,i.numItems/3),
H.info.render.calls++,H.info.render.vertices+=i.numItems/3,H.info.render.faces+=i.numItems/3/3;else f instanceof THREE.ParticleSystem&&b&&(i=e.attributes.position,j=i.itemSize,l.bindBuffer(l.ARRAY_BUFFER,i.buffer),k(a.position),l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,0),j=e.attributes.color,0<=a.color&&j&&(n=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),k(a.color),l.vertexAttribPointer(a.color,n,l.FLOAT,!1,0,0)),l.drawArrays(l.POINTS,0,i.numItems/3),H.info.render.calls++,H.info.render.points+=
i.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,h,c=w(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==ga&&(ga=c,a=!0);a&&m();if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),k(b.position),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),
k(c.position),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),k(c.position),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var i=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;)0<=c["morphTarget"+i]&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]),k(c["morphTarget"+i]),l.vertexAttribPointer(c["morphTarget"+i],3,l.FLOAT,
!1,0,0)),0<=c["morphNormal"+i]&&d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]),k(c["morphNormal"+i]),l.vertexAttribPointer(c["morphNormal"+i],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[h[i]],i++}else{h=[];g=f.morphTargetInfluences;var j,n=g.length;for(j=0;j<n;j++)i=g[j],0<i&&h.push([j,i]);h.length>d.numSupportedMorphTargets?(h.sort(q),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(q):0===h.length&&h.push([0,0]);for(i=0;i<
d.numSupportedMorphTargets;)h[i]?(j=h[i][0],0<=c["morphTarget"+i]&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[j]),k(c["morphTarget"+i]),l.vertexAttribPointer(c["morphTarget"+i],3,l.FLOAT,!1,0,0)),0<=c["morphNormal"+i]&&d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[j]),k(c["morphNormal"+i]),l.vertexAttribPointer(c["morphNormal"+i],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[j]):f.__webglMorphTargetInfluences[i]=0,i++}null!==d.program.uniforms.morphTargetInfluences&&
l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),k(b[c.buffer.belongsToAttribute]),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0))}0<=b.color&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),k(b.color),l.vertexAttribPointer(b.color,
3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer),k(b.normal),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglTangentBuffer),k(b.tangent),l.vertexAttribPointer(b.tangent,4,l.FLOAT,!1,0,0));0<=b.uv&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),k(b.uv),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0));0<=b.uv2&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer),k(b.uv2),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0));
d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),k(b.skinIndex),l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),k(b.skinWeight),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0));0<=b.lineDistance&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglLineDistanceBuffer),k(b.lineDistance),l.vertexAttribPointer(b.lineDistance,1,l.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,
d!==Aa&&(l.lineWidth(d),Aa=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)),H.info.render.calls++,H.info.render.vertices+=e.__webglFaceCount,H.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==Aa&&(l.lineWidth(d),Aa=
d),l.drawArrays(f,0,e.__webglLineCount),H.info.render.calls++):f instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,e.__webglParticleCount),H.info.render.calls++,H.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount),H.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,i=a.__lights,
k=a.fog;V=-1;ub=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Ia.multiply(b.projectionMatrix,b.matrixWorldInverse);tb.setFromMatrix(Ia);this.autoUpdateObjects&&this.initWebGLObjects(a);p(this.renderPluginsPre,a,b);H.info.render.calls=0;H.info.render.vertices=0;H.info.render.faces=0;H.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);
h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||tb.contains(g))){y(g,b);var j=f,m=j.buffer,q=void 0,r=q=void 0,r=j.object.material;if(r instanceof THREE.MeshFaceMaterial)q=m.materialIndex,0<=q&&(q=r.materials[q],q.transparent?(j.transparent=q,j.opaque=null):(j.opaque=q,j.transparent=null));else if(q=r)q.transparent?(j.transparent=q,j.opaque=null):(j.opaque=q,j.transparent=null);
f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Ya.copy(g.matrixWorld.getPosition()),Ia.multiplyVector3(Ya),f.z=Ya.z),f.id=g.id)}this.sortObjects&&h.sort(n);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(y(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),
this.setDepthWrite(d.depthWrite),I(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),s(a.__webglObjects,!1,"",b,i,k,!0,d),u(a.__webglObjectsImmediate,"",b,i,k,!1,d)):(d=null,this.setBlending(THREE.NormalBlending),s(a.__webglObjects,!0,"opaque",b,i,k,!1,d),u(a.__webglObjectsImmediate,"opaque",b,i,k,!1,d),s(a.__webglObjects,!1,"transparent",b,i,k,!0,d),u(a.__webglObjectsImmediate,"transparent",b,i,k,!0,d));p(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&
c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=w(a,b,c,d,e);ga=-1;H.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,
l,tb):e.render(function(a){H.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var b=a.__objectsAdded[0],k=a,n=void 0,m=void 0,q=void 0,p=void 0;if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,b instanceof THREE.Mesh)if(m=b.geometry,q=b.material,m instanceof THREE.Geometry){if(void 0===
m.geometryGroups){var ba=m,s=void 0,u=void 0,oa=void 0,v=void 0,tb=void 0,w=void 0,y=void 0,Ia={},E=ba.morphTargets.length,D=ba.morphNormals.length,F=q instanceof THREE.MeshFaceMaterial;ba.geometryGroups={};s=0;for(u=ba.faces.length;s<u;s++)oa=ba.faces[s],v=F?oa.materialIndex:void 0,w=void 0!==v?v:-1,void 0===Ia[w]&&(Ia[w]={hash:w,counter:0}),y=Ia[w].hash+"_"+Ia[w].counter,void 0===ba.geometryGroups[y]&&(ba.geometryGroups[y]={faces3:[],faces4:[],materialIndex:v,vertices:0,numMorphTargets:E,numMorphNormals:D}),
tb=oa instanceof THREE.Face3?3:4,65535<ba.geometryGroups[y].vertices+tb&&(Ia[w].counter+=1,y=Ia[w].hash+"_"+Ia[w].counter,void 0===ba.geometryGroups[y]&&(ba.geometryGroups[y]={faces3:[],faces4:[],materialIndex:v,vertices:0,numMorphTargets:E,numMorphNormals:D})),oa instanceof THREE.Face3?ba.geometryGroups[y].faces3.push(s):ba.geometryGroups[y].faces4.push(s),ba.geometryGroups[y].vertices+=tb;ba.geometryGroupsList=[];var G=void 0;for(G in ba.geometryGroups)ba.geometryGroups[G].id=fb++,ba.geometryGroupsList.push(ba.geometryGroups[G])}for(n in m.geometryGroups)if(p=
m.geometryGroups[n],!p.__webglVertexBuffer){var Ba=p;Ba.__webglVertexBuffer=l.createBuffer();Ba.__webglNormalBuffer=l.createBuffer();Ba.__webglTangentBuffer=l.createBuffer();Ba.__webglColorBuffer=l.createBuffer();Ba.__webglUVBuffer=l.createBuffer();Ba.__webglUV2Buffer=l.createBuffer();Ba.__webglSkinIndicesBuffer=l.createBuffer();Ba.__webglSkinWeightsBuffer=l.createBuffer();Ba.__webglFaceBuffer=l.createBuffer();Ba.__webglLineBuffer=l.createBuffer();var I=void 0,J=void 0;if(Ba.numMorphTargets){Ba.__webglMorphTargetsBuffers=
[];I=0;for(J=Ba.numMorphTargets;I<J;I++)Ba.__webglMorphTargetsBuffers.push(l.createBuffer())}if(Ba.numMorphNormals){Ba.__webglMorphNormalsBuffers=[];I=0;for(J=Ba.numMorphNormals;I<J;I++)Ba.__webglMorphNormalsBuffers.push(l.createBuffer())}H.info.memory.geometries++;d(p,b);m.verticesNeedUpdate=!0;m.morphTargetsNeedUpdate=!0;m.elementsNeedUpdate=!0;m.uvsNeedUpdate=!0;m.normalsNeedUpdate=!0;m.tangentsNeedUpdate=!0;m.colorsNeedUpdate=!0}}else m instanceof THREE.BufferGeometry&&h(m);else if(b instanceof
THREE.Ribbon){if(m=b.geometry,!m.__webglVertexBuffer){var L=m;L.__webglVertexBuffer=l.createBuffer();L.__webglColorBuffer=l.createBuffer();L.__webglNormalBuffer=l.createBuffer();H.info.memory.geometries++;var M=m,lb=b,N=M.vertices.length;M.__vertexArray=new Float32Array(3*N);M.__colorArray=new Float32Array(3*N);M.__normalArray=new Float32Array(3*N);M.__webglVertexCount=N;c(M,lb);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.normalsNeedUpdate=!0}}else if(b instanceof THREE.Line){if(m=b.geometry,
!m.__webglVertexBuffer){var R=m;R.__webglVertexBuffer=l.createBuffer();R.__webglColorBuffer=l.createBuffer();R.__webglLineDistanceBuffer=l.createBuffer();H.info.memory.geometries++;var Q=m,T=b,O=Q.vertices.length;Q.__vertexArray=new Float32Array(3*O);Q.__colorArray=new Float32Array(3*O);Q.__lineDistanceArray=new Float32Array(1*O);Q.__webglLineCount=O;c(Q,T);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.lineDistancesNeedUpdate=!0}}else if(b instanceof THREE.ParticleSystem&&(m=b.geometry,!m.__webglVertexBuffer))if(m instanceof
THREE.Geometry){var S=m;S.__webglVertexBuffer=l.createBuffer();S.__webglColorBuffer=l.createBuffer();H.info.memory.geometries++;var Ya=m,W=b,X=Ya.vertices.length;Ya.__vertexArray=new Float32Array(3*X);Ya.__colorArray=new Float32Array(3*X);Ya.__sortArray=[];Ya.__webglParticleCount=X;c(Ya,W);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&h(m);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(m=b.geometry,m instanceof THREE.BufferGeometry)t(k.__webglObjects,m,
b);else for(n in m.geometryGroups)p=m.geometryGroups[n],t(k.__webglObjects,p,b);else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?(m=b.geometry,t(k.__webglObjects,m,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?k.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?k.__webglSprites.push(b):b instanceof THREE.LensFlare&&k.__webglFlares.push(b);b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var P=
a.__objectsRemoved[0],V=a;P instanceof THREE.Mesh||P instanceof THREE.ParticleSystem||P instanceof THREE.Ribbon||P instanceof THREE.Line?r(V.__webglObjects,P):P instanceof THREE.Sprite?C(V.__webglSprites,P):P instanceof THREE.LensFlare?C(V.__webglFlares,P):(P instanceof THREE.ImmediateRenderObject||P.immediateRenderCallback)&&r(V.__webglObjectsImmediate,P);P.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var ga=0,da=a.__webglObjects.length;ga<da;ga++){var fa=a.__webglObjects[ga].object,ia=fa.geometry,
ha=void 0,ub=void 0,ea=void 0;if(fa instanceof THREE.Mesh)if(ia instanceof THREE.BufferGeometry)(ia.verticesNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate)&&j(ia,l.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.elementsNeedUpdate=!1,ia.uvsNeedUpdate=!1,ia.normalsNeedUpdate=!1,ia.colorsNeedUpdate=!1,ia.tangentsNeedUpdate=!1;else{for(var Fb=0,Hb=ia.geometryGroupsList.length;Fb<Hb;Fb++)if(ha=ia.geometryGroupsList[Fb],ea=e(fa,
ha),ia.buffersNeedUpdate&&d(ha,fa),ub=ea.attributes&&A(ea),ia.verticesNeedUpdate||ia.morphTargetsNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate||ub){var aa=ha,Jc=fa,ma=l.DYNAMIC_DRAW,ra=!ia.dynamic,Gb=ea;if(aa.__inittedArrays){var sa=f(Gb),ic=Gb.vertexColors?Gb.vertexColors:!1,Da=g(Gb),Aa=sa===THREE.SmoothShading,K=void 0,ca=void 0,wa=void 0,U=void 0,ya=void 0,za=void 0,xa=void 0,Wa=void 0,Ja=void 0,Sb=void 0,ab=void 0,Y=void 0,
Z=void 0,$=void 0,ta=void 0,Qa=void 0,bb=void 0,Sa=void 0,ib=void 0,Va=void 0,wb=void 0,Xa=void 0,ob=void 0,Ib=void 0,Jb=void 0,Kb=void 0,sb=void 0,Lb=void 0,Mb=void 0,Nb=void 0,jc=void 0,Ob=void 0,Pb=void 0,Qb=void 0,kc=void 0,Ca=void 0,Sc=void 0,Yb=void 0,ec=void 0,fc=void 0,cb=void 0,Tc=void 0,Za=void 0,$a=void 0,Zb=void 0,Tb=void 0,Ra=0,Ua=0,Ub=0,Vb=0,zb=0,jb=0,Ha=0,nb=0,Ta=0,la=0,na=0,B=0,Ea=void 0,db=aa.__vertexArray,lc=aa.__uvArray,mc=aa.__uv2Array,Ab=aa.__normalArray,Ma=aa.__tangentArray,
eb=aa.__colorArray,Na=aa.__skinIndexArray,Oa=aa.__skinWeightArray,Lc=aa.__morphTargetsArrays,Mc=aa.__morphNormalsArrays,Nc=aa.__webglCustomAttributesList,z=void 0,Rb=aa.__faceArray,vb=aa.__lineArray,pb=Jc.geometry,dd=pb.elementsNeedUpdate,Uc=pb.uvsNeedUpdate,ed=pb.normalsNeedUpdate,fd=pb.tangentsNeedUpdate,gd=pb.colorsNeedUpdate,hd=pb.morphTargetsNeedUpdate,bc=pb.vertices,ua=aa.faces3,va=aa.faces4,kb=pb.faces,Oc=pb.faceVertexUvs[0],Pc=pb.faceVertexUvs[1],cc=pb.skinIndices,$b=pb.skinWeights,ac=pb.morphTargets,
uc=pb.morphNormals;if(pb.verticesNeedUpdate){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Y=bc[U.a],Z=bc[U.b],$=bc[U.c],db[Ua]=Y.x,db[Ua+1]=Y.y,db[Ua+2]=Y.z,db[Ua+3]=Z.x,db[Ua+4]=Z.y,db[Ua+5]=Z.z,db[Ua+6]=$.x,db[Ua+7]=$.y,db[Ua+8]=$.z,Ua+=9;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Y=bc[U.a],Z=bc[U.b],$=bc[U.c],ta=bc[U.d],db[Ua]=Y.x,db[Ua+1]=Y.y,db[Ua+2]=Y.z,db[Ua+3]=Z.x,db[Ua+4]=Z.y,db[Ua+5]=Z.z,db[Ua+6]=$.x,db[Ua+7]=$.y,db[Ua+8]=$.z,db[Ua+9]=ta.x,db[Ua+10]=ta.y,db[Ua+11]=ta.z,Ua+=12;l.bindBuffer(l.ARRAY_BUFFER,
aa.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,db,ma)}if(hd){cb=0;for(Tc=ac.length;cb<Tc;cb++){K=na=0;for(ca=ua.length;K<ca;K++)Zb=ua[K],U=kb[Zb],Y=ac[cb].vertices[U.a],Z=ac[cb].vertices[U.b],$=ac[cb].vertices[U.c],Za=Lc[cb],Za[na]=Y.x,Za[na+1]=Y.y,Za[na+2]=Y.z,Za[na+3]=Z.x,Za[na+4]=Z.y,Za[na+5]=Z.z,Za[na+6]=$.x,Za[na+7]=$.y,Za[na+8]=$.z,Gb.morphNormals&&(Aa?(Tb=uc[cb].vertexNormals[Zb],Va=Tb.a,wb=Tb.b,Xa=Tb.c):Xa=wb=Va=uc[cb].faceNormals[Zb],$a=Mc[cb],$a[na]=Va.x,$a[na+1]=Va.y,$a[na+2]=Va.z,
$a[na+3]=wb.x,$a[na+4]=wb.y,$a[na+5]=wb.z,$a[na+6]=Xa.x,$a[na+7]=Xa.y,$a[na+8]=Xa.z),na+=9;K=0;for(ca=va.length;K<ca;K++)Zb=va[K],U=kb[Zb],Y=ac[cb].vertices[U.a],Z=ac[cb].vertices[U.b],$=ac[cb].vertices[U.c],ta=ac[cb].vertices[U.d],Za=Lc[cb],Za[na]=Y.x,Za[na+1]=Y.y,Za[na+2]=Y.z,Za[na+3]=Z.x,Za[na+4]=Z.y,Za[na+5]=Z.z,Za[na+6]=$.x,Za[na+7]=$.y,Za[na+8]=$.z,Za[na+9]=ta.x,Za[na+10]=ta.y,Za[na+11]=ta.z,Gb.morphNormals&&(Aa?(Tb=uc[cb].vertexNormals[Zb],Va=Tb.a,wb=Tb.b,Xa=Tb.c,ob=Tb.d):ob=Xa=wb=Va=uc[cb].faceNormals[Zb],
$a=Mc[cb],$a[na]=Va.x,$a[na+1]=Va.y,$a[na+2]=Va.z,$a[na+3]=wb.x,$a[na+4]=wb.y,$a[na+5]=wb.z,$a[na+6]=Xa.x,$a[na+7]=Xa.y,$a[na+8]=Xa.z,$a[na+9]=ob.x,$a[na+10]=ob.y,$a[na+11]=ob.z),na+=12;l.bindBuffer(l.ARRAY_BUFFER,aa.__webglMorphTargetsBuffers[cb]);l.bufferData(l.ARRAY_BUFFER,Lc[cb],ma);Gb.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,aa.__webglMorphNormalsBuffers[cb]),l.bufferData(l.ARRAY_BUFFER,Mc[cb],ma))}}if($b.length){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Lb=$b[U.a],Mb=$b[U.b],Nb=$b[U.c],Oa[la]=
Lb.x,Oa[la+1]=Lb.y,Oa[la+2]=Lb.z,Oa[la+3]=Lb.w,Oa[la+4]=Mb.x,Oa[la+5]=Mb.y,Oa[la+6]=Mb.z,Oa[la+7]=Mb.w,Oa[la+8]=Nb.x,Oa[la+9]=Nb.y,Oa[la+10]=Nb.z,Oa[la+11]=Nb.w,Ob=cc[U.a],Pb=cc[U.b],Qb=cc[U.c],Na[la]=Ob.x,Na[la+1]=Ob.y,Na[la+2]=Ob.z,Na[la+3]=Ob.w,Na[la+4]=Pb.x,Na[la+5]=Pb.y,Na[la+6]=Pb.z,Na[la+7]=Pb.w,Na[la+8]=Qb.x,Na[la+9]=Qb.y,Na[la+10]=Qb.z,Na[la+11]=Qb.w,la+=12;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Lb=$b[U.a],Mb=$b[U.b],Nb=$b[U.c],jc=$b[U.d],Oa[la]=Lb.x,Oa[la+1]=Lb.y,Oa[la+2]=Lb.z,Oa[la+
3]=Lb.w,Oa[la+4]=Mb.x,Oa[la+5]=Mb.y,Oa[la+6]=Mb.z,Oa[la+7]=Mb.w,Oa[la+8]=Nb.x,Oa[la+9]=Nb.y,Oa[la+10]=Nb.z,Oa[la+11]=Nb.w,Oa[la+12]=jc.x,Oa[la+13]=jc.y,Oa[la+14]=jc.z,Oa[la+15]=jc.w,Ob=cc[U.a],Pb=cc[U.b],Qb=cc[U.c],kc=cc[U.d],Na[la]=Ob.x,Na[la+1]=Ob.y,Na[la+2]=Ob.z,Na[la+3]=Ob.w,Na[la+4]=Pb.x,Na[la+5]=Pb.y,Na[la+6]=Pb.z,Na[la+7]=Pb.w,Na[la+8]=Qb.x,Na[la+9]=Qb.y,Na[la+10]=Qb.z,Na[la+11]=Qb.w,Na[la+12]=kc.x,Na[la+13]=kc.y,Na[la+14]=kc.z,Na[la+15]=kc.w,la+=16;0<la&&(l.bindBuffer(l.ARRAY_BUFFER,aa.__webglSkinIndicesBuffer),
l.bufferData(l.ARRAY_BUFFER,Na,ma),l.bindBuffer(l.ARRAY_BUFFER,aa.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,Oa,ma))}if(gd&&ic){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],xa=U.vertexColors,Wa=U.color,3===xa.length&&ic===THREE.VertexColors?(Ib=xa[0],Jb=xa[1],Kb=xa[2]):Kb=Jb=Ib=Wa,eb[Ta]=Ib.r,eb[Ta+1]=Ib.g,eb[Ta+2]=Ib.b,eb[Ta+3]=Jb.r,eb[Ta+4]=Jb.g,eb[Ta+5]=Jb.b,eb[Ta+6]=Kb.r,eb[Ta+7]=Kb.g,eb[Ta+8]=Kb.b,Ta+=9;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],xa=U.vertexColors,Wa=U.color,4===xa.length&&
ic===THREE.VertexColors?(Ib=xa[0],Jb=xa[1],Kb=xa[2],sb=xa[3]):sb=Kb=Jb=Ib=Wa,eb[Ta]=Ib.r,eb[Ta+1]=Ib.g,eb[Ta+2]=Ib.b,eb[Ta+3]=Jb.r,eb[Ta+4]=Jb.g,eb[Ta+5]=Jb.b,eb[Ta+6]=Kb.r,eb[Ta+7]=Kb.g,eb[Ta+8]=Kb.b,eb[Ta+9]=sb.r,eb[Ta+10]=sb.g,eb[Ta+11]=sb.b,Ta+=12;0<Ta&&(l.bindBuffer(l.ARRAY_BUFFER,aa.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,eb,ma))}if(fd&&pb.hasTangents){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Ja=U.vertexTangents,Qa=Ja[0],bb=Ja[1],Sa=Ja[2],Ma[Ha]=Qa.x,Ma[Ha+1]=Qa.y,Ma[Ha+2]=Qa.z,Ma[Ha+
3]=Qa.w,Ma[Ha+4]=bb.x,Ma[Ha+5]=bb.y,Ma[Ha+6]=bb.z,Ma[Ha+7]=bb.w,Ma[Ha+8]=Sa.x,Ma[Ha+9]=Sa.y,Ma[Ha+10]=Sa.z,Ma[Ha+11]=Sa.w,Ha+=12;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Ja=U.vertexTangents,Qa=Ja[0],bb=Ja[1],Sa=Ja[2],ib=Ja[3],Ma[Ha]=Qa.x,Ma[Ha+1]=Qa.y,Ma[Ha+2]=Qa.z,Ma[Ha+3]=Qa.w,Ma[Ha+4]=bb.x,Ma[Ha+5]=bb.y,Ma[Ha+6]=bb.z,Ma[Ha+7]=bb.w,Ma[Ha+8]=Sa.x,Ma[Ha+9]=Sa.y,Ma[Ha+10]=Sa.z,Ma[Ha+11]=Sa.w,Ma[Ha+12]=ib.x,Ma[Ha+13]=ib.y,Ma[Ha+14]=ib.z,Ma[Ha+15]=ib.w,Ha+=16;l.bindBuffer(l.ARRAY_BUFFER,aa.__webglTangentBuffer);
l.bufferData(l.ARRAY_BUFFER,Ma,ma)}if(ed&&sa){K=0;for(ca=ua.length;K<ca;K++)if(U=kb[ua[K]],ya=U.vertexNormals,za=U.normal,3===ya.length&&Aa)for(Ca=0;3>Ca;Ca++)Yb=ya[Ca],Ab[jb]=Yb.x,Ab[jb+1]=Yb.y,Ab[jb+2]=Yb.z,jb+=3;else for(Ca=0;3>Ca;Ca++)Ab[jb]=za.x,Ab[jb+1]=za.y,Ab[jb+2]=za.z,jb+=3;K=0;for(ca=va.length;K<ca;K++)if(U=kb[va[K]],ya=U.vertexNormals,za=U.normal,4===ya.length&&Aa)for(Ca=0;4>Ca;Ca++)Yb=ya[Ca],Ab[jb]=Yb.x,Ab[jb+1]=Yb.y,Ab[jb+2]=Yb.z,jb+=3;else for(Ca=0;4>Ca;Ca++)Ab[jb]=za.x,Ab[jb+1]=za.y,
Ab[jb+2]=za.z,jb+=3;l.bindBuffer(l.ARRAY_BUFFER,aa.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,Ab,ma)}if(Uc&&Oc&&Da){K=0;for(ca=ua.length;K<ca;K++)if(wa=ua[K],Sb=Oc[wa],void 0!==Sb)for(Ca=0;3>Ca;Ca++)ec=Sb[Ca],lc[Ub]=ec.u,lc[Ub+1]=ec.v,Ub+=2;K=0;for(ca=va.length;K<ca;K++)if(wa=va[K],Sb=Oc[wa],void 0!==Sb)for(Ca=0;4>Ca;Ca++)ec=Sb[Ca],lc[Ub]=ec.u,lc[Ub+1]=ec.v,Ub+=2;0<Ub&&(l.bindBuffer(l.ARRAY_BUFFER,aa.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,lc,ma))}if(Uc&&Pc&&Da){K=0;for(ca=ua.length;K<
ca;K++)if(wa=ua[K],ab=Pc[wa],void 0!==ab)for(Ca=0;3>Ca;Ca++)fc=ab[Ca],mc[Vb]=fc.u,mc[Vb+1]=fc.v,Vb+=2;K=0;for(ca=va.length;K<ca;K++)if(wa=va[K],ab=Pc[wa],void 0!==ab)for(Ca=0;4>Ca;Ca++)fc=ab[Ca],mc[Vb]=fc.u,mc[Vb+1]=fc.v,Vb+=2;0<Vb&&(l.bindBuffer(l.ARRAY_BUFFER,aa.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,mc,ma))}if(dd){K=0;for(ca=ua.length;K<ca;K++)Rb[zb]=Ra,Rb[zb+1]=Ra+1,Rb[zb+2]=Ra+2,zb+=3,vb[nb]=Ra,vb[nb+1]=Ra+1,vb[nb+2]=Ra,vb[nb+3]=Ra+2,vb[nb+4]=Ra+1,vb[nb+5]=Ra+2,nb+=6,Ra+=3;K=0;for(ca=
va.length;K<ca;K++)Rb[zb]=Ra,Rb[zb+1]=Ra+1,Rb[zb+2]=Ra+3,Rb[zb+3]=Ra+1,Rb[zb+4]=Ra+2,Rb[zb+5]=Ra+3,zb+=6,vb[nb]=Ra,vb[nb+1]=Ra+1,vb[nb+2]=Ra,vb[nb+3]=Ra+3,vb[nb+4]=Ra+1,vb[nb+5]=Ra+2,vb[nb+6]=Ra+2,vb[nb+7]=Ra+3,nb+=8,Ra+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,aa.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,Rb,ma);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,aa.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,vb,ma)}if(Nc){Ca=0;for(Sc=Nc.length;Ca<Sc;Ca++)if(z=Nc[Ca],z.__original.needsUpdate){B=
0;if(1===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],z.array[B]=z.value[U.a],z.array[B+1]=z.value[U.b],z.array[B+2]=z.value[U.c],B+=3;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],z.array[B]=z.value[U.a],z.array[B+1]=z.value[U.b],z.array[B+2]=z.value[U.c],z.array[B+3]=z.value[U.d],B+=4}else{if("faces"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)Ea=z.value[ua[K]],z.array[B]=Ea,z.array[B+1]=Ea,z.array[B+2]=Ea,B+=3;K=0;for(ca=va.length;K<ca;K++)Ea=z.value[va[K]],
z.array[B]=Ea,z.array[B+1]=Ea,z.array[B+2]=Ea,z.array[B+3]=Ea,B+=4}}else if(2===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Z.x,z.array[B+3]=Z.y,z.array[B+4]=$.x,z.array[B+5]=$.y,B+=6;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],ta=z.value[U.d],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Z.x,z.array[B+3]=Z.y,z.array[B+
4]=$.x,z.array[B+5]=$.y,z.array[B+6]=ta.x,z.array[B+7]=ta.y,B+=8}else{if("faces"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)$=Z=Y=Ea=z.value[ua[K]],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Z.x,z.array[B+3]=Z.y,z.array[B+4]=$.x,z.array[B+5]=$.y,B+=6;K=0;for(ca=va.length;K<ca;K++)ta=$=Z=Y=Ea=z.value[va[K]],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Z.x,z.array[B+3]=Z.y,z.array[B+4]=$.x,z.array[B+5]=$.y,z.array[B+6]=ta.x,z.array[B+7]=ta.y,B+=8}}else if(3===z.size){var ka;ka="c"===z.type?["r","g",
"b"]:["x","y","z"];if(void 0===z.boundTo||"vertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+2]=Y[ka[2]],z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],B+=9;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],ta=z.value[U.d],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+
2]=Y[ka[2]],z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],z.array[B+9]=ta[ka[0]],z.array[B+10]=ta[ka[1]],z.array[B+11]=ta[ka[2]],B+=12}else if("faces"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)$=Z=Y=Ea=z.value[ua[K]],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+2]=Y[ka[2]],z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],B+=
9;K=0;for(ca=va.length;K<ca;K++)ta=$=Z=Y=Ea=z.value[va[K]],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+2]=Y[ka[2]],z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],z.array[B+9]=ta[ka[0]],z.array[B+10]=ta[ka[1]],z.array[B+11]=ta[ka[2]],B+=12}else if("faceVertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)Ea=z.value[ua[K]],Y=Ea[0],Z=Ea[1],$=Ea[2],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+2]=Y[ka[2]],
z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],B+=9;K=0;for(ca=va.length;K<ca;K++)Ea=z.value[va[K]],Y=Ea[0],Z=Ea[1],$=Ea[2],ta=Ea[3],z.array[B]=Y[ka[0]],z.array[B+1]=Y[ka[1]],z.array[B+2]=Y[ka[2]],z.array[B+3]=Z[ka[0]],z.array[B+4]=Z[ka[1]],z.array[B+5]=Z[ka[2]],z.array[B+6]=$[ka[0]],z.array[B+7]=$[ka[1]],z.array[B+8]=$[ka[2]],z.array[B+9]=ta[ka[0]],z.array[B+10]=ta[ka[1]],z.array[B+11]=ta[ka[2]],B+=12}}else if(4===
z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)U=kb[ua[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Y.z,z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=$.z,z.array[B+11]=$.w,B+=12;K=0;for(ca=va.length;K<ca;K++)U=kb[va[K]],Y=z.value[U.a],Z=z.value[U.b],$=z.value[U.c],ta=z.value[U.d],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Y.z,
z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=$.z,z.array[B+11]=$.w,z.array[B+12]=ta.x,z.array[B+13]=ta.y,z.array[B+14]=ta.z,z.array[B+15]=ta.w,B+=16}else if("faces"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)$=Z=Y=Ea=z.value[ua[K]],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Y.z,z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=
$.z,z.array[B+11]=$.w,B+=12;K=0;for(ca=va.length;K<ca;K++)ta=$=Z=Y=Ea=z.value[va[K]],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Y.z,z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=$.z,z.array[B+11]=$.w,z.array[B+12]=ta.x,z.array[B+13]=ta.y,z.array[B+14]=ta.z,z.array[B+15]=ta.w,B+=16}else if("faceVertices"===z.boundTo){K=0;for(ca=ua.length;K<ca;K++)Ea=z.value[ua[K]],Y=Ea[0],Z=Ea[1],$=Ea[2],z.array[B]=Y.x,z.array[B+
1]=Y.y,z.array[B+2]=Y.z,z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=$.z,z.array[B+11]=$.w,B+=12;K=0;for(ca=va.length;K<ca;K++)Ea=z.value[va[K]],Y=Ea[0],Z=Ea[1],$=Ea[2],ta=Ea[3],z.array[B]=Y.x,z.array[B+1]=Y.y,z.array[B+2]=Y.z,z.array[B+3]=Y.w,z.array[B+4]=Z.x,z.array[B+5]=Z.y,z.array[B+6]=Z.z,z.array[B+7]=Z.w,z.array[B+8]=$.x,z.array[B+9]=$.y,z.array[B+10]=$.z,z.array[B+11]=$.w,z.array[B+12]=ta.x,z.array[B+13]=
ta.y,z.array[B+14]=ta.z,z.array[B+15]=ta.w,B+=16}l.bindBuffer(l.ARRAY_BUFFER,z.buffer);l.bufferData(l.ARRAY_BUFFER,z.array,ma)}}ra&&(delete aa.__inittedArrays,delete aa.__colorArray,delete aa.__normalArray,delete aa.__tangentArray,delete aa.__uvArray,delete aa.__uv2Array,delete aa.__faceArray,delete aa.__vertexArray,delete aa.__lineArray,delete aa.__skinIndexArray,delete aa.__skinWeightArray)}}ia.verticesNeedUpdate=!1;ia.morphTargetsNeedUpdate=!1;ia.elementsNeedUpdate=!1;ia.uvsNeedUpdate=!1;ia.normalsNeedUpdate=
!1;ia.colorsNeedUpdate=!1;ia.tangentsNeedUpdate=!1;ia.buffersNeedUpdate=!1;ea.attributes&&x(ea)}else if(fa instanceof THREE.Ribbon){ea=e(fa,ia);ub=ea.attributes&&A(ea);if(ia.verticesNeedUpdate||ia.colorsNeedUpdate||ia.normalsNeedUpdate||ub){var Bb=ia,vc=l.DYNAMIC_DRAW,nc=void 0,oc=void 0,pc=void 0,wc=void 0,Fa=void 0,xc=void 0,yc=void 0,zc=void 0,Vc=void 0,gb=void 0,gc=void 0,Ka=void 0,qb=void 0,Wc=Bb.vertices,Xc=Bb.colors,Yc=Bb.normals,id=Wc.length,jd=Xc.length,kd=Yc.length,Ac=Bb.__vertexArray,Bc=
Bb.__colorArray,Cc=Bb.__normalArray,ld=Bb.colorsNeedUpdate,md=Bb.normalsNeedUpdate,Qc=Bb.__webglCustomAttributesList;if(Bb.verticesNeedUpdate){for(nc=0;nc<id;nc++)wc=Wc[nc],Fa=3*nc,Ac[Fa]=wc.x,Ac[Fa+1]=wc.y,Ac[Fa+2]=wc.z;l.bindBuffer(l.ARRAY_BUFFER,Bb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Ac,vc)}if(ld){for(oc=0;oc<jd;oc++)xc=Xc[oc],Fa=3*oc,Bc[Fa]=xc.r,Bc[Fa+1]=xc.g,Bc[Fa+2]=xc.b;l.bindBuffer(l.ARRAY_BUFFER,Bb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Bc,vc)}if(md){for(pc=0;pc<kd;pc++)yc=
Yc[pc],Fa=3*pc,Cc[Fa]=yc.x,Cc[Fa+1]=yc.y,Cc[Fa+2]=yc.z;l.bindBuffer(l.ARRAY_BUFFER,Bb.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,Cc,vc)}if(Qc){zc=0;for(Vc=Qc.length;zc<Vc;zc++)if(Ka=Qc[zc],Ka.needsUpdate&&(void 0===Ka.boundTo||"vertices"===Ka.boundTo)){Fa=0;gc=Ka.value.length;if(1===Ka.size)for(gb=0;gb<gc;gb++)Ka.array[gb]=Ka.value[gb];else if(2===Ka.size)for(gb=0;gb<gc;gb++)qb=Ka.value[gb],Ka.array[Fa]=qb.x,Ka.array[Fa+1]=qb.y,Fa+=2;else if(3===Ka.size)if("c"===Ka.type)for(gb=0;gb<gc;gb++)qb=
Ka.value[gb],Ka.array[Fa]=qb.r,Ka.array[Fa+1]=qb.g,Ka.array[Fa+2]=qb.b,Fa+=3;else for(gb=0;gb<gc;gb++)qb=Ka.value[gb],Ka.array[Fa]=qb.x,Ka.array[Fa+1]=qb.y,Ka.array[Fa+2]=qb.z,Fa+=3;else if(4===Ka.size)for(gb=0;gb<gc;gb++)qb=Ka.value[gb],Ka.array[Fa]=qb.x,Ka.array[Fa+1]=qb.y,Ka.array[Fa+2]=qb.z,Ka.array[Fa+3]=qb.w,Fa+=4;l.bindBuffer(l.ARRAY_BUFFER,Ka.buffer);l.bufferData(l.ARRAY_BUFFER,Ka.array,vc)}}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=!1;ia.normalsNeedUpdate=!1;ea.attributes&&x(ea)}else if(fa instanceof
THREE.Line){ea=e(fa,ia);ub=ea.attributes&&A(ea);if(ia.verticesNeedUpdate||ia.colorsNeedUpdate||ia.lineDistancesNeedUpdate||ub){var Cb=ia,Dc=l.DYNAMIC_DRAW,qc=void 0,rc=void 0,sc=void 0,Ec=void 0,Pa=void 0,Fc=void 0,Zc=Cb.vertices,$c=Cb.colors,ad=Cb.lineDistances,nd=Zc.length,od=$c.length,pd=ad.length,Gc=Cb.__vertexArray,Hc=Cb.__colorArray,bd=Cb.__lineDistanceArray,qd=Cb.colorsNeedUpdate,rd=Cb.lineDistancesNeedUpdate,Rc=Cb.__webglCustomAttributesList,Ic=void 0,cd=void 0,hb=void 0,hc=void 0,rb=void 0,
La=void 0;if(Cb.verticesNeedUpdate){for(qc=0;qc<nd;qc++)Ec=Zc[qc],Pa=3*qc,Gc[Pa]=Ec.x,Gc[Pa+1]=Ec.y,Gc[Pa+2]=Ec.z;l.bindBuffer(l.ARRAY_BUFFER,Cb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Gc,Dc)}if(qd){for(rc=0;rc<od;rc++)Fc=$c[rc],Pa=3*rc,Hc[Pa]=Fc.r,Hc[Pa+1]=Fc.g,Hc[Pa+2]=Fc.b;l.bindBuffer(l.ARRAY_BUFFER,Cb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Hc,Dc)}if(rd){for(sc=0;sc<pd;sc++)bd[sc]=ad[sc];l.bindBuffer(l.ARRAY_BUFFER,Cb.__webglLineDistanceBuffer);l.bufferData(l.ARRAY_BUFFER,bd,
Dc)}if(Rc){Ic=0;for(cd=Rc.length;Ic<cd;Ic++)if(La=Rc[Ic],La.needsUpdate&&(void 0===La.boundTo||"vertices"===La.boundTo)){Pa=0;hc=La.value.length;if(1===La.size)for(hb=0;hb<hc;hb++)La.array[hb]=La.value[hb];else if(2===La.size)for(hb=0;hb<hc;hb++)rb=La.value[hb],La.array[Pa]=rb.x,La.array[Pa+1]=rb.y,Pa+=2;else if(3===La.size)if("c"===La.type)for(hb=0;hb<hc;hb++)rb=La.value[hb],La.array[Pa]=rb.r,La.array[Pa+1]=rb.g,La.array[Pa+2]=rb.b,Pa+=3;else for(hb=0;hb<hc;hb++)rb=La.value[hb],La.array[Pa]=rb.x,
La.array[Pa+1]=rb.y,La.array[Pa+2]=rb.z,Pa+=3;else if(4===La.size)for(hb=0;hb<hc;hb++)rb=La.value[hb],La.array[Pa]=rb.x,La.array[Pa+1]=rb.y,La.array[Pa+2]=rb.z,La.array[Pa+3]=rb.w,Pa+=4;l.bindBuffer(l.ARRAY_BUFFER,La.buffer);l.bufferData(l.ARRAY_BUFFER,La.array,Dc)}}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=!1;ia.lineDistancesNeedUpdate=!1;ea.attributes&&x(ea)}else fa instanceof THREE.ParticleSystem&&(ia instanceof THREE.BufferGeometry?((ia.verticesNeedUpdate||ia.colorsNeedUpdate)&&j(ia,l.DYNAMIC_DRAW,
!ia.dynamic),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1):(ea=e(fa,ia),ub=ea.attributes&&A(ea),(ia.verticesNeedUpdate||ia.colorsNeedUpdate||fa.sortParticles||ub)&&i(ia,l.DYNAMIC_DRAW,fa),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1,ea.attributes&&x(ea)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,i,k,j,n,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?
m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic");if(m){var q=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(q.uniforms);a.vertexShader=q.vertexShader;a.fragmentShader=q.fragmentShader}var p,ba,r;e=p=ba=r=q=0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&p++,g instanceof THREE.PointLight&&
ba++,g instanceof THREE.SpotLight&&r++,g instanceof THREE.HemisphereLight&&q++);e=p;f=ba;g=r;h=q;q=p=0;for(r=b.length;q<r;q++)ba=b[q],ba.castShadow&&(ba instanceof THREE.SpotLight&&p++,ba instanceof THREE.DirectionalLight&&!ba.shadowCascade&&p++);n=p;bb&&d&&d.useVertexTexture?j=1024:(b=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+
", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),j=b);a:{ba=a.fragmentShader;r=a.vertexShader;q=a.uniforms;b=a.attributes;p=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:j,useVertexTexture:bb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,
boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===
THREE.DoubleSide,flipSided:a.side===THREE.BackSide},s,t,u,d=[];m?d.push(m):(d.push(ba),d.push(r));for(t in p)d.push(t),d.push(p[t]);for(s in c)d.push(s),d.push(c[s]);m=d.join();s=0;for(t=W.length;s<t;s++)if(d=W[s],d.code===m){d.usedTimes++;k=d.program;break a}s=[];for(u in p)t=p[u],!1!==t&&(t="#define "+u+" "+t,s.push(t));t=s.join("\n");u=l.createProgram();s=["precision "+S+" float;",t,wb?"#define VERTEX_TEXTURES":"",H.gammaInput?"#define GAMMA_INPUT":"",H.gammaOutput?"#define GAMMA_OUTPUT":"",H.physicallyBasedShading?
"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?
"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
t=["precision "+S+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",t,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",H.gammaInput?"#define GAMMA_INPUT":"",H.gammaOutput?"#define GAMMA_OUTPUT":"",H.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");t=F("fragment",t+ba);s=F("vertex",s+r);l.attachShader(u,s);l.attachShader(u,t);l.linkProgram(u);l.getProgramParameter(u,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(u,l.VALIDATE_STATUS)+
", gl error ["+l.getError()+"]");l.deleteShader(t);l.deleteShader(s);u.uniforms={};u.attributes={};var oa;s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?s.push("boneTexture"):s.push("boneGlobalMatrices");for(oa in q)s.push(oa);oa=s;s=0;for(t=oa.length;s<t;s++)d=oa[s],u.uniforms[d]=l.getUniformLocation(u,d);s="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(oa=0;oa<c.maxMorphTargets;oa++)s.push("morphTarget"+
oa);for(oa=0;oa<c.maxMorphNormals;oa++)s.push("morphNormal"+oa);for(k in b)s.push(k);k=s;oa=0;for(b=k.length;oa<b;oa++)s=k[oa],u.attributes[s]=l.getAttribLocation(u,s);u.id=fa++;W.push({program:u,code:m,usedTimes:1});H.info.memory.programs=W.length;k=u}a.program=k;oa=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(k=0;k<this.maxMorphTargets;k++)u=b+k,0<=oa[u]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;b="morphNormal";for(k=
0;k<this.maxMorphNormals;k++)u=b+k,0<=oa[u]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?l.disable(l.CULL_FACE):(b===THREE.FrontFaceDirectionCW?l.frontFace(l.CW):l.frontFace(l.CCW),a===THREE.CullFaceBack?l.cullFace(l.BACK):a===THREE.CullFaceFront?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,
a=a.side===THREE.BackSide;wa!==b&&(b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),wa=b);ra!==a&&(a?l.frontFace(l.CW):l.frontFace(l.CCW),ra=a)};this.setDepthTest=function(a){Sa!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),Sa=a)};this.setDepthWrite=function(a){Xa!==a&&(l.depthMask(a),Xa=a)};this.setBlending=function(a,b,c,d){a!==za&&(a===THREE.NoBlending?l.disable(l.BLEND):a===THREE.AdditiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.SRC_ALPHA,l.ONE)):a===THREE.SubtractiveBlending?
(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.SRC_COLOR)):a===THREE.CustomBlending?l.enable(l.BLEND):(l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)),za=a);if(a===THREE.CustomBlending){if(b!==Wa&&(l.blendEquation(P(b)),Wa=b),c!==ab||d!==Va)l.blendFunc(P(c),P(d)),
ab=c,Va=d}else Va=ab=Wa=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=l.createTexture(),H.info.memory.textures++);l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,a.flipY);l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);l.pixelStorei(l.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=P(a.format),f=P(a.type);
M(l.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,i=g.length;h<i;h++)c=g[h],l.texImage2D(l.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else l.texImage2D(l.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){h=0;for(i=g.length;h<i;h++)c=g[h],l.compressedTexImage2D(l.TEXTURE_2D,h,e,c.width,c.height,0,c.data)}else if(0<g.length&&d){h=0;for(i=g.length;h<i;h++)c=g[h],l.texImage2D(l.TEXTURE_2D,
h,e,e,f,c);a.generateMipmaps=!1}else l.texImage2D(l.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.__webglTexture=l.createTexture();H.info.memory.textures++;
var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=P(a.format),e=P(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);M(l.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=l.createFramebuffer();a.__webglRenderbuffer[f]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+f;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[f]);
l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,h,g.__webglTexture,0);J(a.__webglRenderbuffer[f],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),M(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,d,a.__webglTexture,
0),J(a.__webglRenderbuffer,a),c&&l.generateMipmap(l.TEXTURE_2D);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Qa,a=Ja,d=ob,e=sa);b!==ea&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(d,e,c,a),ea=b);ya=c;ba=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;a.getHSV(e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,j=f.faces,k=a.faceVertexUvs[0],f=f.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var m=0,n=h.length;m<n;m++){var q=h[m].clone();c&&c.multiplyVector3(q);g.push(q)}m=0;for(n=j.length;m<n;m++){var q=j[m],p,s,u=q.vertexNormals,t=q.vertexColors;q instanceof THREE.Face3?
p=new THREE.Face3(q.a+e,q.b+e,q.c+e):q instanceof THREE.Face4&&(p=new THREE.Face4(q.a+e,q.b+e,q.c+e,q.d+e));p.normal.copy(q.normal);d&&d.multiplyVector3(p.normal);g=0;for(h=u.length;g<h;g++)s=u[g].clone(),d&&d.multiplyVector3(s),p.vertexNormals.push(s);p.color.copy(q.color);g=0;for(h=t.length;g<h;g++)s=t[g],p.vertexColors.push(s.clone());p.materialIndex=q.materialIndex;p.centroid.copy(q.centroid);c&&c.multiplyVector3(p.centroid);i.push(p)}m=0;for(n=f.length;m<n;m++){c=f[m];d=[];g=0;for(h=c.length;g<
h;g++)d.push(new THREE.UV(c[g].u,c[g].v));k.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var f,g=[],d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.materialIndex in c||g.push(f);a.faces=g},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);
g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,
e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return j[e]>a?b(c,e-1):j[e]<a?b(e+1,d):e}return b(0,j.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,j=[],k,m,n,q;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(k=g[d.a],m=g[d.b],n=g[d.c],
d._area=THREE.GeometryUtils.triangleArea(k,m,n)):d instanceof THREE.Face4&&(k=g[d.a],m=g[d.b],n=g[d.c],q=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(k,m,q),d._area2=THREE.GeometryUtils.triangleArea(m,n,q),d._area=d._area1+d._area2),i+=d._area,j[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);
c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v&&(d[e].v-=Math.floor(d[e].v))},triangulateQuads:function(a){var b,
c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,j=d.c,k=d.d,m=new THREE.Face3,n=new THREE.Face3;m.color.copy(d.color);n.color.copy(d.color);m.materialIndex=d.materialIndex;n.materialIndex=d.materialIndex;m.a=e;m.b=i;m.c=k;n.a=i;n.b=j;n.c=k;4===d.vertexColors.length&&(m.vertexColors[0]=d.vertexColors[0].clone(),m.vertexColors[1]=d.vertexColors[1].clone(),
m.vertexColors[2]=d.vertexColors[3].clone(),n.vertexColors[0]=d.vertexColors[1].clone(),n.vertexColors[1]=d.vertexColors[2].clone(),n.vertexColors[2]=d.vertexColors[3].clone());f.push(m,n);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(m=a.faceVertexUvs[d][b],i=m[1],j=m[2],k=m[3],m=[m[0].clone(),i.clone(),k.clone()],i=[i.clone(),j.clone(),k.clone()],h[d].push(m,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d);d=0;for(e=
a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],j=a.vertices[f.d];b.push(g.clone());b.push(h.clone());
b.push(i.clone());b.push(j.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,j,k,m,n,q,p,s,u,t,A,x,r,C=[],w=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)w[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,j=a.vertices[f],k=a.vertices[g],
m=a.vertices[h],q=j.distanceTo(k),p=k.distanceTo(m),n=j.distanceTo(m),q>b||p>b||n>b){i=a.vertices.length;x=e.clone();r=e.clone();q>=p&&q>=n?(j=j.clone(),j.lerpSelf(k,0.5),x.a=f,x.b=i,x.c=h,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),x.vertexNormals[1].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),x.vertexColors[1].copy(f),r.vertexColors[0].copy(f)),e=0):
p>=q&&p>=n?(j=k.clone(),j.lerpSelf(m,0.5),x.a=f,x.b=g,x.c=i,r.a=i,r.b=h,r.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f),r.vertexNormals[1].copy(e.vertexNormals[2]),r.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),r.vertexColors[0].copy(f),r.vertexColors[1].copy(e.vertexColors[2]),r.vertexColors[2].copy(e.vertexColors[0])),
e=1):(j=j.clone(),j.lerpSelf(m,0.5),x.a=f,x.b=g,x.c=i,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),r.vertexColors[0].copy(f)),e=2);C.push(x,r);a.vertices.push(j);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],r=j[0],h=
j[1],x=j[2],0===e?(k=r.clone(),k.lerpSelf(h,0.5),j=[r.clone(),k.clone(),x.clone()],h=[k.clone(),h.clone(),x.clone()]):1===e?(k=h.clone(),k.lerpSelf(x,0.5),j=[r.clone(),h.clone(),k.clone()],h=[k.clone(),x.clone(),r.clone()]):(k=r.clone(),k.lerpSelf(x,0.5),j=[r.clone(),h.clone(),k.clone()],h=[k.clone(),h.clone(),x.clone()]),w[f].push(j,h))}else{C.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,i=e.d,j=a.vertices[f],k=a.vertices[g],m=a.vertices[h],
n=a.vertices[i],q=j.distanceTo(k),p=k.distanceTo(m),s=m.distanceTo(n),u=j.distanceTo(n),q>b||p>b||s>b||u>b){t=a.vertices.length;A=a.vertices.length+1;x=e.clone();r=e.clone();q>=p&&q>=s&&q>=u||s>=p&&s>=q&&s>=u?(q=j.clone(),q.lerpSelf(k,0.5),k=m.clone(),k.lerpSelf(n,0.5),x.a=f,x.b=t,x.c=A,x.d=i,r.a=t,r.b=g,r.c=h,r.d=A,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),x.vertexNormals[1].copy(f),
x.vertexNormals[2].copy(g),r.vertexNormals[0].copy(f),r.vertexNormals[3].copy(g)),4===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),x.vertexColors[1].copy(f),x.vertexColors[2].copy(g),r.vertexColors[0].copy(f),r.vertexColors[3].copy(g)),e=0):(q=k.clone(),q.lerpSelf(m,0.5),k=n.clone(),k.lerpSelf(j,0.5),x.a=f,x.b=g,x.c=t,x.d=A,r.a=A,r.b=t,r.c=h,r.d=i,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),x.vertexNormals[2].copy(f),x.vertexNormals[3].copy(g),r.vertexNormals[0].copy(g),r.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),x.vertexColors[2].copy(f),x.vertexColors[3].copy(g),r.vertexColors[0].copy(g),r.vertexColors[1].copy(f)),e=1);C.push(x,r);a.vertices.push(q,k);
f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],r=j[0],h=j[1],x=j[2],j=j[3],0===e?(k=r.clone(),k.lerpSelf(h,0.5),m=x.clone(),m.lerpSelf(j,0.5),r=[r.clone(),k.clone(),m.clone(),j.clone()],h=[k.clone(),h.clone(),x.clone(),m.clone()]):(k=h.clone(),k.lerpSelf(x,0.5),m=j.clone(),m.lerpSelf(r,0.5),r=[r.clone(),h.clone(),k.clone(),m.clone()],h=[m.clone(),k.clone(),x.clone(),j.clone()]),w[f].push(r,h))}else{C.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}a.faces=
C;a.faceVertexUvs=w}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);f.sourceFile=a;return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var g=0,h=a.length;g<h;++g){var i={};
e[g]=i;var j=new XMLHttpRequest;j.onload=b(j,i);j.onerror=d;i=a[g];j.open("GET",i,!0);j.responseType="arraybuffer";j.send(null)}else j=new XMLHttpRequest,j.onload=function(){var a=THREE.ImageUtils.parseDDS(j.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}f.format=a.format;f.needsUpdate=!0;c&&c(f)}},j.onerror=
d,j.open("GET",a,!0),j.responseType="arraybuffer",j.send(null);return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var i=h[21];switch(i){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.isCubemap=h[28]&512?!0:!1;d.width=h[4];d.height=h[3];for(var h=h[1]+4,f=d.width,g=d.height,i=d.isCubemap?
6:1,j=0;j<i;j++){for(var k=0;k<d.mipmapCount;k++){var m=Math.max(4,f)/4*Math.max(4,g)/4*e,n={data:new Uint8Array(a,h,m),width:f,height:g};d.mipmaps.push(n);h+=m;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}f=d.width;g=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,
0,d,e).data,i=g.createImageData(d,e),j=i.data,k=0;k<d;k++)for(var m=0;m<e;m++){var n=0>m-1?0:m-1,q=m+1>e-1?e-1:m+1,p=0>k-1?0:k-1,s=k+1>d-1?d-1:k+1,u=[],t=[0,0,h[4*(m*d+k)]/255*b];u.push([-1,0,h[4*(m*d+p)]/255*b]);u.push([-1,-1,h[4*(n*d+p)]/255*b]);u.push([0,-1,h[4*(n*d+k)]/255*b]);u.push([1,-1,h[4*(n*d+s)]/255*b]);u.push([1,0,h[4*(m*d+s)]/255*b]);u.push([1,1,h[4*(q*d+s)]/255*b]);u.push([0,1,h[4*(q*d+k)]/255*b]);u.push([-1,1,h[4*(q*d+p)]/255*b]);n=[];p=u.length;for(q=0;q<p;q++){var s=u[q],A=u[(q+1)%
p],s=[s[0]-t[0],s[1]-t[1],s[2]-t[2]],A=[A[0]-t[0],A[1]-t[1],A[2]-t[2]];n.push(c([s[1]*A[2]-s[2]*A[1],s[2]*A[0]-s[0]*A[2],s[0]*A[1]-s[1]*A[0]]))}u=[0,0,0];for(q=0;q<n.length;q++)u[0]+=n[q][0],u[1]+=n[q][1],u[2]+=n[q][2];u[0]/=n.length;u[1]/=n.length;u[2]/=n.length;t=4*(m*d+k);j[t]=255*((u[0]+1)/2)|0;j[t+1]=255*((u[1]+1)/2)|0;j[t+2]=255*u[2]|0;j[t+3]=255}g.putImageData(i,0,0);return f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),
c=Math.floor(255*c.b),h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvReflect = reflect( I, worldNormal );\nvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"}}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,j,k,m,n,q,p,s,u,t=b.glyphs[a]||b.glyphs["?"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(" "));j=b.length;for(a=0;a<j;)switch(i=b[a++],i){case "m":i=b[a++]*c+d;k=b[a++]*c;e.moveTo(i,k);break;case "l":i=b[a++]*c+d;k=b[a++]*c;e.lineTo(i,k);break;case "q":i=b[a++]*
c+d;k=b[a++]*c;q=b[a++]*c+d;p=b[a++]*c;e.quadraticCurveTo(q,p,i,k);if(g=f[f.length-1]){m=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++){var A=g/h;THREE.Shape.Utils.b2(A,m,q,i);THREE.Shape.Utils.b2(A,n,p,k)}}break;case "b":if(i=b[a++]*c+d,k=b[a++]*c,q=b[a++]*c+d,p=b[a++]*-c,s=b[a++]*c+d,u=b[a++]*-c,e.bezierCurveTo(i,k,q,p,s,u),g=f[f.length-1]){m=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++)A=g/h,THREE.Shape.Utils.b3(A,m,q,s,i),THREE.Shape.Utils.b3(A,n,p,u,k)}}}return{offset:t.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],i,j,k;if(0<b(a))for(j=0;j<e;j++)g[j]=j;else for(j=0;j<e;j++)g[j]=e-1-j;var m=2*e;for(j=e-1;2<e;){if(0>=m--){console.log("Warning, unable to triangulate polygon!");break}i=j;e<=i&&(i=0);j=i+1;e<=j&&(j=0);k=j+1;e<=k&&(k=0);var n;a:{n=a;var q=i,p=j,s=k,u=e,t=g,A=void 0,x=void 0,r=void 0,C=void 0,w=void 0,
v=void 0,y=void 0,E=void 0,D=void 0,x=n[t[q]].x,r=n[t[q]].y,C=n[t[p]].x,w=n[t[p]].y,v=n[t[s]].x,y=n[t[s]].y;if(1E-10>(C-x)*(y-r)-(w-r)*(v-x))n=!1;else{for(A=0;A<u;A++)if(!(A==q||A==p||A==s)){var E=n[t[A]].x,D=n[t[A]].y,I=void 0,O=void 0,F=void 0,M=void 0,J=void 0,N=void 0,P=void 0,R=void 0,S=void 0,ha=void 0,Q=void 0,G=void 0,I=F=J=void 0,I=v-C,O=y-w,F=x-v,M=r-y,J=C-x,N=w-r,P=E-x,R=D-r,S=E-C,ha=D-w,Q=E-v,G=D-y,I=I*ha-O*S,J=J*R-N*P,F=F*G-M*Q;if(0<=I&&0<=F&&0<=J){n=!1;break a}}n=!0}}if(n){f.push([a[g[i]],
a[g[j]],a[g[k]]]);h.push([g[i],g[j],g[k]]);i=j;for(k=j+1;k<e;i++,k++)g[i]=g[k];e--;m=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;)if(d=Math.floor(g+(h-g)/2),i=c[d]-f,0>i)g=d+1;else if(0<i)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};
THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=0.5*(c-a),d=0.5*(d-b),f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,i,j,k,m=a[0]instanceof THREE.Vector3;k=m?new THREE.Vector3:new THREE.Vector2;i=0;for(j=a.length;i<j;i++)h=a[i],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),m&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),k.addSelf(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:k.divideScalar(j)};m&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g),g=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,e,f,g,h,i,j,k,m,n,q,p,s;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];m=f[0];n=f[1];0<c.length?(g=c[c.length-1],q=g.x,
p=g.y):(g=this.actions[d-1].args,q=g[g.length-2],p=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b2(s,q,m,h),s=THREE.Shape.Utils.b2(s,p,n,i),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];m=f[0];n=f[1];j=f[2];k=f[3];0<c.length?(g=c[c.length-1],q=g.x,p=g.y):(g=this.actions[d-1].args,q=g[g.length-2],p=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b3(s,q,m,j,h),s=THREE.Shape.Utils.b3(s,p,n,k,i),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;s=s.concat(f[0]);s=new THREE.SplineCurve(s);for(f=1;f<=g;f++)c.push(s.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];i=f[1];n=f[2];j=f[3];g=f[4];m=!!f[5];q=g-j;p=2*a;for(f=1;f<=p;f++)s=f/p,m||(s=1-s),s=j+s*q,g=h+n*Math.cos(s),s=i+n*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:h=f[0];i=f[1];n=f[2];k=f[3];j=f[4];g=f[5];m=!!f[6];q=g-j;p=2*a;for(f=1;f<=p;f++)s=f/p,m||
(s=1-s),s=j+s*q,g=h+n*Math.cos(s),s=i+k*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};
THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};
THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,j,k,m,n,q,p=[];for(i=0;i<b.length;i++){j=b[i];Array.prototype.push.apply(d,j);f=Number.POSITIVE_INFINITY;for(e=0;e<j.length;e++){n=j[e];q=[];for(m=0;m<c.length;m++)k=c[m],k=n.distanceToSquared(k),q.push(k),k<f&&(f=k,g=e,h=m)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:j.length-1;var s=[j[g],c[h],c[e]];m=THREE.FontUtils.Triangulate.area(s);var u=[j[g],j[f],c[h]];n=THREE.FontUtils.Triangulate.area(u);q=h;k=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=j.length);g%=j.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:j.length-1;s=[j[g],c[h],c[e]];s=THREE.FontUtils.Triangulate.area(s);u=[j[g],j[f],c[h]];u=THREE.FontUtils.Triangulate.area(u);m+n>s+u&&(h=q,g=k,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=j.length),g%=j.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:j.length-1);m=c.slice(0,h);n=c.slice(h);q=j.slice(g);k=j.slice(0,g);f=[j[g],j[f],c[h]];p.push([j[g],c[h],c[e]]);p.push(f);c=m.concat(q).concat(k).concat(n)}return{shape:c,
isolatedPts:p,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,i,j={};f=0;for(g=d.length;f<g;f++)i=d[f].x+":"+d[f].y,void 0!==j[i]&&console.log("Duplicate point",i),j[i]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=j[i],void 0!==i&&(h[d]=i)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var j=a.hierarchy[c].keys[d].morphTargets[i];h[j]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var k={};for(j in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===j){k[j]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(k[j]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=k}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,i,j,k;k=this.currentTime+=a*this.timeScale;j=this.currentTime%=this.data.length;parseInt(Math.min(j*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,n=this.hierarchy.length;m<n;m++){a=this.hierarchy[m];i=a.animationCache;for(var q=0;3>q;q++){c=b[q];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=k){if(j<k)if(this.loop){g=this.data.hierarchy[m].keys[0];for(h=this.getNextKeyWith(c,m,1);h.time<
j;)g=h,h=this.getNextKeyWith(c,m,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,m,h.index+1);while(h.time<j)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(j-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+m),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",m,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",m,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,j;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];i=a[c[2]];j=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],i[0],j[0],e,c,g);d[1]=this.interpolate(f[1],h[1],i[1],j[1],e,c,g);d[2]=this.interpolate(f[2],h[2],i[2],j[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var k=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=k.length-1;e=this.hierarchy[a];if(k.length){for(k=
0;k<f.length;k++)g=f[k],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var k=b.keys,m=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(k.length){this.JITCompile&&m&&(d instanceof
THREE.Bone?d.skinMatrix=m.originalMatrix:d.matrix=m.originalMatrix);b=m.prevKey;c=m.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=k[0];for(c=k[1];c.time<g;)b=c,c=k[b.index+1]}else if(!i)for(var n=k.length-1;c.time<g&&c.index!==n;)b=c,c=k[b.index+1];m.prevKey=b;m.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,e=c.length;d<e;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8,e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),this.faceVertexUvs[0].push([f[e],
f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,s){var u,t=h.widthSegments,A=h.heightSegments,x=e/2,r=f/2,C=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)u="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)u="y",A=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)u="x",t=h.depthSegments;var w=t+1,v=A+1,y=e/t,E=f/A,D=new THREE.Vector3;D[u]=0<g?1:-1;for(e=0;e<v;e++)for(f=0;f<w;f++){var I=new THREE.Vector3;I[a]=(f*y-x)*c;I[b]=(e*E-r)*d;I[u]=g;h.vertices.push(I)}for(e=
0;e<A;e++)for(f=0;f<t;f++)a=new THREE.Face4(f+w*e+C,f+w*(e+1)+C,f+1+w*(e+1)+C,f+1+w*e+C),a.normal.copy(D),a.vertexNormals.push(D.clone(),D.clone(),D.clone(),D.clone()),a.materialIndex=s,h.faces.push(a),h.faceVertexUvs[0].push([new THREE.UV(f/t,1-e/A),new THREE.UV(f/t,1-(e+1)/A),new THREE.UV((f+1)/t,1-(e+1)/A),new THREE.UV((f+1)/t,1-e/A)])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;a=this.width/
2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,g=c/2,d=d||8,e=e||1,h,i,j=[],k=[];for(i=0;i<=e;i++){var m=[],n=[],q=i/e,p=q*(b-a)+a;for(h=0;h<=d;h++){var s=h/d,u=new THREE.Vector3;u.x=p*Math.sin(2*s*Math.PI);u.y=-q*c+g;u.z=p*Math.cos(2*s*Math.PI);this.vertices.push(u);m.push(this.vertices.length-1);n.push(new THREE.UV(s,1-q))}j.push(m);k.push(n)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(m=this.vertices[j[0][h]].clone(),n=this.vertices[j[0][h+
1]].clone()):(m=this.vertices[j[1][h]].clone(),n=this.vertices[j[1][h+1]].clone());m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();for(i=0;i<e;i++){var q=j[i][h],p=j[i+1][h],s=j[i+1][h+1],u=j[i][h+1],t=m.clone(),A=m.clone(),x=n.clone(),r=n.clone(),C=k[i][h].clone(),w=k[i+1][h].clone(),v=k[i+1][h+1].clone(),y=k[i][h+1].clone();this.faces.push(new THREE.Face4(q,p,s,u,[t,A,x,r]));this.faceVertexUvs[0].push([C,w,v,y])}}if(!f&&0<a){this.vertices.push(new THREE.Vector3(0,
g,0));for(h=0;h<d;h++)q=j[0][h],p=j[0][h+1],s=this.vertices.length-1,t=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),C=k[0][h].clone(),w=k[0][h+1].clone(),v=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(q,p,s,[t,A,x])),this.faceVertexUvs[0].push([C,w,v])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)q=j[i][h+1],p=j[i][h],s=this.vertices.length-1,t=new THREE.Vector3(0,-1,0),A=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),C=
k[i][h+1].clone(),w=k[i][h].clone(),v=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(q,p,s,[t,A,x])),this.faceVertexUvs[0].push([C,w,v])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();
h.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),a=new THREE.Vector2(a,c)):a=d.multiplyScalar(g).addSelf(h).subSelf(a).clone();return a}function e(c,d){var e,f;for(G=c.length;0<=--G;){e=G;f=G-1;0>f&&(f=c.length-
1);for(var g=0,h=q+2*k,g=0;g<h;g++){var i=S*g,j=S*(g+1),n=d+e+i,i=d+f+i,m=d+f+j,j=d+e+j,p=c,r=g,s=h,t=e,u=f,n=n+O,i=i+O,m=m+O,j=j+O;I.faces.push(new THREE.Face4(n,i,m,j,null,null,A));n=x.generateSideWallUV(I,a,p,b,n,i,m,j,r,s,t,u);I.faceVertexUvs[0].push(n)}}}function f(a,b,c){I.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=O;d+=O;e+=O;I.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?x.generateBottomUV(I,a,b,c,d,e):x.generateTopUV(I,a,b,c,d,e);I.faceVertexUvs[0].push(c)}var h=
void 0!==b.amount?b.amount:100,i=void 0!==b.bevelThickness?b.bevelThickness:6,j=void 0!==b.bevelSize?b.bevelSize:i-2,k=void 0!==b.bevelSegments?b.bevelSegments:3,m=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,p=b.extrudePath,s,u=!1,t=b.material,A=b.extrudeMaterial,x=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,r,C,w,v;p&&(s=p.getSpacedPoints(q),u=!0,m=!1,r=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(p,
q,!1),C=new THREE.Vector3,w=new THREE.Vector3,v=new THREE.Vector3);m||(j=i=k=0);var y,E,D,I=this,O=this.vertices.length,n=a.extractPoints(n),F=n.shape,n=n.holes;if(p=!THREE.Shape.Utils.isClockWise(F)){F=F.reverse();E=0;for(D=n.length;E<D;E++)y=n[E],THREE.Shape.Utils.isClockWise(y)&&(n[E]=y.reverse());p=!1}var M=THREE.Shape.Utils.triangulateShape(F,n),p=F;E=0;for(D=n.length;E<D;E++)y=n[E],F=F.concat(y);var J,N,P,R,S=F.length,ha=M.length,Q=[],G=0,L=p.length;J=L-1;for(N=G+1;G<L;G++,J++,N++)J===L&&(J=
0),N===L&&(N=0),Q[G]=d(p[G],p[J],p[N]);var T=[],da,ma=Q.concat();E=0;for(D=n.length;E<D;E++){y=n[E];da=[];G=0;L=y.length;J=L-1;for(N=G+1;G<L;G++,J++,N++)J===L&&(J=0),N===L&&(N=0),da[G]=d(y[G],y[J],y[N]);T.push(da);ma=ma.concat(da)}for(J=0;J<k;J++){y=J/k;P=i*(1-y);N=j*Math.sin(y*Math.PI/2);G=0;for(L=p.length;G<L;G++)R=c(p[G],Q[G],N),f(R.x,R.y,-P);E=0;for(D=n.length;E<D;E++){y=n[E];da=T[E];G=0;for(L=y.length;G<L;G++)R=c(y[G],da[G],N),f(R.x,R.y,-P)}}N=j;for(G=0;G<S;G++)R=m?c(F[G],ma[G],N):F[G],u?(w.copy(r.normals[0]).multiplyScalar(R.x),
C.copy(r.binormals[0]).multiplyScalar(R.y),v.copy(s[0]).addSelf(w).addSelf(C),f(v.x,v.y,v.z)):f(R.x,R.y,0);for(y=1;y<=q;y++)for(G=0;G<S;G++)R=m?c(F[G],ma[G],N):F[G],u?(w.copy(r.normals[y]).multiplyScalar(R.x),C.copy(r.binormals[y]).multiplyScalar(R.y),v.copy(s[y]).addSelf(w).addSelf(C),f(v.x,v.y,v.z)):f(R.x,R.y,h/q*y);for(J=k-1;0<=J;J--){y=J/k;P=i*(1-y);N=j*Math.sin(y*Math.PI/2);G=0;for(L=p.length;G<L;G++)R=c(p[G],Q[G],N),f(R.x,R.y,h+P);E=0;for(D=n.length;E<D;E++){y=n[E];da=T[E];G=0;for(L=y.length;G<
L;G++)R=c(y[G],da[G],N),u?f(R.x,R.y+s[q-1].y,s[q-1].x+P):f(R.x,R.y,h+P)}}if(m){i=0*S;for(G=0;G<ha;G++)h=M[G],g(h[2]+i,h[1]+i,h[0]+i,!0);i=S*(q+2*k);for(G=0;G<ha;G++)h=M[G],g(h[0]+i,h[1]+i,h[2]+i,!1)}else{for(G=0;G<ha;G++)h=M[G],g(h[2],h[1],h[0],!0);for(G=0;G<ha;G++)h=M[G],g(h[0]+S*q,h[1]+S*q,h[2]+S*q,!1)}h=0;e(p,h);h+=p.length;E=0;for(D=n.length;E<D;E++)y=n[E],e(y,h),h+=y.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,j=a.vertices[g].x,k=a.vertices[g].y,
g=a.vertices[g].z,m=a.vertices[h].x,n=a.vertices[h].y,a=a.vertices[h].z;return 0.01>Math.abs(c-i)?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(j,1-g),new THREE.UV(m,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(i,1-f),new THREE.UV(k,1-g),new THREE.UV(n,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var i=e.shape,j=e.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();e=0;for(f=j.length;e<f;e++)g=j[e],THREE.Shape.Utils.isClockWise(g)&&(j[e]=g.reverse())}var k=THREE.Shape.Utils.triangulateShape(i,j);e=0;for(f=j.length;e<f;e++)g=j[e],
i=i.concat(g);j=i.length;f=k.length;for(e=0;e<j;e++)g=i[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)j=k[e],i=j[0]+h,g=j[1]+h,j=j[2]+h,this.faces.push(new THREE.Face3(i,g,j,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,j))};THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);for(var g=b+1,c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;for(var c=a/2,e=b/2,d=this.widthSegments,f=this.heightSegments,g=d+1,h=f+1,i=this.width/d,j=this.height/f,k=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-c,-(a*j-e),0));for(a=0;a<f;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),c.normal.copy(k),c.vertexNormals.push(k.clone(),k.clone(),
k.clone(),k.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.UV(b/d,1-a/f),new THREE.UV(b/d,1-(a+1)/f),new THREE.UV((b+1)/d,1-(a+1)/f),new THREE.UV((b+1)/d,1-a/f)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);for(var d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI,c=[],h=[],b=0;b<=this.heightSegments;b++){for(var i=[],j=[],a=0;a<=this.widthSegments;a++){var k=a/this.widthSegments,m=b/this.heightSegments,n=new THREE.Vector3;n.x=-this.radius*Math.cos(d+k*e)*Math.sin(f+m*g);n.y=this.radius*
Math.cos(f+m*g);n.z=this.radius*Math.sin(d+k*e)*Math.sin(f+m*g);this.vertices.push(n);i.push(this.vertices.length-1);j.push(new THREE.UV(k,1-m))}c.push(i);h.push(j)}for(b=0;b<this.heightSegments;b++)for(a=0;a<this.widthSegments;a++){var d=c[b][a+1],e=c[b][a],f=c[b+1][a],g=c[b+1][a+1],i=this.vertices[d].clone().normalize(),j=this.vertices[e].clone().normalize(),k=this.vertices[f].clone().normalize(),m=this.vertices[g].clone().normalize(),n=h[b][a+1].clone(),q=h[b][a].clone(),p=h[b+1][a].clone(),s=
h[b+1][a+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,f,g,[i,k,m])),this.faceVertexUvs[0].push([n,p,s])):Math.abs(this.vertices[f].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,f,[i,j,k])),this.faceVertexUvs[0].push([n,q,p])):(this.faces.push(new THREE.Face4(d,e,f,g,[i,j,k,m])),this.faceVertexUvs[0].push([n,q,p,s]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:this.radius}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.addSelf(b[e]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);
i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var i=2*(a/this.radialSegments)*this.p*Math.PI,g=2*(b/this.tubularSegments)*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,f);d.add(i,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=i*d.x+g*e.x;f.y+=i*d.y+g*e.y;f.z+=i*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=
0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments),i=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),j=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),k=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,
i,j,k])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h,e=this.segments+1,i,j,k,f=new THREE.Vector3,m,n,q,b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);m=b.tangents;n=b.normals;q=b.binormals;this.tangents=m;this.normals=n;this.binormals=q;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);k=a.getPointAt(d);d=m[b];g=n[b];
h=q[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,k,c,255)),this.debug.add(new THREE.ArrowHelper(g,k,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,k,c,65280)));for(d=0;d<this.radiusSegments;d++)i=2*(d/this.radiusSegments)*Math.PI,j=-this.radius*Math.cos(i),i=this.radius*Math.sin(i),f.copy(k),f.x+=j*g.x+i*h.x,f.y+=j*g.y+i*h.y,f.z+=j*g.z+i*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)e=this.closed?
(b+1)%this.segments:b+1,f=(d+1)%this.radiusSegments,a=this.grid[b][d],c=this.grid[e][d],e=this.grid[e][f],f=this.grid[b][f],m=new THREE.UV(b/this.segments,d/this.radiusSegments),n=new THREE.UV((b+1)/this.segments,d/this.radiusSegments),q=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,e,f)),this.faceVertexUvs[0].push([m,n,q,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};
THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,j,k,m;this.tangents=e;this.normals=f;this.binormals=g;for(j=0;j<b;j++)k=j/(b-1),e[j]=a.getTangentAt(k),e[j].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;j=Math.abs(e[0].x);k=Math.abs(e[0].y);m=Math.abs(e[0].z);j<=a&&(a=j,d.set(1,0,0));k<=a&&(a=k,d.set(0,1,0));m<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(j=1;j<b;j++)f[j]=f[j-1].clone(),g[j]=g[j-1].clone(),h.cross(e[j-1],e[j]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[j-1].dot(e[j])),i.makeRotationAxis(h,d).multiplyVector3(f[j])),g[j].cross(e[j],f[j]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d);for(j=1;j<b;j++)i.makeRotationAxis(e[j],d*j).multiplyVector3(f[j]),g[j].cross(e[j],f[j])}};THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),i.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){m[a.index]||(m[a.index]=[]);m[b.index]||(m[b.index]=[]);var c=m[a.index][b.index];void 0===c&&(m[a.index][b.index]=m[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,i=this,j=0,k=a.length;j<k;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var m=[],a=this.vertices,j=0,k=b.length;j<k;j++)f(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices();j=0;for(k=this.vertices.length;j<k;j++)this.vertices[j].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=void 0===d?!1:d,h,i,j,k,m=b+1;for(h=0;h<=c;h++){k=h/c;for(i=0;i<=b;i++)j=i/b,j=a(j,k),e.push(j)}var n,q,p,s;for(h=0;h<c;h++)for(i=0;i<b;i++)a=h*m+i,e=h*m+i+1,k=(h+1)*m+i,j=(h+1)*m+i+1,n=new THREE.UV(i/b,h/c),q=new THREE.UV((i+1)/b,h/c),p=new THREE.UV(i/b,(h+1)/c),s=new THREE.UV((i+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,k)),f.push(new THREE.Face3(e,j,k)),g.push([n,q,
p]),g.push([q,s,p])):(f.push(new THREE.Face4(a,e,j,k)),g.push([n,q,s,p]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x+=g*2E-6*(Math.random()-0.5);f.y+=g*2E-6*(Math.random()-0.5);f.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var i=c[h],j=f,k=a[i[0]],m;m=k;var n=a[i[1]],q=a[i[2]],p=new THREE.Vector3,s=new THREE.Vector3;p.sub(q,n);s.sub(m,n);p.crossSelf(s);p.normalize();m=p;k=m.dot(k);if(m.dot(j)>=
k){for(j=0;3>j;j++){k=[i[j],i[(j+1)%3]];m=!0;for(n=0;n<g.length;n++)if(g[n][0]===k[1]&&g[n][1]===k[0]){g[n]=g[g.length-1];g.pop();m=!1;break}m&&g.push(k)}c[h]=c[c.length-1];c.pop()}else h++}for(n=0;n<g.length;n++)c.push([g[n][0],g[n][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===f[g[h]]&&(f[g[h]]=e++,this.vertices.push(a[g[h]])),g[h]=f[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=this.faces[d],
this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;THREE.DirectionalLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1});
this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,g);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.add(this.lightArrow);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,
8,4),c=new THREE.MeshBasicMaterial({color:d,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,c),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),
d.computeLineDistances(),this.targetLine=new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);
this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.r*=d;this.color.g*=d;this.color.b*=d;var e=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.r*=d;this.groundColor.g*=d;this.groundColor.b*=d;for(var d=this.groundColor.getHex(),f=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*
Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:e,fog:!1}),i=new THREE.MeshBasicMaterial({color:d,fog:!1}),j=0,k=f.faces.length;j<k;j++)f.faces[j].materialIndex=0;j=0;for(k=g.faces.length;j<k;j++)g.faces[j].materialIndex=1;THREE.GeometryUtils.merge(f,g);this.lightSphere=new THREE.Mesh(f,new THREE.MeshFaceMaterial([h,i]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,e);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,
1,0),new THREE.Vector3(0,-1.1*(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.groundColor.copy(this.light.groundColor);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.groundColor.r*=a;this.groundColor.g*=a;this.groundColor.b*=a;this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());
this.lookAt(this.target)};THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.color=a.color.clone();var c=THREE.Math.clamp(a.intensity,0,1);this.color.r*=c;this.color.g*=c;this.color.b*=c;var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.IcosahedronGeometry(1,2),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,
opacity:0.1,transparent:!0});this.lightSphere=new THREE.Mesh(c,g);this.lightRays=new THREE.Line(e,h,THREE.LinePieces);this.lightDistance=new THREE.Mesh(f,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};
THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};THREE.SpotLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),h=new THREE.Matrix4;h.rotateX(-Math.PI/2);h.translate(new THREE.Vector3(0,
-0.5,0));g.applyMatrix(h);var i=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),j=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,i);this.lightCone=new THREE.Mesh(g,j);c=a.distance?a.distance:1E4;e=2*c*Math.tan(0.5*a.angle);this.lightCone.scale.set(e,e,c);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=
!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightArrow);this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,8,4),f=new THREE.MeshBasicMaterial({color:d,
wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,f),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=
new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);this.color.copy(this.light.color);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);
this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+"_"+Math.max(a,b)};
THREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){void 0===g[a]&&(g[a]=[]);g[a].push(b)}var c,d,e,f,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++)e=a.faces[c],e instanceof THREE.Face3?(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.a),b(f,c)):e instanceof THREE.Face4&&(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.d),b(f,c),f=h(e.d,e.a),b(f,c));return g};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){k.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){k.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function e(a,b,d,e,g,h,m){var n=new THREE.Face4(a,b,d,e,null,g.color,g.materialIndex);if(k.useOldVertexColors){n.vertexColors=[];for(var q,r,p,s=0;4>s;s++){p=h[s];q=new THREE.Color;q.setRGB(0,0,0);for(var t=0;t<p.length;t++)r=g.vertexColors[p[t]-
1],q.r+=r.r,q.g+=r.g,q.b+=r.b;q.r/=p.length;q.g/=p.length;q.b/=p.length;n.vertexColors[s]=q}}i.push(n);k.supportUVs&&(g=[f(a,""),f(b,m),f(d,m),f(e,m)],g[0]?g[1]?g[2]?g[3]?j.push(g):c("d :( ",e+":"+m):c("c :( ",d+":"+m):c("b :( ",b+":"+m):c("a :( ",a+":"+m))}function f(a,b){var e=a+":"+b,f=x[e];return!f?(a>=s&&a<s+p.length?c("face pt"):c("edge pt"),d("warning, UV not found for",e),null):f}function g(a,b,c){var e=a+":"+b;e in x?d("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",e,x[e]):x[e]=c}var h=[],
i=[],j=[],k=this,m=THREE.GeometryUtils.orderedKey,n=THREE.GeometryUtils.computeEdgeFaces,q=a.vertices,p=a.faces,s=q.length,h=q.concat(),u=[],t={},A={},x={},r,C,w,v,y,E=a.faceVertexUvs[0],D;c("originalFaces, uvs, originalVerticesLength",p.length,E.length,s);if(k.supportUVs){r=0;for(C=E.length;r<C;r++){w=0;for(v=E[r].length;w<v;w++)D=p[r]["abcd".charAt(w)],g(D,r,E[r][w])}}0==E.length&&(k.supportUVs=!1);r=0;for(var I in x)r++;r||(k.supportUVs=!1,c("no uvs"));r=0;for(C=p.length;r<C;r++)y=p[r],u.push(y.centroid),
h.push(y.centroid),k.supportUVs&&(v=new THREE.UV,y instanceof THREE.Face3?(v.u=f(y.a,r).u+f(y.b,r).u+f(y.c,r).u,v.v=f(y.a,r).v+f(y.b,r).v+f(y.c,r).v,v.u/=3,v.v/=3):y instanceof THREE.Face4&&(v.u=f(y.a,r).u+f(y.b,r).u+f(y.c,r).u+f(y.d,r).u,v.v=f(y.a,r).v+f(y.b,r).v+f(y.c,r).v+f(y.d,r).v,v.u/=4,v.v/=4),g(s+r,"",v));var n=n(a),O;C=0;var F,M;I={};E={};for(r in n){D=n[r];F=r.split("_");M=F[0];F=F[1];w=M;y=[M,F];void 0===I[w]&&(I[w]=[]);I[w].push(y);w=F;y=[M,F];void 0===I[w]&&(I[w]=[]);I[w].push(y);w=0;
for(v=D.length;w<v;w++){y=D[w];O=M;var J=y,N=r;void 0===E[O]&&(E[O]={});E[O][J]=N;O=F;J=r;void 0===E[O]&&(E[O]={});E[O][y]=J}2>D.length&&(A[r]=!0)}for(r in n)D=n[r],y=D[0],O=D[1],F=r.split("_"),M=F[0],F=F[1],v=new THREE.Vector3,b(0<D.length,"an edge without faces?!"),1==D.length?(v.addSelf(q[M]),v.addSelf(q[F]),v.multiplyScalar(0.5)):(v.addSelf(u[y]),v.addSelf(u[O]),v.addSelf(q[M]),v.addSelf(q[F]),v.multiplyScalar(0.25)),t[r]=s+p.length+C,h.push(v),C++,k.supportUVs&&(v=new THREE.UV,v.u=f(M,y).u+f(F,
y).u,v.v=f(M,y).v+f(F,y).v,v.u/=2,v.v/=2,g(t[r],y,v),2<=D.length&&(b(2==D.length,"did we plan for more than 2 edges?"),v=new THREE.UV,v.u=f(M,O).u+f(F,O).u,v.v=f(M,O).v+f(F,O).v,v.u/=2,v.v/=2,g(t[r],O,v)));c("-- Step 2 done");var P,R;v=["123","12","2","23"];O=["123","23","3","31"];var J=["123","31","1","12"],N=["1234","12","2","23"],S=["1234","23","3","34"],ha=["1234","34","4","41"],Q=["1234","41","1","12"];r=0;for(C=u.length;r<C;r++)y=p[r],D=s+r,y instanceof THREE.Face3?(M=m(y.a,y.b),F=m(y.b,y.c),
P=m(y.c,y.a),e(D,t[M],y.b,t[F],y,v,r),e(D,t[F],y.c,t[P],y,O,r),e(D,t[P],y.a,t[M],y,J,r)):y instanceof THREE.Face4?(M=m(y.a,y.b),F=m(y.b,y.c),P=m(y.c,y.d),R=m(y.d,y.a),e(D,t[M],y.b,t[F],y,N,r),e(D,t[F],y.c,t[P],y,S,r),e(D,t[P],y.d,t[R],y,ha,r),e(D,t[R],y.a,t[M],y,Q,r)):c("face should be a face!",y);t=new THREE.Vector3;y=new THREE.Vector3;r=0;for(C=q.length;r<C;r++)if(void 0!==I[r]){t.set(0,0,0);y.set(0,0,0);F=new THREE.Vector3(0,0,0);D=0;for(w in E[r])t.addSelf(u[w]),D++;O=0;M=I[r].length;v=D!=M;for(w=
0;w<M;w++)A[m(I[r][w][0],I[r][w][1])]&&O++;t.divideScalar(D);O=0;if(v){for(w=0;w<M;w++)if(D=I[r][w],J=1==n[m(D[0],D[1])].length)D=q[D[0]].clone().addSelf(q[D[1]]).divideScalar(2),y.addSelf(D),O++;y.divideScalar(4);b(2==O,"should have only 2 boundary edges")}else{for(w=0;w<M;w++)D=I[r][w],D=q[D[0]].clone().addSelf(q[D[1]]).divideScalar(2),y.addSelf(D);y.divideScalar(M)}F.addSelf(q[r]);v?(F.divideScalar(2),F.addSelf(y)):(F.multiplyScalar(M-3),F.addSelf(t),F.addSelf(y.multiplyScalar(2)),F.divideScalar(M));
h[r]=F}a.vertices=h;a.faces=i;a.faceVertexUvs[0]=j;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=i)}}for(i in d)h=d[i],this.createAnimation(i,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,i,j,k,m,n;this.init=function(q){b=q.context;c=q;d=new Float32Array(16);e=new Uint16Array(6);q=0;d[q++]=-1;d[q++]=-1;d[q++]=0;d[q++]=0;d[q++]=1;d[q++]=-1;d[q++]=1;d[q++]=0;
d[q++]=1;d[q++]=1;d[q++]=1;d[q++]=1;d[q++]=-1;d[q++]=1;d[q++]=0;d[q++]=1;q=0;e[q++]=0;e[q++]=1;e[q++]=2;e[q++]=0;e[q++]=2;e[q++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(j=!1,k=a(THREE.ShaderFlares.lensFlare)):(j=!0,k=a(THREE.ShaderFlares.lensFlareVertexTexture));m={};n={};m.vertex=b.getAttribLocation(k,"position");m.uv=b.getAttribLocation(k,"uv");n.renderType=b.getUniformLocation(k,"renderType");n.map=b.getUniformLocation(k,"map");n.occlusionMap=b.getUniformLocation(k,"occlusionMap");n.opacity=b.getUniformLocation(k,"opacity");n.color=b.getUniformLocation(k,
"color");n.scale=b.getUniformLocation(k,"scale");n.rotation=b.getUniformLocation(k,"rotation");n.screenPosition=b.getUniformLocation(k,"screenPosition")};this.render=function(a,d,e,u){var a=a.__webglFlares,t=a.length;if(t){var A=new THREE.Vector3,x=u/e,r=0.5*e,C=0.5*u,w=16/u,v=new THREE.Vector2(w*x,w),y=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),D=n,w=m;b.useProgram(k);b.enableVertexAttribArray(m.vertex);b.enableVertexAttribArray(m.uv);b.uniform1i(D.occlusionMap,0);b.uniform1i(D.map,1);b.bindBuffer(b.ARRAY_BUFFER,
f);b.vertexAttribPointer(w.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(w.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var I,O,F,M,J;for(I=0;I<t;I++)if(w=16/u,v.set(w*x,w),M=a[I],A.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(A),d.projectionMatrix.multiplyVector3(A),y.copy(A),E.x=y.x*r+r,E.y=y.y*C+C,j||0<E.x&&E.x<e&&0<E.y&&E.y<u){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,E.x-8,E.y-8,16,16,0);b.uniform1i(D.renderType,0);b.uniform2f(D.scale,v.x,v.y);b.uniform3f(D.screenPosition,y.x,y.y,y.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,E.x-8,E.y-8,16,16,0);b.uniform1i(D.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,
6,b.UNSIGNED_SHORT,0);M.positionScreen.copy(y);M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares();b.uniform1i(D.renderType,2);b.enable(b.BLEND);O=0;for(F=M.lensFlares.length;O<F;O++)J=M.lensFlares[O],0.0010<J.opacity&&0.0010<J.scale&&(y.x=J.x,y.y=J.y,y.z=J.z,w=J.size*J.scale/u,v.x=w*x,v.y=w,b.uniform3f(D.screenPosition,y.x,y.y,y.z),b.uniform2f(D.scale,v.x,v.y),b.uniform1f(D.rotation,J.rotation),b.uniform1f(D.opacity,J.opacity),b.uniform3f(D.color,J.color.r,J.color.g,J.color.b),
c.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),c.setTexture(J.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,j=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(k,m){var n,q,p,s,u,t,A,x,r,C=[];s=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);n=0;for(q=k.__lights.length;n<q;n++)if(p=k.__lights[n],p.castShadow)if(p instanceof THREE.DirectionalLight&&p.shadowCascade)for(u=0;u<p.shadowCascadeCount;u++){var w;if(p.shadowCascadeArray[u])w=p.shadowCascadeArray[u];else{r=p;A=u;w=new THREE.DirectionalLight;w.isVirtual=!0;w.onlyShadow=!0;w.castShadow=!0;w.shadowCameraNear=r.shadowCameraNear;w.shadowCameraFar=r.shadowCameraFar;w.shadowCameraLeft=r.shadowCameraLeft;w.shadowCameraRight=r.shadowCameraRight;
w.shadowCameraBottom=r.shadowCameraBottom;w.shadowCameraTop=r.shadowCameraTop;w.shadowCameraVisible=r.shadowCameraVisible;w.shadowDarkness=r.shadowDarkness;w.shadowBias=r.shadowCascadeBias[A];w.shadowMapWidth=r.shadowCascadeWidth[A];w.shadowMapHeight=r.shadowCascadeHeight[A];w.pointsWorld=[];w.pointsFrustum=[];x=w.pointsWorld;t=w.pointsFrustum;for(var v=0;8>v;v++)x[v]=new THREE.Vector3,t[v]=new THREE.Vector3;x=r.shadowCascadeNearZ[A];r=r.shadowCascadeFarZ[A];t[0].set(-1,-1,x);t[1].set(1,-1,x);t[2].set(-1,
1,x);t[3].set(1,1,x);t[4].set(-1,-1,r);t[5].set(1,-1,r);t[6].set(-1,1,r);t[7].set(1,1,r);w.originalCamera=m;t=new THREE.Gyroscope;t.position=p.shadowCascadeOffset;t.add(w);t.add(w.target);m.add(t);p.shadowCascadeArray[u]=w;console.log("Created virtualLight",w)}A=p;x=u;r=A.shadowCascadeArray[x];r.position.copy(A.position);r.target.position.copy(A.target.position);r.lookAt(r.target);r.shadowCameraVisible=A.shadowCameraVisible;r.shadowDarkness=A.shadowDarkness;r.shadowBias=A.shadowCascadeBias[x];t=A.shadowCascadeNearZ[x];
A=A.shadowCascadeFarZ[x];r=r.pointsFrustum;r[0].z=t;r[1].z=t;r[2].z=t;r[3].z=t;r[4].z=A;r[5].z=A;r[6].z=A;r[7].z=A;C[s]=w;s++}else C[s]=p,s++;n=0;for(q=C.length;n<q;n++){p=C[n];p.shadowMap||(p.shadowMap=new THREE.WebGLRenderTarget(p.shadowMapWidth,p.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),p.shadowMapSize=new THREE.Vector2(p.shadowMapWidth,p.shadowMapHeight),p.shadowMatrix=new THREE.Matrix4);if(!p.shadowCamera){if(p instanceof THREE.SpotLight)p.shadowCamera=
new THREE.PerspectiveCamera(p.shadowCameraFov,p.shadowMapWidth/p.shadowMapHeight,p.shadowCameraNear,p.shadowCameraFar);else if(p instanceof THREE.DirectionalLight)p.shadowCamera=new THREE.OrthographicCamera(p.shadowCameraLeft,p.shadowCameraRight,p.shadowCameraTop,p.shadowCameraBottom,p.shadowCameraNear,p.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}k.add(p.shadowCamera);b.autoUpdateScene&&k.updateMatrixWorld()}p.shadowCameraVisible&&!p.cameraHelper&&(p.cameraHelper=
new THREE.CameraHelper(p.shadowCamera),p.shadowCamera.add(p.cameraHelper));if(p.isVirtual&&w.originalCamera==m){u=m;s=p.shadowCamera;t=p.pointsFrustum;r=p.pointsWorld;i.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(A=0;8>A;A++)x=r[A],x.copy(t[A]),THREE.ShadowMapPlugin.__projector.unprojectVector(x,u),s.matrixWorldInverse.multiplyVector3(x),x.x<i.x&&(i.x=x.x),x.x>j.x&&(j.x=x.x),x.y<i.y&&(i.y=x.y),x.y>j.y&&(j.y=x.y),x.z<i.z&&(i.z=x.z),x.z>j.z&&(j.z=x.z);s.left=i.x;s.right=
j.x;s.top=j.y;s.bottom=i.y;s.updateProjectionMatrix()}s=p.shadowMap;t=p.shadowMatrix;u=p.shadowCamera;u.position.copy(p.matrixWorld.getPosition());u.lookAt(p.target.matrixWorld.getPosition());u.updateMatrixWorld();u.matrixWorldInverse.getInverse(u.matrixWorld);p.cameraHelper&&(p.cameraHelper.visible=p.shadowCameraVisible);p.shadowCameraVisible&&p.cameraHelper.update();t.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);t.multiplySelf(u.projectionMatrix);t.multiplySelf(u.matrixWorldInverse);h.multiply(u.projectionMatrix,
u.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(s);b.clear();r=k.__webglObjects;p=0;for(s=r.length;p<s;p++)if(A=r[p],t=A.object,A.render=!1,t.visible&&t.castShadow&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||g.contains(t)))t._modelViewMatrix.multiply(u.matrixWorldInverse,t.matrixWorld),A.render=!0;p=0;for(s=r.length;p<s;p++)A=r[p],A.render&&(t=A.object,A=A.buffer,v=t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material,x=0<
t.geometry.morphTargets.length&&v.morphTargets,v=t instanceof THREE.SkinnedMesh&&v.skinning,x=t.customDepthMaterial?t.customDepthMaterial:v?x?f:e:x?d:c,A instanceof THREE.BufferGeometry?b.renderBufferDirect(u,k.__lights,null,x,A,t):b.renderBuffer(u,k.__lights,null,x,A,t));r=k.__webglObjectsImmediate;p=0;for(s=r.length;p<s;p++)A=r[p],t=A.object,t.visible&&t.castShadow&&(t._modelViewMatrix.multiply(u.matrixWorldInverse,t.matrixWorld),b.renderImmediateObject(u,k.__lights,null,c,t))}n=b.getClearColor();
q=b.getClearAlpha();a.clearColor(n.r,n.g,n.b,q);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,f,g,h,i,j;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);
b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),n=b.createShader(b.FRAGMENT_SHADER),q=b.createShader(b.VERTEX_SHADER);b.shaderSource(n,a.fragmentShader);b.shaderSource(q,a.vertexShader);b.compileShader(n);b.compileShader(q);b.attachShader(m,n);b.attachShader(m,q);b.linkProgram(m);h=m;i={};j={};i.position=b.getAttribLocation(h,"position");i.uv=b.getAttribLocation(h,"uv");j.uvOffset=b.getUniformLocation(h,
"uvOffset");j.uvScale=b.getUniformLocation(h,"uvScale");j.rotation=b.getUniformLocation(h,"rotation");j.scale=b.getUniformLocation(h,"scale");j.alignment=b.getUniformLocation(h,"alignment");j.color=b.getUniformLocation(h,"color");j.map=b.getUniformLocation(h,"map");j.opacity=b.getUniformLocation(h,"opacity");j.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");j.sizeAttenuation=b.getUniformLocation(h,"sizeAttenuation");j.screenPosition=b.getUniformLocation(h,"screenPosition");j.modelViewMatrix=
b.getUniformLocation(h,"modelViewMatrix");j.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");j.fogType=b.getUniformLocation(h,"fogType");j.fogDensity=b.getUniformLocation(h,"fogDensity");j.fogNear=b.getUniformLocation(h,"fogNear");j.fogFar=b.getUniformLocation(h,"fogFar");j.fogColor=b.getUniformLocation(h,"fogColor");j.alphaTest=b.getUniformLocation(h,"alphaTest")};this.render=function(d,e,n,q){var p=d.__webglSprites,s=p.length;if(s){var u=i,t=j,A=q/n,n=0.5*n,x=0.5*q;b.useProgram(h);b.enableVertexAttribArray(u.position);
b.enableVertexAttribArray(u.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(u.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(u.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.uniformMatrix4fv(t.projectionMatrix,!1,e.projectionMatrix.elements);b.activeTexture(b.TEXTURE0);b.uniform1i(t.map,0);var r=u=0,C=d.fog;C?(b.uniform3f(t.fogColor,C.color.r,C.color.g,C.color.b),C instanceof THREE.Fog?(b.uniform1f(t.fogNear,C.near),b.uniform1f(t.fogFar,
C.far),b.uniform1i(t.fogType,1),r=u=1):C instanceof THREE.FogExp2&&(b.uniform1f(t.fogDensity,C.density),b.uniform1i(t.fogType,2),r=u=2)):(b.uniform1i(t.fogType,0),r=u=0);for(var w,v,y=[],C=0;C<s;C++)w=p[C],v=w.material,w.visible&&0!==v.opacity&&(v.useScreenCoordinates?w.z=-w.position.z:(w._modelViewMatrix.multiply(e.matrixWorldInverse,w.matrixWorld),w.z=-w._modelViewMatrix.elements[14]));p.sort(a);for(C=0;C<s;C++)w=p[C],v=w.material,w.visible&&0!==v.opacity&&(v.map&&v.map.image&&v.map.image.width)&&
(b.uniform1f(t.alphaTest,v.alphaTest),v.useScreenCoordinates?(b.uniform1i(t.useScreenCoordinates,1),b.uniform3f(t.screenPosition,(w.position.x-n)/n,(x-w.position.y)/x,Math.max(0,Math.min(1,w.position.z)))):(b.uniform1i(t.useScreenCoordinates,0),b.uniform1i(t.sizeAttenuation,v.sizeAttenuation?1:0),b.uniformMatrix4fv(t.modelViewMatrix,!1,w._modelViewMatrix.elements)),e=d.fog&&v.fog?r:0,u!==e&&(b.uniform1i(t.fogType,e),u=e),e=1/(v.scaleByViewport?q:1),y[0]=e*A*w.scale.x,y[1]=e*w.scale.y,b.uniform2f(t.uvScale,
v.uvScale.x,v.uvScale.y),b.uniform2f(t.uvOffset,v.uvOffset.x,v.uvOffset.y),b.uniform2f(t.alignment,v.alignment.x,v.alignment.y),b.uniform1f(t.opacity,v.opacity),b.uniform3f(t.color,v.color.r,v.color.g,v.color.b),b.uniform1f(t.rotation,w.rotation),b.uniform2fv(t.scale,y),c.setBlending(v.blending,v.blendEquation,v.blendSrc,v.blendDst),c.setDepthTest(v.depthTest),c.setDepthWrite(v.depthWrite),c.setTexture(v.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(i,j){var k,m,n,q,p,s;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&i.updateMatrixWorld();j.matrixWorldInverse.getInverse(j.matrixWorld);h.multiply(j.projectionMatrix,
j.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();s=i.__webglObjects;k=0;for(m=s.length;k<m;k++)if(n=s[k],p=n.object,n.render=!1,p.visible&&(!(p instanceof THREE.Mesh||p instanceof THREE.ParticleSystem)||!p.frustumCulled||g.contains(p)))p._modelViewMatrix.multiply(j.matrixWorldInverse,p.matrixWorld),n.render=!0;var u;k=0;for(m=s.length;k<m;k++)if(n=s[k],n.render&&(p=n.object,n=n.buffer,!(p instanceof THREE.ParticleSystem)||p.customDepthMaterial))(u=p.material instanceof
THREE.MeshFaceMaterial?p.material.materials[0]:p.material)&&b.setMaterialFaces(p.material),q=0<p.geometry.morphTargets.length&&u.morphTargets,u=p instanceof THREE.SkinnedMesh&&u.skinning,q=p.customDepthMaterial?p.customDepthMaterial:u?q?f:e:q?d:c,n instanceof THREE.BufferGeometry?b.renderBufferDirect(j,i.__lights,null,q,n,p):b.renderBuffer(j,i.__lights,null,q,n,p);s=i.__webglObjectsImmediate;k=0;for(m=s.length;k<m;k++)n=s[k],p=n.object,p.visible&&(p._modelViewMatrix.multiply(j.matrixWorldInverse,
p.matrixWorld),b.renderImmediateObject(j,i.__lights,null,c,p));k=b.getClearColor();m=b.getClearAlpha();a.clearColor(k.r,k.g,k.b,m);a.enable(a.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.0050;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);
b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;c=this.object.position;b.x=c.x+100*
Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),
!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.0050;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();A===t.ROTATE?(i.set(a.clientX,a.clientY),j.sub(i,h),f.rotateLeft(2*Math.PI*j.x/g*f.userRotateSpeed),f.rotateUp(2*Math.PI*j.y/g*f.userRotateSpeed),h.copy(i)):A===t.ZOOM&&(m.set(a.clientX,a.clientY),n.sub(m,k),0<n.y?f.zoomIn():f.zoomOut(),k.copy(m))}function e(){f.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",e,!1),A=t.NONE)}THREE.EventTarget.call(this);
this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;var f=this,g=1800,h=new THREE.Vector2,i=new THREE.Vector2,j=new THREE.Vector2,k=new THREE.Vector2,m=new THREE.Vector2,n=new THREE.Vector2,q=0,p=0,s=1,u=new THREE.Vector3,t={NONE:-1,ROTATE:0,ZOOM:1},A=t.NONE,
x={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());p-=a};this.rotateRight=function(a){void 0===a&&(a=c());p+=a};this.rotateUp=function(a){void 0===a&&(a=c());q-=a};this.rotateDown=function(a){void 0===a&&(a=c());q+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));s/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));s*=a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*
b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+p,e=e+q,e=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,e)),e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length()*s,f=Math.max(this.minDistance,Math.min(this.maxDistance,f));b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);q=p=0;s=1;0<u.distanceTo(this.object.position)&&(this.dispatchEvent(x),u.copy(this.object.position))};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){f.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(A=t.ROTATE,h.set(a.clientX,a.clientY)):1===a.button&&(A=t.ZOOM,k.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",e,!1))},!1);this.domElement.addEventListener("mousewheel",function(a){f.userZoom&&(0<a.wheelDelta?f.zoomOut():f.zoomIn())},!1)};THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),u=g.length,t=0;f=u-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<u-1;f++)t=d*h.chunks[f]/h.total,b.keys[f]={time:t,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.0050;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=2*Math.PI,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;
a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),
c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),q=0;q<b.points.length;q++)c=new THREE.Mesh(g,h),c.position.copy(b.points[q]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
!1)};this.handleResize()};THREE.PathControlsIdCounter=0;THREE.PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10;d.add(c);var e=!1,f=!1,g=!1,h=!1,i=!1,j=!1,k=new THREE.Vector3,m=Math.PI/2;document.addEventListener("mousemove",function(a){if(!1!==b.enabled){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y-=0.0020*(a.movementX||a.mozMovementX||a.webkitMovementX||0);c.rotation.x-=0.0020*e;c.rotation.x=Math.max(-m,Math.min(m,c.rotation.x))}},!1);document.addEventListener("keydown",
function(a){switch(a.keyCode){case 38:case 87:e=!0;break;case 37:case 65:g=!0;break;case 40:case 83:f=!0;break;case 39:case 68:h=!0;break;case 32:!0===j&&(k.y+=10),j=!1}},!1);document.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:e=!1;break;case 37:case 65:g=!1;break;case 40:case 83:f=!1;break;case 39:case 68:h=!1}},!1);this.enabled=!1;this.getObject=function(){return d};this.isOnObject=function(a){j=i=a};this.update=function(a){!1!==b.enabled&&(a*=0.1,k.x+=0.08*-k.x*a,k.z+=
0.08*-k.z*a,k.y-=0.25*a,e&&(k.z-=0.12*a),f&&(k.z+=0.12*a),g&&(k.x-=0.12*a),h&&(k.x+=0.12*a),!0===i&&(k.y=Math.max(0,k.y)),d.translateX(k.x),d.translateY(k.y),d.translateZ(k.z),10>d.position.y&&(k.y=0,d.position.y=10,j=!0))}};THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,i=0,j=0,k=0,m=0,n=0,q=0,p=0;this.handleResize=function(){q=window.innerWidth/2;p=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*m);this.rotateVertically(b*n)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<i||this.autoForward&&!(0>i)?1:i));this.object.translateX(b*j);this.object.translateY(b*k);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);
c.cross(d,e).normalize();d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);
this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*
a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};
this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){m=(a.clientX-q)/window.innerWidth;n=(a.clientY-p)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();
switch(a.button){case 0:i=1;break;case 2:i=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:j=-1;break;case 40:case 83:i=-1;break;case 39:case 68:j=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:k=1;break;case 70:k=-1}},!1);this.domElement.addEventListener("keyup",
function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:j=0;break;case 40:case 83:i=0;break;case 39:case 68:j=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:k=0;break;case 70:k=0}},!1);this.handleResize()};THREE.TrackballControls=function(a,b){function c(a){h.enabled&&(window.removeEventListener("keydown",c),m=k,k===i.NONE&&(a.keyCode===h.keys[i.ROTATE]&&!h.noRotate?k=i.ROTATE:a.keyCode===h.keys[i.ZOOM]&&!h.noZoom?k=i.ZOOM:a.keyCode===h.keys[i.PAN]&&!h.noPan&&(k=i.PAN)))}function d(a){h.enabled&&(k===i.ROTATE&&!h.noRotate?p=h.getMouseProjectionOnBall(a.clientX,a.clientY):k===i.ZOOM&&!h.noZoom?u=h.getMouseOnScreen(a.clientX,a.clientY):k===i.PAN&&!h.noPan&&(A=h.getMouseOnScreen(a.clientX,a.clientY)))}
function e(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),k=i.NONE,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",e))}function f(a){if(h.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);s.y+=0.05*(1/b)}}function g(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:q=p=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:s=u=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY);break;case 3:t=A=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY)}}THREE.EventTarget.call(this);var h=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=
0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var j=new THREE.Vector3,k=i.NONE,m=i.NONE,n=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,s=new THREE.Vector2,u=new THREE.Vector2,t=new THREE.Vector2,A=new THREE.Vector2,x={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+this.screen.height)/4};this.handleEvent=
function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-h.screen.offsetLeft)/h.radius),0.5*((b-h.screen.offsetTop)/h.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*h.screen.width-h.screen.offsetLeft)/h.radius,(0.5*h.screen.height+h.screen.offsetTop-b)/h.radius,0),d=c.length();1<d?c.normalize():c.z=Math.sqrt(1-d*d);n.copy(h.object.position).subSelf(h.target);d=h.object.up.clone().setLength(c.y);
d.addSelf(h.object.up.clone().crossSelf(n).setLength(c.x));d.addSelf(n.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(q.dot(p)/q.length()/p.length());if(a){var b=(new THREE.Vector3).cross(q,p).normalize(),c=new THREE.Quaternion,a=a*h.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(n);c.multiplyVector3(h.object.up);c.multiplyVector3(p);h.staticMoving?q.copy(p):(c.setFromAxisAngle(b,a*(h.dynamicDampingFactor-1)),c.multiplyVector3(q))}};this.zoomCamera=function(){var a=
1+(u.y-s.y)*h.zoomSpeed;1!==a&&0<a&&(n.multiplyScalar(a),h.staticMoving?s.copy(u):s.y+=(u.y-s.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=A.clone().subSelf(t);if(a.lengthSq()){a.multiplyScalar(n.length()*h.panSpeed);var b=n.clone().crossSelf(h.object.up).setLength(a.x);b.addSelf(h.object.up.clone().setLength(a.y));h.object.position.addSelf(b);h.target.addSelf(b);h.staticMoving?t=A:t.addSelf(a.sub(A,t).multiplyScalar(h.dynamicDampingFactor))}};this.checkDistances=function(){if(!h.noZoom||
!h.noPan)h.object.position.lengthSq()>h.maxDistance*h.maxDistance&&h.object.position.setLength(h.maxDistance),n.lengthSq()<h.minDistance*h.minDistance&&h.object.position.add(h.target,n.setLength(h.minDistance))};this.update=function(){n.copy(h.object.position).subSelf(h.target);h.noRotate||h.rotateCamera();h.noZoom||h.zoomCamera();h.noPan||h.panCamera();h.object.position.add(h.target,n);h.checkDistances();h.object.lookAt(h.target);0<j.distanceToSquared(h.object.position)&&(h.dispatchEvent(x),j.copy(h.object.position))};
this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),k===i.NONE&&(k=a.button),k===i.ROTATE&&!h.noRotate?q=p=h.getMouseProjectionOnBall(a.clientX,a.clientY):k===i.ZOOM&&!h.noZoom?s=u=h.getMouseOnScreen(a.clientX,a.clientY):k===i.PAN&&!h.noPan&&(t=A=h.getMouseOnScreen(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",
e,!1))},!1);this.domElement.addEventListener("mousewheel",f,!1);this.domElement.addEventListener("DOMMouseScroll",f,!1);this.domElement.addEventListener("touchstart",g,!1);this.domElement.addEventListener("touchend",g,!1);this.domElement.addEventListener("touchmove",function(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:p=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:u=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY);break;case 3:A=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY)}},!1);window.addEventListener("keydown",c,!1);window.addEventListener("keyup",function(){h.enabled&&(k=m,window.addEventListener("keydown",c,!1))},!1);this.handleResize()};THREE.AnaglyphEffect=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Matrix4,f,g,h,i,j=new THREE.PerspectiveCamera;j.matrixAutoUpdate=!1;var k=new THREE.PerspectiveCamera;k.matrixAutoUpdate=!1;var m=new THREE.OrthographicCamera(-1,1,1,-1,0,1),n=new THREE.Scene,q={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};void 0===b&&(b=512);void 0===c&&(c=512);var p=new THREE.WebGLRenderTarget(b,c,q),s=new THREE.WebGLRenderTarget(b,c,q),u=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:p},mapRight:{type:"t",value:s}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 colorL, colorR;\n\tvec2 uv = vUv;\n\tcolorL = texture2D( mapLeft, uv );\n\tcolorR = texture2D( mapRight, uv );\n\tgl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
b=new THREE.Mesh(new THREE.PlaneGeometry(2,2),u);n.add(b);this.setSize=function(b,c){p=new THREE.WebGLRenderTarget(b,c,q);s=new THREE.WebGLRenderTarget(b,c,q);u.uniforms.mapLeft.value=p;u.uniforms.mapRight.value=s;a.setSize(b,c)};this.render=function(b,c){b.updateMatrixWorld();void 0===c.parent&&c.updateMatrixWorld();if(f!==c.aspect||g!==c.near||h!==c.far||i!==c.fov){f=c.aspect;g=c.near;h=c.far;i=c.fov;var q=c.projectionMatrix.clone(),r=0.5*(125/30),u=r*g/125,w=g*Math.tan(i*Math.PI/360),v;d.elements[12]=
r;e.elements[12]=-r;r=-w*f+u;v=w*f+u;q.elements[0]=2*g/(v-r);q.elements[8]=(v+r)/(v-r);j.projectionMatrix.copy(q);r=-w*f-u;v=w*f-u;q.elements[0]=2*g/(v-r);q.elements[8]=(v+r)/(v-r);k.projectionMatrix.copy(q)}j.matrixWorld.copy(c.matrixWorld).multiplySelf(e);j.position.copy(c.position);j.near=c.near;j.far=c.far;a.render(b,j,p,!0);k.matrixWorld.copy(c.matrixWorld).multiplySelf(d);k.position.copy(c.position);k.near=c.near;k.far=c.far;a.render(b,k,s,!0);a.render(n,m)}};THREE.AsciiEffect=function(a,b,c){b=void 0===b?" .:-=+*#%@":b;c||(c={});var d=!c.resolution?0.15:c.resolution,e=!c.scale?1:c.scale,f=!c.color?!1:c.color,g=!c.alpha?!1:c.alpha,h=!c.block?!1:c.block,i=!c.invert?!1:c.invert,j,k,c=document.createElement("div");c.style.cursor="default";var m=document.createElement("table");c.appendChild(m);var n,q,p;this.setSize=function(b,c){j=b;k=c;a.setSize(b,c);n=Math.round(j*C);q=Math.round(k*C);A.width=n;A.height=q;p=a.domElement;p.style.backgroundColor&&(m.rows[0].cells[0].style.backgroundColor=
p.style.backgroundColor,m.rows[0].cells[0].style.color=p.style.color);m.cellSpacing=0;m.cellPadding=0;var d=m.style;d.display="inline";d.width=Math.round(n/C*e)+"px";d.height=Math.round(q/C*e)+"px";d.whiteSpace="pre";d.margin="0px";d.padding="0px";d.letterSpacing=y+"px";d.fontFamily=u;d.fontSize=w+"px";d.lineHeight=v+"px";d.textAlign="left";d.textDecoration="none"};this.render=function(b,c){a.render(b,c);x.clearRect(0,0,n,q);x.drawImage(t,0,0,n,q);for(var d=x.getImageData(0,0,n,q).data,e="",j=0;j<
q;j+=2){for(var k=0;k<n;k++){var p=4*(j*n+k),s=d[p],u=d[p+1],v=d[p+2],p=d[p+3],w;w=(0.3*s+0.59*u+0.11*v)/255;0==p&&(w=1);w=Math.floor((1-w)*(r.length-1));i&&(w=r.length-w-1);w=r[w];if(void 0===w||" "==w)w="&nbsp;";e=f?e+("<span style='color:rgb("+s+","+u+","+v+");"+(h?"background-color:rgb("+s+","+u+","+v+");":"")+(g?"opacity:"+p/255+";":"")+"'>"+w+"</span>"):e+w}e+="<br/>"}m.innerHTML="<tr><td>"+e+"</td></tr>"};this.domElement=c;var c=" .,:;i1tfLCG08@".split(""),s=" CGO08@".split(""),u="courier new, monospace",
t=a.domElement,A=document.createElement("canvas");if(A.getContext){var x=A.getContext("2d");if(x.getImageData){var r=f?s:c;b&&(r=b);var C=0.5;switch("low"){case "low":C=0.25;break;case "medium":C=0.5;break;case "high":C=1}d&&(C=d);var w=2/C*e,v=2/C*e,y=0;switch(e){case 1:y=-1;break;case 2:case 3:y=-2.1;break;case 4:y=-3.1;break;case 5:y=-4.15}}}};THREE.CrosseyedEffect=function(a){this.separation=10;var b,c,d=new THREE.PerspectiveCamera;d.target=new THREE.Vector3;var e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3;a.autoClear=!1;this.setSize=function(d,e){b=d/2;c=e;a.setSize(d,e)};this.render=function(f,g){d.fov=g.fov;d.aspect=0.5*g.aspect;d.near=g.near;d.far=g.far;d.updateProjectionMatrix();d.position.copy(g.position);d.target.copy(g.target);d.translateX(this.separation);d.lookAt(d.target);e.near=g.near;e.far=g.far;e.projectionMatrix=
d.projectionMatrix;e.position.copy(g.position);e.target.copy(g.target);e.translateX(-this.separation);e.lookAt(e.target);a.clear();a.setViewport(0,0,b,c);a.render(f,d);a.setViewport(b,0,b,c);a.render(f,e,!1)}};THREE.ParallaxBarrierEffect=function(a){var b=new THREE.Matrix4,c=new THREE.Matrix4,d,e,f,g,h=new THREE.PerspectiveCamera;h.matrixAutoUpdate=!1;var i=new THREE.PerspectiveCamera;i.matrixAutoUpdate=!1;var j=new THREE.Scene,k=new THREE.PerspectiveCamera(53,1,1,1E4);k.position.z=2;j.add(k);var m={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},n=new THREE.WebGLRenderTarget(512,512,m),q=new THREE.WebGLRenderTarget(512,512,m),p=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:n},mapRight:{type:"t",value:q}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 uv = vUv;\n\tif ( ( mod( gl_FragCoord.x, 2.0 ) ) > 1.00 ) {\n\t\tgl_FragColor = texture2D( mapLeft, uv );\n\t} else {\n\t\tgl_FragColor = texture2D( mapRight, uv );\n\t}\n}"}),s=new THREE.Mesh(new THREE.PlaneGeometry(2,
2),p);j.add(s);this.setSize=function(b,c){n=new THREE.WebGLRenderTarget(b,c,m);q=new THREE.WebGLRenderTarget(b,c,m);p.uniforms.mapLeft.value=n;p.uniforms.mapRight.value=q;a.setSize(b,c)};this.render=function(m,p){m.updateMatrixWorld();void 0===p.parent&&p.updateMatrixWorld();if(d!==p.aspect||e!==p.near||f!==p.far||g!==p.fov){d=p.aspect;e=p.near;f=p.far;g=p.fov;var s=p.projectionMatrix.clone(),x=0.5*(125/30),r=x*e/125,C=e*Math.tan(g*Math.PI/360),w;b.elements[12]=x;c.elements[12]=-x;x=-C*d+r;w=C*d+
r;s.elements[0]=2*e/(w-x);s.elements[8]=(w+x)/(w-x);h.projectionMatrix.copy(s);x=-C*d-r;w=C*d-r;s.elements[0]=2*e/(w-x);s.elements[8]=(w+x)/(w-x);i.projectionMatrix.copy(s)}h.matrixWorld.copy(p.matrixWorld).multiplySelf(c);h.position.copy(p.position);h.near=p.near;h.far=p.far;a.render(m,h,n,!0);i.matrixWorld.copy(p.matrixWorld).multiplySelf(b);i.position.copy(p.position);i.near=p.near;i.far=p.far;a.render(m,i,q,!0);j.updateMatrixWorld();a.render(j,k)}};THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){var d=a.toString()+b.toString()+c.toString();if(void 0!==g[d])return g[d];g[d]=f.length/3;f.push(a,b,c);return g[d]}for(var c=[],d=0;d<a.vertices.length;d++){var e=a.vertices[d];c.push(e.x,e.y,e.z)}for(var e=[],f=[],g={},d=0;d<a.faces.length;d++){var h=a.faces[d],i=h instanceof THREE.Face3,j=void 0!==h.materialIndex,k=0<h.normal.length(),m=void 0!==h.vertexNormals[0],n=0,n=!i?n|1:n&-2,n=k?n|16:
n&-17,n=m?n|32:n&-33;e.push(n);i?e.push(h.a,h.b,h.c):e.push(h.a,h.b,h.c,h.d);j&&e.push(h.materialIndex);k&&(j=h.normal,e.push(b(j.x,j.y,j.z)));m&&(h=h.vertexNormals,i?e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z)):e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z),b(h[3].x,h[3].y,h[3].z)))}return['{\n\t"metadata": {\n\t\t"formatVersion" : 3.1,\n\t\t"generatedBy"\t: "GeometryExporter"\n\t},','\t"vertices": '+JSON.stringify(c)+",",'\t"normals": '+
JSON.stringify(f)+",",'\t"uvs": '+JSON.stringify([[]])+",",'\t"faces": '+JSON.stringify(e),"}"].join("\n")}};THREE.ColladaLoader=function(){function a(a,d,e){V=a;d=d||fb;void 0!==e&&(a=e.split("/"),a.pop(),ib=(1>a.length?".":a.join("/"))+"/");if((a=V.evaluate("//dae:asset",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var i=a.childNodes[e];switch(i.nodeName){case "unit":(i=i.getAttribute("meter"))&&parseFloat(i);break;case "up_axis":Qa=i.textContent.charAt(0)}}if(!sa.convertUpAxis||Qa===sa.upAxis)Ja=null;else switch(Qa){case "X":Ja="Y"===
sa.upAxis?"XtoY":"XtoZ";break;case "Y":Ja="X"===sa.upAxis?"YtoX":"YtoZ";break;case "Z":Ja="X"===sa.upAxis?"ZtoX":"ZtoY"}wa=b("//dae:library_images/dae:image",g,"image");ab=b("//dae:library_materials/dae:material",E,"material");Va=b("//dae:library_effects/dae:effect",M,"effect");Wa=b("//dae:library_geometries/dae:geometry",u,"geometry");Sa=b(".//dae:library_cameras/dae:camera",ha,"camera");za=b("//dae:library_controllers/dae:controller",h,"controller");ra=b("//dae:library_animations/dae:animation",
N,"animation");sb=b(".//dae:library_visual_scenes/dae:visual_scene",k,"visual_scene");xa=[];Aa=[];(a=V.evaluate(".//dae:scene/dae:instance_visual_scene",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),aa=sb[0<a.length?a:"visual_scene0"]):aa=null;ga=new THREE.Object3D;for(a=0;a<aa.nodes.length;a++)ga.add(f(aa.nodes[a]));Xa=[];c(ga);a={scene:ga,morphs:xa,skins:Aa,animations:Xa,dae:{images:wa,materials:ab,cameras:Sa,effects:Va,geometries:Wa,controllers:za,
animations:ra,visualScenes:sb,scene:aa}};d&&d(a);return a}function b(a,b,c){for(var a=V.evaluate(a,V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=aa.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};Xa.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,
b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function e(a,b,c){var e,
f=za[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var c=1E6,g=-c,h=0;for(e in ra)for(var i=ra[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=aa.getChildById(b.skeleton[0],!0)||aa.getChildBySid(b.skeleton[0],!0),m,n,g=new THREE.Vector3,p,
j=0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j]);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vector3);d(b,h,c);j=h;k=f.skin;for(n=0;n<j.length;n++)if(m=j[n],p=-1,"JOINT"==m.type){for(var q=0;q<k.joints.length;q++)if(m.sid==k.joints[q]){p=q;break}if(0<=p){q=k.invBindMatrices[p];m.invBindMatrix=q;m.skinningMatrix=new THREE.Matrix4;m.skinningMatrix.multiply(m.world,q);m.weights=[];for(q=0;q<k.weights.length;q++)for(var s=0;s<k.weights[q].length;s++){var r=
k.weights[q][s];r.joint==p&&m.weights.push(r)}}else throw"ColladaLoader: Could not find joint '"+m.sid+"'.";}for(j=0;j<h.length;j++)if("JOINT"==h[j].type)for(k=0;k<h[j].weights.length;k++)m=h[j].weights[k],n=m.index,m=m.weight,p=a.vertices[n],n=i[n],g.x=p.x,g.y=p.y,g.z=p.z,h[j].skinningMatrix.multiplyVector3(g),n.x+=g.x*m,n.y+=g.y*m,n.z+=g.z*m;a.morphTargets.push({name:"target_"+c,vertices:i})}}}function f(a){var b=new THREE.Object3D,c,d,g,h;for(g=0;g<a.controllers.length;g++){var i=za[a.controllers[g].url];
switch(i.type){case "skin":if(Wa[i.skin.source]){var j=new s;j.url=i.skin.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);c=a.controllers[g]}else za[i.skin.source]&&(d=i=za[i.skin.source],i.morph&&Wa[i.morph.source]&&(j=new s,j.url=i.morph.source,j.instance_material=a.controllers[g].instance_material,a.geometries.push(j)));break;case "morph":Wa[i.morph.source]&&(j=new s,j.url=i.morph.source,j.instance_material=a.controllers[g].instance_material,a.geometries.push(j),
d=a.controllers[g]),console.log("ColladaLoader: Morph-controller partially supported.")}}j={};for(g=0;g<a.geometries.length;g++){h=a.geometries[g];var i=h.instance_material,k=Wa[h.url],l={},m=[],n=0,p;if(k&&k.mesh&&k.mesh.primitives){0==b.name.length&&(b.name=k.id);if(i)for(h=0;h<i.length;h++){p=i[h];var r=ab[p.target],t=Va[r.instance_effect.url].shader.material;if(k.doubleSided){if(!(t in j)){var u=t.clone();u.side=THREE.DoubleSide;j[t]=u}t=j[t]}t.opacity=!t.opacity?1:t.opacity;l[p.symbol]=n;m.push(t);
p=t;p.name=null==r.name||""===r.name?r.id:r.name;n++}i=p||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(1<n){i=new THREE.MeshFaceMaterial(m);for(h=0;h<k.faces.length;h++)m=k.faces[h],m.materialIndex=l[m.daeMaterial]}if(void 0!==c)e(k,c),i.morphTargets=!0,i=new THREE.SkinnedMesh(k,i,!1),i.skeleton=c.skeleton,i.skinController=za[c.url],i.skinInstanceController=c,i.name="skin_"+Aa.length,Aa.push(i);
else if(void 0!==d){h=k;l=d instanceof q?za[d.url]:d;if(!l||!l.morph)console.log("could not find morph controller!");else{l=l.morph;for(m=0;m<l.targets.length;m++)n=Wa[l.targets[m]],n.mesh&&(n.mesh.primitives&&n.mesh.primitives.length)&&(n=n.mesh.primitives[0].geometry,n.vertices.length===h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:n.vertices}));h.morphTargets.push({name:"target_Z",vertices:h.vertices})}i.morphTargets=!0;i=new THREE.Mesh(k,i);i.name="morph_"+xa.length;xa.push(i)}else i=
new THREE.Mesh(k,i);1<a.geometries.length?b.add(i):b=i}}for(g=0;g<a.cameras.length;g++)b=Sa[a.cameras[g].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.id||"";b.matrix=a.matrix;g=a.matrix.decompose();b.position=g[0];b.quaternion=g[1];b.useQuaternion=!0;b.scale=g[2];sa.centerGeometry&&b.geometry&&(g=THREE.GeometryUtils.center(b.geometry),b.quaternion.multiplyVector3(g.multiplySelf(b.scale)),b.position.subSelf(g));for(g=0;g<a.nodes.length;g++)b.add(f(a.nodes[g],a));
return b}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function j(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function k(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function m(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function n(){this.type=this.sid="";this.data=[];this.obj=null}function q(){this.url="";this.skeleton=[];this.instance_material=[]}function p(){this.target=this.symbol=""}function s(){this.url="";this.instance_material=[]}function u(){this.id="";this.mesh=null}function t(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function A(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function x(){A.call(this);
this.vcount=[]}function r(){A.call(this);this.vcount=3}function C(){this.source="";this.stride=this.count=0;this.params=[]}function w(){this.input={}}function v(){this.semantic="";this.offset=0;this.source="";this.set=0}function y(a){this.id=a;this.type=null}function E(){this.name=this.id="";this.instance_effect=null}function D(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function I(a,b){this.type=
a;this.effect=b;this.material=null}function O(a){this.effect=a;this.format=this.init_from=null}function F(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function M(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function J(){this.url=""}function N(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function P(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function R(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function S(a){this.targets=[];this.time=a}function ha(){this.technique=this.name=this.id=""}function Q(){this.url=""}function G(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function L(a){for(var a=da(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function T(a){for(var a=
da(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function da(a){return 0<a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function ma(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function H(a,b){a.doubleSided=!1;var c=V.evaluate(".//dae:extra//dae:double_sided",b,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function W(a,b){if(sa.convertUpAxis&&Qa!==sa.upAxis)switch(Ja){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function fa(a,b){var c=[a[b],a[b+1],a[b+2]];W(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function X(a){if(sa.convertUpAxis){var b=[a[0],a[4],a[8]];W(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];W(b,-1);a[1]=b[0];a[5]=b[1];a[9]=
b[2];b=[a[2],a[6],a[10]];W(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];W(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];W(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];W(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];W(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function ea(a){if(sa.convertUpAxis)switch(a){case "X":switch(Ja){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(Ja){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(Ja){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var V=null,ga=null,aa,fb=null,Da={},wa={},ra={},za={},Wa={},ab={},Va={},Sa={},Xa,sb,ib,xa,Aa,ob=THREE.SmoothShading,sa={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},Qa="Y",Ja=null,ya=Math.PI/180;g.prototype.parse=function(a){this.id=
a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new j).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new i).parse(c),this.type=c.nodeName}}return this};i.prototype.parse=function(a){var b=
{},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new y).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};i.prototype.parseInputs=
function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new v).parse(d))}}return b};j.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=L(f.textContent);this.bindShapeMatrix=X(f);break;case "source":f=
(new y).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};j.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new v).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};j.prototype.parseWeights=function(a,
b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new v).parse(g));break;case "v":c=T(g.textContent);break;case "vcount":d=T(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},m=0;m<e.length;m++){var n=e[m],p=c[g+n.offset];switch(n.semantic){case "JOINT":k.joint=p;break;case "WEIGHT":k.weight=b[n.source].data[p]}}i.push(k);g+=e.length}for(j=0;j<i.length;j++)i[j].index=f;this.weights.push(i)}};
k.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};k.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};k.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new m).parse(c))}}return this};
m.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};m.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=
0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};m.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};m.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};m.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");
this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new m).parse(b));break;case "instance_camera":this.cameras.push((new Q).parse(b));break;case "instance_controller":this.controllers.push((new q).parse(b));
break;case "instance_geometry":this.geometries.push((new s).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=V.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",V,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new m).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new n).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=
[];c=1E6;b=-1E6;for(var d in ra)for(var e=ra[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];d==this.id&&(h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var i=this.channels[c],f=i.fullSid,g=i.sampler,h=g.input,j=this.getTransformBySid(i.sid),k;if(i.arrIndices){k=[];b=0;for(var p=i.arrIndices.length;b<
p;b++){var r=k,t=b,u=i.arrIndices[b];-1<u&&3>u&&(u=ea(["X","Y","Z"][u]),u={X:0,Y:1,Z:2}[u]);r[t]=u}}else k=ea(i.member);if(j){-1===a.indexOf(f)&&a.push(f);b=0;for(p=h.length;b<p;b++){for(var r=h[b],i=g.getData(j.type,b),t=null,u=0,v=d.length;u<v&&null==t;u++){var w=d[u];if(w.time===r)t=w;else if(w.time>r)break}if(!t){t=new S(r);u=-1;v=0;for(w=d.length;v<w&&-1==u;v++)d[v].time>=r&&(u=v);r=u;d.splice(-1==r?d.length:r,0,t)}t.addTarget(f,j,k,i)}}else console.log('Could not find transform "'+i.sid+'" in node '+
this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(t=d[b],!t.hasTarget(e)){h=d;f=t;k=b;g=e;j=void 0;a:{j=k?k-1:0;for(j=0<=j?j:j+h.length;0<=j;j--)if(p=h[j],p.hasTarget(g)){j=p;break a}j=null}p=void 0;a:{for(k+=1;k<h.length;k++)if(p=h[k],p.hasTarget(g))break a;p=null}if(j&&p){h=(f.time-j.time)/(p.time-j.time);j=j.getTarget(g);k=p.getTarget(g).data;p=j.data;i=void 0;if("matrix"===j.type)i=p;else if(p.length){i=[];for(r=0;r<p.length;++r)i[r]=p[r]+(k[r]-p[r])*h}else i=p+(k-p)*h;f.addTarget(g,
j.transform,j.member,i)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};m.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};n.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=L(a.textContent);this.convert();return this};n.prototype.convert=function(){switch(this.type){case "matrix":this.obj=X(this.data);break;case "rotate":this.angle=this.data[3]*ya;case "translate":W(this.data,
-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":W(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};n.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};n.prototype.update=function(a,
b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");
else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=a*ya;break;default:this.obj.x=
a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=a[3]*ya}}};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=V.evaluate(".//dae:instance_material",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new p).parse(d)),
d=c.iterateNext()}}return this};p.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};s.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=V.evaluate(".//dae:instance_material",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new p).parse(b)),
b=a.iterateNext();break}}return this};u.prototype.parse=function(a){this.id=a.getAttribute("id");H(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new t(this)).parse(c)}}return this};t.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==Da[d]&&(Da[d]=(new y(d)).parse(c));break;case "vertices":this.vertices=(new w).parse(c);
break;case "triangles":this.primitives.push((new r).parse(c));break;case "polygons":this.primitives.push((new A).parse(c));break;case "polylist":this.primitives.push((new x).parse(c))}}this.geometry3js=new THREE.Geometry;a=Da[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(fa(a,b).clone());for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();
this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};t.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,i,j,k,m=0,n=3,p=0,q=[];for(c=0;c<f.length;c++)switch(g=f[c],n=g.offset+1,p=p<n?n:p,g.semantic){case "TEXCOORD":q.push(g.set)}for(var s=0;s<e.length;++s)for(var r=e[s],t=0;t<r.length;){var u=[],v=[],w=null,x=[],n=a.vcount?a.vcount.length?
a.vcount[m++]:a.vcount:r.length/p;for(c=0;c<n;c++)for(d=0;d<f.length;d++)switch(g=f[d],j=Da[g.source],h=r[t+c*p+g.offset],k=j.accessor.params.length,i=h*k,g.semantic){case "VERTEX":u.push(h);break;case "NORMAL":v.push(fa(j.data,i));break;case "TEXCOORD":w=w||{};void 0===w[g.set]&&(w[g.set]=[]);w[g.set].push(new THREE.UV(j.data[i],j.data[i+1]));break;case "COLOR":x.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}if(0==v.length)if(g=this.vertices.input.NORMAL){j=Da[g.source];k=j.accessor.params.length;
c=0;for(h=u.length;c<h;c++)v.push(fa(j.data,u[c]*k))}else b.calcNormals=!0;if(!w&&(w={},g=this.vertices.input.TEXCOORD)){q.push(g.set);j=Da[g.source];k=j.accessor.params.length;c=0;for(h=u.length;c<h;c++)i=u[c]*k,void 0===w[g.set]&&(w[g.set]=[]),w[g.set].push(new THREE.UV(j.data[i],1-j.data[i+1]))}if(0==x.length&&(g=this.vertices.input.COLOR)){j=Da[g.source];k=j.accessor.params.length;c=0;for(h=u.length;c<h;c++)i=u[c]*k,x.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}d=null;g=
[];if(3===n)g.push(new THREE.Face3(u[0],u[1],u[2],v,x.length?x:new THREE.Color));else if(4===n)g.push(new THREE.Face4(u[0],u[1],u[2],u[3],v,x.length?x:new THREE.Color));else if(4<n&&sa.subdivideFaces){x=x.length?x:new THREE.Color;for(d=1;d<n-1;)g.push(new THREE.Face3(u[0],u[d],u[d+1],[v[0],v[d++],v[d]],x))}if(g.length){c=0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<q.length;d++)u=w[q[d]],u=4<n?[u[0],u[c+1],u[c+2]]:4===n?[u[0],u[1],u[2],u[3]]:[u[0],u[1],u[2]],
b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(u)}}else console.log("dropped face with vcount "+n+" for geometry with id: "+b.id);t+=p*n}};A.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};A.prototype.parse=function(a){this.material=a.getAttribute("material");this.count=ma(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new v).parse(a.childNodes[b]));
break;case "vcount":this.vcount=T(c.textContent);break;case "p":this.p.push(T(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};x.prototype=Object.create(A.prototype);r.prototype=Object.create(A.prototype);C.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=ma(a,"count",0);this.stride=ma(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");
d.type=c.getAttribute("type");this.params.push(d)}}return this};w.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new v).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};v.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=ma(a,"set",-1);this.offset=ma(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=
0);return this};y.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=da(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case "float_array":this.data=L(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=T(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=da(c.textContent);
this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new C).parse(c.childNodes[d]);break}}}return this};y.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=X(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+
b.type+".")}return a};E.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new J).parse(a.childNodes[b]);break}return this};D.prototype.isColor=function(){return null==this.texture};D.prototype.isTexture=function(){return null!=this.texture};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=
L(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};D.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&
(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};I.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=
(new D).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=V.evaluate(".//dae:float",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};I.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=
this[c];if(d instanceof D)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=wa[this.effect.surface.init_from];e&&(e=THREE.ImageUtils.loadTexture(ib+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e,"emission"===
c&&(a.emissive=16777215))}}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=sa.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];1!==this[c]&&(a.envMap=sa.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],b=!0)}a.shading=ob;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;
switch(this.type){case "constant":a.color=a.emission;this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":a.color=a.diffuse;this.material=new THREE.MeshPhongMaterial(a);break;default:a.color=a.diffuse,this.material=new THREE.MeshLambertMaterial(a)}return this.material};O.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;
break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};F.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+
c.nodeName)}}return this};M.prototype.create=function(){if(null==this.shader)return null};M.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");H(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};M.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];
if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface=(new O(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new F(this)).parse(d);this.sampler.sid=b;break;case "extra":break;default:console.log(d.nodeName)}}};M.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);
break;case "image":d=(new g).parse(d);wa[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};M.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new I(c.nodeName,this)).parse(c)}}};J.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};N.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new N).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);break;case "source":d=(new y).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new R(this)).parse(c));break;case "channel":this.channel.push((new P(this)).parse(c))}}return this};
P.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};R.prototype.parse=function(a){this.id=
a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new v).parse(c))}}return this};R.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;
case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};R.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];for(var b=b*
this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":W(c,-1);break;case "scale":W(c,1)}else 4===this.strideOut&&"matrix"===a&&W(c,-1)}else c=this.output[b];return c};S.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};S.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};S.prototype.getTarget=
function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};S.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};S.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+
f),f=0>f?0:1;if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};ha.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};ha.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=
a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=
0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};Q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=
new XMLHttpRequest;f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)if(f.responseXML)fb=c,a(f.responseXML,void 0,b);else if(f.responseText){fb=c;var g=(new DOMParser).parseFromString(f.responseText,"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+b+")")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader("Content-Length")),d({total:e,loaded:f.responseText.length}))};f.open("GET",b,!0);f.send(null)}else alert("Don't know how to parse XML!")},
parse:a,setPreferredShading:function(a){ob=a},applySkin:e,geometries:Wa,options:sa}};THREE.MTLLoader=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b};
THREE.MTLLoader.prototype={load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(c){200===c.target.status||0===c.target.status?(c=b.parse(c.target.responseText),b.dispatchEvent({type:"load",content:c})):b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){for(var b=a.split("\n"),c={},d=/\s+/,a={},e=0;e<b.length;e++){var f=b[e],f=f.trim();if(!(0===f.length||"#"===f.charAt(0))){var g=f.indexOf(" "),h=0<=g?f.substring(0,g):f,h=h.toLowerCase(),f=0<=g?f.substring(g+1):"",f=f.trim();"newmtl"===h?(c={name:f},a[f]=c):c&&("ka"===h||"kd"===h||"ks"===h?(f=f.split(d,3),c[h]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]):c[h]=f)}}b=new THREE.MTLLoader.MaterialCreator(this.baseUrl,
this.options);b.setMaterials(a);return b}};THREE.MTLLoader.MaterialCreator=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var d=a[c],e={};b[c]=e;for(var f in d){var g=!0,h=d[f],i=f.toLowerCase();switch(i){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(h=[h[0]/255,h[1]/255,h[2]/255]);this.options&&this.options.ignoreZeroRGBs&&0===h[0]&&(0===h[1]&&0===h[1])&&(g=!1);
break;case "d":this.options&&this.options.invertTransparency&&(h=1-h)}g&&(e[i]=h)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){var b=this.materialsInfo[a],
c={name:a,side:this.side},d;for(d in b){var e=b[d];switch(d.toLowerCase()){case "kd":c.diffuse=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ka":c.ambient=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ks":c.specular=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "map_kd":c.map=THREE.MTLLoader.loadTexture(this.baseUrl+e);c.map.wrapS=this.wrap;c.map.wrapT=this.wrap;break;case "ns":c.shininess=e;break;case "d":1>e&&(c.transparent=!0,c.opacity=e)}}c.diffuse&&(c.ambient||(c.ambient=
c.diffuse),c.color=c.diffuse);this.materials[a]=new THREE.MeshPhongMaterial(c);return this.materials[a]}};
THREE.MTLLoader.loadTexture=function(a,b,c,d){if(a.toLowerCase().endsWith(".dds"))var e=THREE.ImageUtils.loadCompressedTexture(a,b,c,d);else{var f=new Image,e=new THREE.Texture(f,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=THREE.MTLLoader.ensurePowerOfTwo_(a.content);e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f)}return e};
THREE.MTLLoader.ensurePowerOfTwo_=function(a){if(!THREE.MTLLoader.isPowerOfTwo_(a.width)||!THREE.MTLLoader.isPowerOfTwo_(a.height)){var b=document.createElement("canvas");b.width=THREE.MTLLoader.nextHighestPowerOfTwo_(a.width);b.height=THREE.MTLLoader.nextHighestPowerOfTwo_(a.height);b.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b.width,b.height);return b}return a};THREE.MTLLoader.isPowerOfTwo_=function(a){return 0===(a&a-1)};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1};THREE.OBJLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:b.parse(a.target.responseText)})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){function b(a,
b,c){return new THREE.Vector3(a,b,c)}function c(a,b){return new THREE.UV(a,b)}function d(a,b,c,d){return new THREE.Face3(a,b,c,d)}function e(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}var f=new THREE.Object3D,g=[],h=[],i=[],j,k;for(j=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(k=j.exec(a));)g.push(b(parseFloat(k[1]),parseFloat(k[2]),parseFloat(k[3])));for(j=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(k=j.exec(a));)h.push(b(parseFloat(k[1]),parseFloat(k[2]),
parseFloat(k[3])));for(j=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(k=j.exec(a));)i.push(c(parseFloat(k[1]),parseFloat(k[2])));for(var a=a.split("\no "),m=0,n=a.length;m<n;m++){var q=a[m],p=new THREE.Geometry;p.vertices=g;for(j=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/g;null!=(k=j.exec(q));)void 0===k[4]?p.faces.push(d(parseInt(k[1])-1,parseInt(k[2])-1,parseInt(k[3])-1)):p.faces.push(e(parseInt(k[1])-1,parseInt(k[2])-1,parseInt(k[3])-1,parseInt(k[4])-1));for(j=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/g;null!=
(k=j.exec(q));)void 0===k[10]?(p.faces.push(d(parseInt(k[2])-1,parseInt(k[5])-1,parseInt(k[8])-1)),p.faceVertexUvs[0].push([i[parseInt(k[3])-1],i[parseInt(k[6])-1],i[parseInt(k[9])-1]])):(p.faces.push(e(parseInt(k[2])-1,parseInt(k[5])-1,parseInt(k[8])-1,parseInt(k[11])-1)),p.faceVertexUvs[0].push([i[parseInt(k[3])-1],i[parseInt(k[6])-1],i[parseInt(k[9])-1],i[parseInt(k[12])-1]]));for(j=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/g;null!=
(k=j.exec(q));)void 0===k[13]?(p.faces.push(d(parseInt(k[2])-1,parseInt(k[6])-1,parseInt(k[10])-1,[h[parseInt(k[4])-1],h[parseInt(k[8])-1],h[parseInt(k[12])-1]])),p.faceVertexUvs[0].push([i[parseInt(k[3])-1],i[parseInt(k[7])-1],i[parseInt(k[11])-1]])):(p.faces.push(e(parseInt(k[2])-1,parseInt(k[6])-1,parseInt(k[10])-1,parseInt(k[14])-1,[h[parseInt(k[4])-1],h[parseInt(k[8])-1],h[parseInt(k[12])-1],h[parseInt(k[16])-1]])),p.faceVertexUvs[0].push([i[parseInt(k[3])-1],i[parseInt(k[7])-1],i[parseInt(k[11])-
1],i[parseInt(k[15])-1]]));for(j=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/g;null!=(k=j.exec(q));)void 0===k[10]?p.faces.push(d(parseInt(k[2])-1,parseInt(k[5])-1,parseInt(k[8])-1,[h[parseInt(k[3])-1],h[parseInt(k[6])-1],h[parseInt(k[9])-1]])):p.faces.push(e(parseInt(k[2])-1,parseInt(k[5])-1,parseInt(k[8])-1,parseInt(k[11])-1,[h[parseInt(k[3])-1],h[parseInt(k[6])-1],h[parseInt(k[9])-1],h[parseInt(k[12])-1]]));p.computeCentroids();p.computeFaceNormals();
p.computeBoundingSphere();f.add(new THREE.Mesh(p,new THREE.MeshLambertMaterial))}return f}};THREE.OBJMTLLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(a,b,c){function d(c){"load"===c.type?c.content instanceof THREE.MTLLoader.MaterialCreator?(g=!0,i=c.content,i.preload()):200===c.target.status||0===c.target.status?(c=c.target.responseText,h=b?e.parse(c):e.parse(c,function(a){g=!1;j.load(j.baseUrl+a)})):e.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText}):"error"===c.type&&(g=!0);g&&h&&(i&&h.traverse(function(a){if(a instanceof
THREE.Mesh&&a.material.name){var b=i.create(a.material.name);b&&(a.material=b)}}),e.dispatchEvent({type:"load",content:h}))}var e=this,f=new XMLHttpRequest,g,h,i,j=new THREE.MTLLoader(a.substr(0,a.lastIndexOf("/")+1),c);j.addEventListener("load",d);j.addEventListener("error",d);b?(j.load(b),g=!1):g=!0;f.addEventListener("load",d,!1);f.addEventListener("progress",function(a){e.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);f.addEventListener("error",function(){e.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);f.open("GET",a,!0);f.send(null)},parse:function(a,b){function c(a,b,c){return new THREE.Vector3(a,b,c)}function d(a,b){return new THREE.UV(a,b)}function e(a,b,c,d){return new THREE.Face3(a,b,c,d)}function f(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function g(a,b){b.geometry.computeCentroids();b.geometry.computeFaceNormals();b.geometry.computeBoundingSphere();a.add(new THREE.Mesh(b.geometry,b.material))}var h=[],i=[],j=[],k=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,
m=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,n=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,q=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,p=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,s=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,u=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,t=new THREE.Object3D,A=new THREE.Geometry;A.vertices=h;
for(var x={material:new THREE.MeshLambertMaterial,geometry:A},r=a.split("\n"),C=0;C<r.length;C++){var w=r[C],w=w.trim(),v;0===w.length||"#"===w.charAt(0)||(null!==(v=k.exec(w))?h.push(c(parseFloat(v[1]),parseFloat(v[2]),parseFloat(v[3]))):null!==(v=m.exec(w))?i.push(c(parseFloat(v[1]),parseFloat(v[2]),parseFloat(v[3]))):null!==(v=n.exec(w))?j.push(d(parseFloat(v[1]),parseFloat(v[2]))):null!==(v=q.exec(w))?void 0===v[4]?A.faces.push(e(parseInt(v[1])-1,parseInt(v[2])-1,parseInt(v[3])-1)):A.faces.push(f(parseInt(v[1])-
1,parseInt(v[2])-1,parseInt(v[3])-1,parseInt(v[4])-1)):null!==(v=p.exec(w))?void 0===v[10]?(A.faces.push(e(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1)),A.faceVertexUvs[0].push([j[parseInt(v[3])-1],j[parseInt(v[6])-1],j[parseInt(v[9])-1]])):(A.faces.push(f(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,parseInt(v[11])-1)),A.faceVertexUvs[0].push([j[parseInt(v[3])-1],j[parseInt(v[6])-1],j[parseInt(v[9])-1],j[parseInt(v[12])-1]])):null!==(v=s.exec(w))?void 0===v[13]?(A.faces.push(e(parseInt(v[2])-
1,parseInt(v[6])-1,parseInt(v[10])-1,[i[parseInt(v[4])-1],i[parseInt(v[8])-1],i[parseInt(v[12])-1]])),A.faceVertexUvs[0].push([j[parseInt(v[3])-1],j[parseInt(v[7])-1],j[parseInt(v[11])-1]])):(A.faces.push(f(parseInt(v[2])-1,parseInt(v[6])-1,parseInt(v[10])-1,parseInt(v[14])-1,[i[parseInt(v[4])-1],i[parseInt(v[8])-1],i[parseInt(v[12])-1],i[parseInt(v[16])-1]])),A.faceVertexUvs[0].push([j[parseInt(v[3])-1],j[parseInt(v[7])-1],j[parseInt(v[11])-1],j[parseInt(v[15])-1]])):null!==(v=u.exec(w))?void 0===
v[10]?A.faces.push(e(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,[i[parseInt(v[3])-1],i[parseInt(v[6])-1],i[parseInt(v[9])-1]])):A.faces.push(f(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,parseInt(v[11])-1,[i[parseInt(v[3])-1],i[parseInt(v[6])-1],i[parseInt(v[9])-1],i[parseInt(v[12])-1]])):w.startsWith("usemtl ")?(w=w.substring(7),w=w.trim(),v=new THREE.MeshLambertMaterial,v.name=w,0<A.faces.length&&(g(t,x),A=new THREE.Geometry,A.vertices=h,x={geometry:A}),x.material=v):w.startsWith("g ")?
(w=w.substring(2),w=w.trim()):w.startsWith("o ")?(w=w.substring(2),w=w.trim()):w.startsWith("s ")||(w.startsWith("mtllib ")?b&&(w=w.substring(7),w=w.trim(),b(w)):console.error("Unhandled line "+w)))}g(t,x);return t}};THREE.STLLoader=function(){THREE.EventTarget.call(this)};
THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){c.dispatchEvent({type:"load",content:c.parse(a.target.responseText)})},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b&&c.addEventListener("load",function(a){b(a.content)});d.open("GET",
a,!0);d.send(null)},parse:function(a){for(var b=new THREE.Geometry,c=/facet([\s\S]*?)endfacet/g,d;null!=(d=c.exec(a));){for(var e=d[0],f=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=f.exec(e));)var g=new THREE.Vector3(d[1],d[3],d[5]);for(f=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=
(d=f.exec(e));)b.vertices.push(new THREE.Vector3(d[1],d[3],d[5]));d=b.vertices.length;b.faces.push(new THREE.Face3(d-3,d-2,d-1,g))}b.computeCentroids();b.computeBoundingSphere();return b}};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype.load=function(a,b,c){this.downloadModelJson(a,c,b)};THREE.UTF8Loader.BufferGeometryCreator=function(){};
THREE.UTF8Loader.BufferGeometryCreator.prototype.create=function(a,b){var c=b.length/3,d=new THREE.BufferGeometry,e=new Float32Array(9*c),f=new Float32Array(9*c),c=new Float32Array(6*c),g,h,i,j,k,m=a.length;for(g=h=0;g<m;g+=8)i=a[g],j=a[g+1],k=a[g+2],e[h++]=i,e[h++]=j,e[h++]=k;h=0;for(g=3;g<m;g+=8)i=a[g],j=a[g+1],c[h++]=i,c[h++]=j;h=0;for(g=5;g<m;g+=8)i=a[g],j=a[g+1],k=a[g+2],f[h++]=i,f[h++]=j,f[h++]=k;g=d.attributes;g.index={itemSize:1,array:b,numItems:b.length};g.position={itemSize:3,array:e,numItems:e.length};
g.normal={itemSize:3,array:f,numItems:f.length};g.uv={itemSize:2,array:c,numItems:c.length};d.offsets=[{start:0,count:b.length,index:0}];d.computeBoundingSphere();return d};THREE.UTF8Loader.GeometryCreator=function(){};
THREE.UTF8Loader.GeometryCreator.prototype={create:function(a,b){var c=new THREE.Geometry;this.init_vertices(c,a,8,0);var d=this.init_uvs(a,8,3),e=this.init_normals(a,8,5);this.init_faces(c,e,d,b);c.computeCentroids();c.computeFaceNormals();return c},init_vertices:function(a,b,c,d){for(var e,f,g,h=b.length;d<h;d+=c)e=b[d],f=b[d+1],g=b[d+2],this.addVertex(a,e,f,g)},init_normals:function(a,b,c){for(var d=[],e,f,g,h=a.length;c<h;c+=b)e=a[c],f=a[c+1],g=a[c+2],d.push(e,f,g);return d},init_uvs:function(a,
b,c){for(var d=[],e,f,g=a.length;c<g;c+=b)e=a[c],f=a[c+1],d.push(e,f);return d},init_faces:function(a,b,c,d){var e,f,g,h,i,j,k,m=d.length;for(e=0;e<m;e+=3)f=d[e],g=d[e+1],h=d[e+2],this.f3n(a,b,f,g,h,0,f,g,h),i=c[2*f],f=c[2*f+1],j=c[2*g],g=c[2*g+1],k=c[2*h],h=c[2*h+1],this.uv3(a.faceVertexUvs[0],i,f,j,g,k,h)},addVertex:function(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))},f3n:function(a,b,c,d,e,f,g,h,i){var j=b[3*h],k=b[3*h+1],m=b[3*h+2],h=b[3*i],n=b[3*i+1],i=b[3*i+2],b=new THREE.Vector3(b[3*
g],b[3*g+1],b[3*g+2]),j=new THREE.Vector3(j,k,m),k=new THREE.Vector3(h,n,i);a.faces.push(new THREE.Face3(c,d,e,[b,j,k],null,f))},uv3:function(a,b,c,d,e,f,g){var h=[];h.push(new THREE.UV(b,c));h.push(new THREE.UV(d,e));h.push(new THREE.UV(f,g));a.push(h)}};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};
THREE.UTF8Loader.prototype.decompressAttribsInner_=function(a,b,c,d,e,f,g,h){for(var i=0;b<c;b++){var j=a.charCodeAt(b),i=i+(j>>1^-(j&1));d[e]=h*(i+g);e+=f}};THREE.UTF8Loader.prototype.decompressIndices_=function(a,b,c,d,e){for(var f=0,g=0;g<c;g++){var h=a.charCodeAt(b++);d[e++]=f-h;0===h&&f++}};
THREE.UTF8Loader.prototype.decompressAABBs_=function(a,b,c,d,e){for(var f=6*c,c=b+f,g=0,f=new Float32Array(f);b<c;b+=6){var h=a.charCodeAt(b+0)+d[0],i=a.charCodeAt(b+1)+d[1],j=a.charCodeAt(b+2)+d[2],k=a.charCodeAt(b+3)+1>>1,m=a.charCodeAt(b+4)+1>>1,n=a.charCodeAt(b+5)+1>>1;f[g++]=e[0]*(h+k);f[g++]=e[1]*(i+m);f[g++]=e[2]*(j+n);f[g++]=e[0]*k;f[g++]=e[1]*m;f[g++]=e[2]*n}return f};
THREE.UTF8Loader.prototype.decompressMesh=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,c=c.decodeScales,i=b.attribRange[1],j=b.attribRange[0],k=new Float32Array(g*i),m=0;m<g;m++){var n=j+i,q=c[m];q&&this.decompressAttribsInner_(a,j,n,k,m,g,h[m],q);j=n}i=3*b.indexRange[1];g=new Uint16Array(i);this.decompressIndices_(a,j,i,g,0);j=void 0;(i=b.bboxes)&&(j=this.decompressAABBs_(a,i,b.names.length,h,c));f(d,e,k,g,j,b)};
THREE.UTF8Loader.prototype.copyAttrib=function(a,b,c,d){for(var e=0;e<a;e++)c[e]=b[a*d+e]};THREE.UTF8Loader.prototype.decodeAttrib2=function(a,b,c,d,e,f,g,h,i,j){for(var k=0;5>k;k++){var m=a.charCodeAt(e+f*k+j);i[k]+=m>>1^-(m&1);h[b*j+k]=i[k];g[b*j+k]=d[k]*(i[k]+c[k])}};
THREE.UTF8Loader.prototype.accumulateNormal=function(a,b,c,d,e){var f=d[8*a],g=d[8*a+1],h=d[8*a+2],i=d[8*b],j=d[8*b+1],k=d[8*b+2],m=d[8*c],n=d[8*c+1],d=d[8*c+2],i=i-f,j=j-g,k=k-h,m=m-f,n=n-g,d=d-h,f=j*d-k*n,g=k*m-i*d,h=i*n-j*m;e[3*a]+=f;e[3*a+1]+=g;e[3*a+2]+=h;e[3*b]+=f;e[3*b+1]+=g;e[3*b+2]+=h;e[3*c]+=f;e[3*c+1]+=g;e[3*c+2]+=h};
THREE.UTF8Loader.prototype.decompressMesh2=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,i=c.decodeScales,c=b.attribRange[0],j=b.attribRange[1],k=b.codeRange[0],m=3*b.codeRange[2],n=new Uint16Array(m),q=new Int32Array(3*j),p=new Uint16Array(g),s=new Uint16Array(g*j),u=new Float32Array(g*j),t=0,A=0,x=0;x<m;x+=3){var r=a.charCodeAt(k++),C=Math.min(x,96);if(r<C){var w=r%3,r=x-(r-w),v,y,E;switch(w){case 0:v=n[r+2];y=n[r+1];E=n[r+0];break;case 1:v=n[r+0];y=n[r+2];E=n[r+1];break;
case 2:v=n[r+1],y=n[r+0],E=n[r+2]}n[A++]=v;n[A++]=y;r=a.charCodeAt(k++);w=t-r;n[A++]=w;if(0===r){for(r=0;5>r;r++)C=a.charCodeAt(c+j*r+t),C=(C>>1^-(C&1))+s[g*v+r]+s[g*y+r]-s[g*E+r],p[r]=C,s[g*t+r]=C,u[g*t+r]=i[r]*(C+h[r]);t++}else this.copyAttrib(g,s,p,w);this.accumulateNormal(v,y,w,s,q)}else{w=t-(r-C);n[A++]=w;r===C?this.decodeAttrib2(a,g,h,i,c,j,u,s,p,t++):this.copyAttrib(g,s,p,w);r=a.charCodeAt(k++);C=t-r;n[A++]=C;0===r?this.decodeAttrib2(a,g,h,i,c,j,u,s,p,t++):this.copyAttrib(g,s,p,C);var r=a.charCodeAt(k++),
D=t-r;n[A++]=D;if(0===r){for(r=0;5>r;r++)p[r]=(s[g*w+r]+s[g*C+r])/2;this.decodeAttrib2(a,g,h,i,c,j,u,s,p,t++)}else this.copyAttrib(g,s,p,D);this.accumulateNormal(w,C,D,s,q)}}for(x=0;x<j;x++)h=q[3*x],v=q[3*x+1],y=q[3*x+2],E=511/Math.sqrt(h*h+v*v+y*y),i=a.charCodeAt(c+5*j+x),k=a.charCodeAt(c+6*j+x),m=a.charCodeAt(c+7*j+x),u[g*x+5]=E*h+(i>>1^-(i&1)),u[g*x+6]=E*v+(k>>1^-(k&1)),u[g*x+7]=E*y+(m>>1^-(m&1));f(d,e,u,n,void 0,b)};
THREE.UTF8Loader.prototype.downloadMesh=function(a,b,c,d,e){function f(a){for(;h<c.length;){var f=c[h],k=f.indexRange;if(k){k=k[0]+3*k[1];if(a.responseText.length<k)break;g.decompressMesh(a.responseText,f,d,b,h,e)}else{k=f.codeRange;k=k[0]+k[1];if(a.responseText.length<k)break;g.decompressMesh2(a.responseText,f,d,b,h,e)}++h}}var g=this,h=0;getHttpRequest(a,function(a,b){(200===a.status||0===a.status)&&f(a,b)},f)};
THREE.UTF8Loader.prototype.downloadMeshes=function(a,b,c,d){for(var e in b)this.downloadMesh(a+e,e,b[e],c,d)};
THREE.UTF8Loader.prototype.createMeshCallback=function(a,b,c){var d=0,e=0,f={},g={},h={},i=b.urls,j;for(j in i)f[j]=i[j].length,g[j]=0,e++,h[j]=new THREE.Object3D;var k=new THREE.Object3D,m=new THREE.MTLLoader.MaterialCreator(a,b.options);m.setMaterials(b.materials);m.preload();var n=new THREE.UTF8Loader.GeometryCreator,q=new THREE.UTF8Loader.BufferGeometryCreator;return function(a,i,j,t,A,x){i=(void 0!==b.options.useBuffers?b.options.useBuffers:1)?q.create(j,t):n.create(j,t);x=m.create(x.material);
x=new THREE.Mesh(i,x);h[a].add(x);g[a]++;g[a]===f[a]&&(d++,k.add(h[a]),d===e&&c(k))}};THREE.UTF8Loader.prototype.downloadModel=function(a,b,c,d){b=this.createMeshCallback(b,c,d);this.downloadMeshes(a,c.urls,c.decodeParams,b)};
THREE.UTF8Loader.prototype.downloadModelJson=function(a,b,c){getJsonRequest(a,function(d){d.decodeParams||(d.decodeParams=b&&b.decodeParams?b.decodeParams:DEFAULT_DECODE_PARAMS);d.options=b;var e=a.substr(0,a.lastIndexOf("/")+1),f=e;b&&b.geometryBase&&(e=b.geometryBase,"/"!==e.charAt(e.length-1)&&(e+="/"));b&&b.materialBase&&(f=b.materialBase,"/"!==f.charAt(f.length-1)&&(f+="/"));this.downloadModel(e,f,d,c)}.bind(this))};
function getHttpRequest(a,b,c){var d=new XMLHttpRequest;addListeners(d,{load:function(a){b(d,a)},progress:function(a){c(d,a)}});d.open("GET",a,!0);d.send(null)}function getJsonRequest(a,b){getHttpRequest(a,function(a){b(JSON.parse(a.responseText))},function(){})}function addListeners(a,b){for(var c in b)a.addEventListener(c,b[c])};THREE.VTKLoader=function(){THREE.EventTarget.call(this)};
THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){c.dispatchEvent({type:"load",content:c.parse(a.target.responseText)})},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b&&c.addEventListener("load",function(a){b(a.content)});d.open("GET",
a,!0);d.send(null)},parse:function(a){var b=new THREE.Geometry,c,d;for(c=/([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)/g;null!=(d=c.exec(a));){var e=parseFloat(d[1]),f=parseFloat(d[2]);d=parseFloat(d[3]);b.vertices.push(new THREE.Vector3(e,f,d))}for(c=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));)e=parseInt(d[1]),f=parseInt(d[2]),d=parseInt(d[3]),b.faces.push(new THREE.Face3(e,f,d));for(c=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=
(d=c.exec(a));){var e=parseInt(d[1]),f=parseInt(d[2]),g=parseInt(d[3]);d=parseInt(d[4]);b.faces.push(new THREE.Face4(e,f,g,d))}b.computeCentroids();b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();return b}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){if(!this._buffer||this._windowSize!==a)this._buffer=[];this._windowSize=a;this._streamPos=this._pos=0};LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(0!==a){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};
LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){a||(this._pos=this._streamPos=0)};LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(0>c&&(c+=this._windowSize);b--;)c>=this._windowSize&&(c=0),this._buffer[this._pos++]=this._buffer[c++],this._pos>=this._windowSize&&this.flush()};
LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;0>a&&(a+=this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};
LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;)this._range>>>=1,c=this._code-this._range>>>31,this._code-=this._range&c-1,b=b<<1|1-c,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648))return this._range=d,a[b]+=2048-c>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=d;this._code-=d;a[b]-=c>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};
LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d)e=a.decodeBit(this._models,b),b=b<<1|e,c|=e<<d;return c};
LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,f=0,g=0,h;g<d;++g)h=c.decodeBit(a,b+e),e=e<<1|h,f|=h<<g;return f};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;)this._lowCoder[a].init(),this._midCoder[a].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(a,b){return 0===a.decodeBit(this._choice,0)?this._lowCoder[b].decode(a):0===a.decodeBit(this._choice,1)?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(256>b);return b&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do if(d=b>>7&1,b<<=1,e=a.decodeBit(this._decoders,(1+d<<8)+c),c=c<<1|e,d!==e){for(;256>c;)c=c<<1|a.decodeBit(this._decoders,c);break}while(256>c);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||!(this._numPrevBits===b&&this._numPosBits===a)){this._numPosBits=a;this._posMask=(1<<a)-1;this._numPrevBits=b;this._coders=[];for(c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(0>a)return!1;this._dictionarySize!==a&&(this._dictionarySize=a,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(8<a||4<b||4<c)return!1;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return!0};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();0>c||i<c;)if(a=i&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a))j=this._literalDecoder.getDecoder(i++,j),j=7<=d?j.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):j.decodeNormal(this._rangeDecoder),this._outWindow.putByte(j),d=4>d?0:d-(10>d?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
d))j=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)&&(d=7>d?9:11,j=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)?b=f:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)?b=g:(b=h,h=g),g=f),f=e,e=b),0===j&&(j=2+this._repLenDecoder.decode(this._rangeDecoder,a),d=7>d?8:11);else if(h=g,g=f,f=e,j=2+this._lenDecoder.decode(this._rangeDecoder,a),d=7>d?7:10,a=this._posSlotDecoder[5>=j?j-2:3].decode(this._rangeDecoder),
4<=a)if(b=(a>>1)-1,e=(2|a&1)<<b,14>a)e+=LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{if(e+=this._rangeDecoder.decodeDirectBits(b-4)<<4,e+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>e){if(-1===e)break;return!1}}else e=a;if(e>=i||e>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(e,j);i+=j;j=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(5>a.size)return!1;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return!1;b=a.readByte();b|=a.readByte()<<8;b|=a.readByte()<<16;b+=16777216*a.readByte();return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return!0};var CTM=CTM||{};CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(a){this.load(a)};CTM.File.prototype.load=function(a){this.header=new CTM.FileHeader(a);this.body=new CTM.FileBody(this.header);this.getReader().read(a,this.body)};
CTM.File.prototype.getReader=function(){var a;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:a=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:a=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:a=new CTM.ReaderMG2}return a};
CTM.FileHeader=function(a){a.readInt32();this.fileFormat=a.readInt32();this.compressionMethod=a.readInt32();this.vertexCount=a.readInt32();this.triangleCount=a.readInt32();this.uvMapCount=a.readInt32();this.attrMapCount=a.readInt32();this.flags=a.readInt32();this.comment=a.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(a){var b=3*a.triangleCount,c=3*a.vertexCount,d=a.hasNormals()?3*a.vertexCount:0,e=2*a.vertexCount,f=4*a.vertexCount,g=0,h=new ArrayBuffer(4*(b+c+d+e*a.uvMapCount+f*a.attrMapCount));this.indices=new Uint32Array(h,0,b);this.vertices=new Float32Array(h,4*b,c);a.hasNormals()&&(this.normals=new Float32Array(h,4*(b+c),d));if(a.uvMapCount){this.uvMaps=[];for(g=0;g<a.uvMapCount;++g)this.uvMaps[g]={uv:new Float32Array(h,4*(b+c+d+g*e),e)}}if(a.attrMapCount){this.attrMaps=[];for(g=0;g<
a.attrMapCount;++g)this.attrMaps[g]={attr:new Float32Array(h,4*(b+c+d+e*a.uvMapCount+g*f),f)}}};
CTM.FileMG2Header=function(a){a.readInt32();this.vertexPrecision=a.readFloat32();this.normalPrecision=a.readFloat32();this.lowerBoundx=a.readFloat32();this.lowerBoundy=a.readFloat32();this.lowerBoundz=a.readFloat32();this.higherBoundx=a.readFloat32();this.higherBoundy=a.readFloat32();this.higherBoundz=a.readFloat32();this.divx=a.readInt32();this.divy=a.readInt32();this.divz=a.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(a,b){a.readInt32();a.readArrayInt32(b)};CTM.ReaderRAW.prototype.readVertices=function(a,b){a.readInt32();a.readArrayFloat32(b)};
CTM.ReaderRAW.prototype.readNormals=function(a,b){a.readInt32();a.readArrayFloat32(b)};CTM.ReaderRAW.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),b[c].filename=a.readString(),a.readArrayFloat32(b[c].uv)};CTM.ReaderRAW.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),a.readArrayFloat32(b[c].attr)};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG1.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,1);LZMA.decompress(a,a,c,c.data.length)};CTM.ReaderMG1.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(a,b){this.MG2Header=new CTM.FileMG2Header(a);this.readVertices(a,b.vertices);this.readIndices(a,b.indices);b.normals&&this.readNormals(a,b);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);c=this.readGridIndices(a,b);CTM.restoreVertices(b,this.MG2Header,c,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(a,b){a.readInt32();a.readInt32();var c=new Uint32Array(b.length/3),d=new CTM.InterleavedStream(c,1);LZMA.decompress(a,a,d,d.data.length);CTM.restoreGridIndices(c,c.length);return c};CTM.ReaderMG2.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG2.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b.normals,3);LZMA.decompress(a,a,c,c.data.length);c=CTM.calcSmoothNormals(b.indices,b.vertices);CTM.restoreNormals(b.normals,c,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].uv,2,d)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].attr,4,d)}};CTM.restoreIndices=function(a,b){var c=3;for(0<b&&(a[2]+=a[0]);c<b;c+=3)a[c]+=a[c-3],a[c+1]=a[c]===a[c-3]?a[c+1]+a[c-2]:a[c+1]+a[c],a[c+2]+=a[c]};CTM.restoreGridIndices=function(a,b){for(var c=1;c<b;++c)a[c]+=a[c-1]};
CTM.restoreVertices=function(a,b,c,d){for(var e,f,g,h,i,j=new Uint32Array(a.buffer,a.byteOffset,a.length),k=b.divx,m=k*b.divy,n=2147483647,q=0,p=0,s=0,u=c.length;p<u;s+=3)g=e=c[p++],i=~~(g/m),g-=~~(i*m),h=~~(g/k),g-=~~(h*k),f=j[s],e===n&&(f+=q),a[s]=b.lowerBoundx+g*b.sizex+d*f,a[s+1]=b.lowerBoundy+h*b.sizey+d*j[s+1],a[s+2]=b.lowerBoundz+i*b.sizez+d*j[s+2],n=e,q=f};
CTM.restoreNormals=function(a,b,c){for(var d,e,f,g,h,i,j=new Uint32Array(a.buffer,a.byteOffset,a.length),k=0,m=a.length;k<m;k+=3)d=j[k]*c,e=j[k+1],0===e?(a[k]=b[k]*d,a[k+1]=b[k+1]*d,a[k+2]=b[k+2]*d):(f=4>=e?1.5707963267948966*(j[k+2]-2):1.5707963267948966*(4*j[k+2]/e-2),e*=1.5707963267948966*c,g=d*Math.sin(e),h=g*Math.cos(f),f=g*Math.sin(f),d*=Math.cos(e),g=b[k+1],e=b[k]-b[k+2],i=Math.sqrt(2*g*g+e*e),1E-20<i&&(e/=i,g/=i),a[k]=b[k]*d+(b[k+1]*g-b[k+2]*e)*f-g*h,a[k+1]=b[k+1]*d-(b[k+2]+b[k])*g*f+e*h,
a[k+2]=b[k+2]*d+(b[k]*e+b[k+1]*g)*f+g*h)};CTM.restoreMap=function(a,b,c){for(var d,e,f=new Uint32Array(a.buffer,a.byteOffset,a.length),g=0,h,i=a.length;g<b;++g){d=0;for(h=g;h<i;h+=b)e=f[h],d+=e&1?-(e+1>>1):e>>1,a[h]=d*c}};
CTM.calcSmoothNormals=function(a,b){var c=new Float32Array(b.length),d,e,f,g,h,i,j,k,m,n,q,p;q=0;for(p=a.length;q<p;)d=3*a[q++],e=3*a[q++],f=3*a[q++],i=b[e]-b[d],k=b[f]-b[d],j=b[e+1]-b[d+1],m=b[f+1]-b[d+1],h=b[e+2]-b[d+2],n=b[f+2]-b[d+2],g=j*n-h*m,h=h*k-i*n,i=i*m-j*k,j=Math.sqrt(g*g+h*h+i*i),1E-10<j&&(g/=j,h/=j,i/=j),c[d]+=g,c[d+1]+=h,c[d+2]+=i,c[e]+=g,c[e+1]+=h,c[e+2]+=i,c[f]+=g,c[f+1]+=h,c[f+2]+=i;q=0;for(p=c.length;q<p;q+=3)j=Math.sqrt(c[q]*c[q]+c[q+1]*c[q+1]+c[q+2]*c[q+2]),1E-10<j&&(c[q]/=j,c[q+
1]/=j,c[q+2]/=j);return c};CTM.isLittleEndian=function(){var a=new ArrayBuffer(2),b=new Uint8Array(a),a=new Uint16Array(a);b[0]=1;return 1===a[0]}();CTM.InterleavedStream=function(a,b){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=4*b;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset+=this.count;this.offset>=this.len&&(this.offset-=this.len-4,this.offset>=this.count&&(this.offset-=this.count+(CTM.isLittleEndian?1:-1)))};CTM.Stream=function(a){this.data=a;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);CTM.Stream.prototype.readByte=function(){return this.data.charCodeAt(this.offset++)&255};
CTM.Stream.prototype.readInt32=function(){var a=this.readByte(),a=a|this.readByte()<<8,a=a|this.readByte()<<16;return a|this.readByte()<<24};CTM.Stream.prototype.readFloat32=function(){var a=this.readByte(),a=a+(this.readByte()<<8),b=this.readByte(),c=this.readByte(),a=a+((b&127)<<16),b=(c&127)<<1|(b&128)>>>7,c=c&128?-1:1;return 255===b?0!==a?NaN:Infinity*c:0<b?c*(1+a*this.TWO_POW_MINUS23)*Math.pow(2,b-127):0!==a?c*a*this.TWO_POW_MINUS126:0*c};
CTM.Stream.prototype.readString=function(){var a=this.readInt32();this.offset+=a;return this.data.substr(this.offset-a,a)};CTM.Stream.prototype.readArrayInt32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readInt32();return a};CTM.Stream.prototype.readArrayFloat32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readFloat32();return a};THREE.CTMLoader=function(a){THREE.Loader.call(this,a)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(a,b,c){var d=this,e=new XMLHttpRequest,f=c.basePath?c.basePath:this.extractUrlBase(a);e.onreadystatechange=function(){if(4===e.readyState&&(200===e.status||0===e.status)){for(var a=JSON.parse(e.responseText),h=[],i=[],j=0,k=0;k<a.materials.length;k++)h[k]=THREE.Loader.prototype.createMaterial(a.materials[k],f);d.load(f+a.data,function(c){j+=1;i.push(c);j===a.offsets.length&&b(i,h)},{useWorker:c.useWorker,useBuffers:c.useBuffers,offsets:a.offsets})}};e.open("GET",
a,!0);e.overrideMimeType&&e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
THREE.CTMLoader.prototype.load=function(a,b,c){var d=this,e=void 0!==c.offsets?c.offsets:[0],f=void 0!==c.useBuffers?c.useBuffers:!0,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState)if(200===g.status||0===g.status){var h=g.responseText;if(c.useWorker){var i=new Worker("js/loaders/ctm/CTMWorker.js");i.onmessage=function(a){for(var a=a.data,c=0;c<a.length;c++){var e=a[c];f?d.createModelBuffers(e,b):d.createModelClassic(e,b)}};i.postMessage({data:h,offsets:e})}else for(i=0;i<
e.length;i++){var j=new CTM.Stream(h);j.offset=e[i];j=new CTM.File(j);f?d.createModelBuffers(j,b):d.createModelClassic(j,b)}}else console.error("Couldn't load ["+a+"] ["+g.status+"]");else 3!==g.readyState&&2===g.readyState&&g.getResponseHeader("Content-Length")};g.overrideMimeType("text/plain; charset=x-user-defined");g.open("GET",a,!0);g.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(a,b){var c=function(){this.materials=[];THREE.BufferGeometry.call(this);var b=a.body.indices,c=a.body.vertices,f=a.body.normals,g,h;void 0!==a.body.uvMaps&&0<a.body.uvMaps.length&&(g=a.body.uvMaps[0].uv);void 0!==a.body.attrMaps&&(0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name)&&(h=a.body.attrMaps[0].attr);var i=new Uint32Array(b.length),j=new Float32Array(c.length),k,m,n;f&&(k=new Float32Array(f.length));g&&(m=new Float32Array(g.length));
h&&(n=new Float32Array(h.length));for(var q={},p=0,s=function(a){if(void 0===q[a]){q[a]=p;var b=3*a,d=3*a+1,i=3*a+2,s=3*p,r=3*p+1,t=3*p+2;j[s]=c[b];j[r]=c[d];j[t]=c[i];f&&(k[s]=f[b],k[r]=f[d],k[t]=f[i]);g&&(m[2*p]=g[2*a],m[2*p+1]=g[2*a+1]);h&&(n[4*p]=h[4*a],n[4*p+1]=h[4*a+1],n[4*p+2]=h[4*a+2],n[4*p+3]=h[4*a+3]);p+=1}},u,t,A,x=0;x<b.length;x+=3)u=b[x],t=b[x+1],A=b[x+2],s(u),s(t),s(A),i[x]=q[u],i[x+1]=q[t],i[x+2]=q[A];b=i;c=j;f&&(f=k);g&&(g=m);h&&(h=n);this.offsets=[];i=b;s=0;t=c.length;A=0;u=t;for(x=
0;x<i.length;){for(var r=0;3>r;++r){var C=i[x++];C<t&&(t=C);C>A&&(A=C)}if(65535<A-t){x-=3;for(t=s;t<x;++t)i[t]-=u;this.offsets.push({start:s,count:x-s,index:u});s=x;t=c.length;A=0}u=t}for(t=s;t<x;++t)i[t]-=u;this.offsets.push({start:s,count:x-s,index:u});b=new Uint16Array(b);x=this.attributes;x.index={itemSize:1,array:b,numItems:b.length};x.position={itemSize:3,array:c,numItems:c.length};void 0!==f&&(x.normal={itemSize:3,array:f,numItems:f.length});void 0!==g&&(x.uv={itemSize:2,array:g,numItems:g.length});
void 0!==h&&(x.color={itemSize:4,array:h,numItems:h.length})};c.prototype=Object.create(THREE.BufferGeometry.prototype);c=new c;void 0===c.attributes.normal&&c.computeVertexNormals();b(c)};
THREE.CTMLoader.prototype.createModelClassic=function(a,b){var c=function(){this.materials=[];THREE.Geometry.call(this);var b=[],c=[],f=[],g=a.body.vertices,h,i,j,k,m=g.length;for(k=0;k<m;k+=3)h=g[k],i=g[k+1],j=g[k+2],this.vertices.push(new THREE.Vector3(h,i,j));if(void 0!==a.body.normals){g=a.body.normals;m=g.length;for(k=0;k<m;k+=3)h=g[k],i=g[k+1],j=g[k+2],b.push(h,i,j)}if(void 0!==a.body.uvMaps&&0<a.body.uvMaps.length){g=a.body.uvMaps[0].uv;k=g.length;for(j=0;j<k;j+=2)h=g[j],i=g[j+1],c.push(h,
i)}if(void 0!==a.body.attrMaps&&0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name){g=a.body.attrMaps[0].attr;m=g.length;for(k=0;k<m;k+=4){h=g[k];i=g[k+1];j=g[k+2];var n=new THREE.Color;n.setRGB(h,i,j);f.push(n)}}g=0<b.length?!0:!1;h=0<c.length?!0:!1;i=0<f.length?!0:!1;j=a.body.indices;var q,p,s,u,t,A,x,m=j.length;for(k=0;k<m;k+=3){q=j[k];p=j[k+1];n=j[k+2];if(g){s=q;A=p;x=n;var r=b[3*p],C=b[3*p+1],w=b[3*p+2];t=b[3*n];var v=b[3*n+1],y=b[3*n+2];u=new THREE.Vector3(b[3*q],b[3*q+1],b[3*q+2]);
r=new THREE.Vector3(r,C,w);t=new THREE.Vector3(t,v,y);s=new THREE.Face3(s,A,x,[u,r,t],null,0)}else s=new THREE.Face3(q,p,n,null,null,0);this.faces.push(s);i&&(s.vertexColors[0]=f[q],s.vertexColors[1]=f[p],s.vertexColors[2]=f[n]);h&&(s=c[2*q],q=c[2*q+1],u=c[2*p],t=c[2*p+1],A=c[2*n],x=c[2*n+1],n=this.faceVertexUvs[0],p=u,u=t,t=[],t.push(new THREE.UV(s,q)),t.push(new THREE.UV(p,u)),t.push(new THREE.UV(A,x)),n.push(t))}this.computeCentroids();this.computeFaceNormals()};c.prototype=Object.create(THREE.Geometry.prototype);
b(new c)};THREE.EffectComposer=function(a,b){this.renderer=a;this.renderTarget1=b;if(void 0===this.renderTarget1){var c=window.innerWidth||1,d=window.innerHeight||1;this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};this.renderTarget1=new THREE.WebGLRenderTarget(c,d,this.renderTargetParameters)}this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===
THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var f=this.renderer.context;f.stencilFunc(f.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,
this.writeBuffer,this.readBuffer,a);f.stencilFunc(f.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){this.renderTarget1=a;void 0===this.renderTarget1&&(this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2}};
THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);THREE.BloomPass=function(a,b,c,d){var a=void 0!==a?a:1,b=void 0!==b?b:25,c=void 0!==c?c:4,d=void 0!==d?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=
new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);THREE.DotScreenPass=function(a,b,c){void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);void 0!==a&&this.uniforms.center.value.copy(a);void 0!==b&&(this.uniforms.angle.value=b);void 0!==c&&(this.uniforms.scale.value=c);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.enabled=!0;this.renderToScreen=
!1;this.needsSwap=!0};THREE.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c;this.uniforms.tSize.value.set(c.width,c.height);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.FilmPass=function(a,b,c,d){void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var e=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader});void 0!==d&&(this.uniforms.grayscale.value=d);void 0!==a&&(this.uniforms.nIntensity.value=a);void 0!==b&&(this.uniforms.sIntensity.value=b);void 0!==c&&(this.uniforms.sCount.value=c);
this.enabled=!0;this.renderToScreen=!1;this.needsSwap=!0};THREE.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c;this.uniforms.time.value+=d;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);var e,f;this.inverse?(e=0,f=1):(e=1,f=0);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(f);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=!0};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=void 0!==e?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};THREE.SavePass=function(a){void 0===THREE.CopyShader&&console.error("THREE.SavePass relies on THREE.CopyShader");var b=THREE.CopyShader;this.textureID="tDiffuse";this.uniforms=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.renderTarget=a;void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},
this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.enabled=!0;this.clear=this.needsSwap=!1};THREE.SavePass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}};THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};THREE.TexturePass=function(a,b){void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.uniforms.opacity.value=void 0!==b?b:1;this.uniforms.tDiffuse.value=a;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader});this.enabled=!0;this.needsSwap=!1};
THREE.TexturePass.prototype={render:function(a,b,c){THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c)}};THREE.CSS3DObject=function(a){THREE.Object3D.call(this);this.element=a;this.element.style.position="absolute";this.element.style.WebkitTransformStyle="preserve-3d";this.element.style.MozTransformStyle="preserve-3d";this.element.style.oTransformStyle="preserve-3d";this.element.style.transformStyle="preserve-3d"};THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);THREE.CSS3DSprite=function(a){THREE.CSS3DObject.call(this,a)};THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype);
THREE.CSS3DRenderer=function(){console.log("THREE.CSS3DRenderer",THREE.REVISION);var a,b,c,d,e=new THREE.Projector,f=new THREE.Matrix4;this.domElement=document.createElement("div");this.domElement.style.overflow="hidden";this.domElement.style.WebkitTransformStyle="preserve-3d";this.domElement.style.WebkitPerspectiveOrigin="50% 50%";this.domElement.style.MozTransformStyle="preserve-3d";this.domElement.style.MozPerspectiveOrigin="50% 50%";this.domElement.style.oTransformStyle="preserve-3d";this.domElement.style.oPerspectiveOrigin=
"50% 50%";this.domElement.style.transformStyle="preserve-3d";this.domElement.style.perspectiveOrigin="50% 50%";this.cameraElement=document.createElement("div");this.cameraElement.style.WebkitTransformStyle="preserve-3d";this.cameraElement.style.MozTransformStyle="preserve-3d";this.cameraElement.style.oTransformStyle="preserve-3d";this.cameraElement.style.transformStyle="preserve-3d";this.domElement.appendChild(this.cameraElement);this.setSize=function(e,f){a=e;b=f;c=a/2;d=b/2;this.domElement.style.width=
e+"px";this.domElement.style.height=f+"px";this.cameraElement.style.width=e+"px";this.cameraElement.style.height=f+"px"};var g=function(a){return 1E-6>Math.abs(a)?0:a},h=function(a){a=a.elements;return"translate3d(-50%,-50%,0) matrix3d("+g(a[0])+","+g(a[1])+","+g(a[2])+","+g(a[3])+","+g(a[4])+","+g(a[5])+","+g(a[6])+","+g(a[7])+","+g(a[8])+","+g(a[9])+","+g(a[10])+","+g(a[11])+","+g(a[12])+","+g(a[13])+","+g(a[14])+","+g(a[15])+") scale3d(1,-1,1)"};this.render=function(a,j){var k=0.5/Math.tan(j.fov*
Math.PI/360)*b;this.domElement.style.WebkitPerspective=k+"px";this.domElement.style.MozPerspective=k+"px";this.domElement.style.oPerspective=k+"px";this.domElement.style.perspective=k+"px";var k="translate3d(0,0,"+k+"px)",m;m=j.matrixWorldInverse.elements;m="matrix3d("+g(m[0])+","+g(-m[1])+","+g(m[2])+","+g(m[3])+","+g(m[4])+","+g(-m[5])+","+g(m[6])+","+g(m[7])+","+g(m[8])+","+g(-m[9])+","+g(m[10])+","+g(m[11])+","+g(m[12])+","+g(-m[13])+","+g(m[14])+","+g(m[15])+")";var n=k+m+" translate3d("+c+"px,"+
d+"px, 0)";this.cameraElement.style.WebkitTransform=n;this.cameraElement.style.MozTransform=n;this.cameraElement.style.oTransform=n;this.cameraElement.style.transform=n;k=e.projectScene(a,j,!1).objects;m=0;for(var q=k.length;m<q;m++)if(n=k[m].object,n instanceof THREE.CSS3DObject){var p=n.element;n instanceof THREE.CSS3DSprite?(f.copy(j.matrixWorldInverse),f.transpose(),f.extractPosition(n.matrixWorld),f.elements[3]=0,f.elements[7]=0,f.elements[11]=0,f.elements[15]=1,n=h(f)):n=h(n.matrixWorld);p.style.WebkitTransform=
n;p.style.MozTransform=n;p.style.oTransform=n;p.style.transform=n;p.parentNode!==this.cameraElement&&this.cameraElement.appendChild(p)}}};THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;a:{for(var i=["transform","MozTransform","WebkitTransform","msTransform","OTransform"],j=document.documentElement,k=0;k<i.length;k++)if("string"===typeof j.style[i[k]]){g=i[k];break a}g=null}this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;f=d/2};this.render=function(c,d){var i,j,k,u,t,A;a=h.projectScene(c,d);b=a.elements;i=0;for(j=b.length;i<j;i++)k=
b[i],k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial&&(u=k.material.domElement,t=k.x*e+e-(u.offsetWidth>>1),A=k.y*f+f-(u.offsetHeight>>1),u.style.left=t+"px",u.style.top=A+"px",u.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near)),g&&(u.style[g]="scale("+k.scale.x*e+","+k.scale.y*f+")"))}};THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,i,j;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition().normalize(),j=c.dot(i),0>=j||(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(I.sub(i,b).normalize()),0>=j||(j*=0==g.distance?1:1-Math.min(b.distanceTo(i)/g.distance,1),0!=j&&(j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j)))}function b(a){null==O[a]&&
(O[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==P&&O[a].setAttribute("shape-rendering","crispEdges"));return O[a]}function c(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,h=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,k,m,n,q,p,s,u,t=new THREE.Rectangle,A=new THREE.Rectangle,x=!1,r=new THREE.Color,C=new THREE.Color,w=new THREE.Color,v=new THREE.Color,y=new THREE.Color,E=new THREE.Color,
D,I=new THREE.Vector3,O=[],F=[],M,J,N,P=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":P=1;break;case "low":P=0}};this.setSize=function(a,b){j=a;k=b;m=j/2;n=k/2;i.setAttribute("viewBox",-m+" "+-n+" "+j+" "+k);i.setAttribute("width",j);i.setAttribute("height",k);t.set(-m,-n,m,n)};this.clear=function(){for(;0<i.childNodes.length;)i.removeChild(i.childNodes[0])};this.render=function(j,
k){if(!1===k instanceof THREE.Camera)console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.");else{var I,Q,G,L;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=h.projectScene(j,k,this.sortObjects,this.sortElements);f=e.elements;g=e.lights;N=J=0;if(x=0<g.length){v.setRGB(0,0,0);y.setRGB(0,0,0);E.setRGB(0,0,0);I=0;for(Q=g.length;I<Q;I++)L=g[I],G=L.color,L instanceof THREE.AmbientLight?(v.r+=G.r,v.g+=G.g,v.b+=G.b):L instanceof THREE.DirectionalLight?
(y.r+=G.r,y.g+=G.g,y.b+=G.b):L instanceof THREE.PointLight&&(E.r+=G.r,E.g+=G.g,E.b+=G.b)}I=0;for(Q=f.length;I<Q;I++)if(G=f[I],L=G.material,!(void 0===L||!1===L.visible))if(A.empty(),G instanceof THREE.RenderableParticle)q=G,q.x*=m,q.y*=-n;else if(G instanceof THREE.RenderableLine){if(q=G.v1,p=G.v2,q.positionScreen.x*=m,q.positionScreen.y*=-n,p.positionScreen.x*=m,p.positionScreen.y*=-n,A.addPoint(q.positionScreen.x,q.positionScreen.y),A.addPoint(p.positionScreen.x,p.positionScreen.y),t.intersects(A)){G=
q;var O=p,da=N++;null==F[da]&&(F[da]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==P&&F[da].setAttribute("shape-rendering","crispEdges"));M=F[da];M.setAttribute("x1",G.positionScreen.x);M.setAttribute("y1",G.positionScreen.y);M.setAttribute("x2",O.positionScreen.x);M.setAttribute("y2",O.positionScreen.y);L instanceof THREE.LineBasicMaterial&&(M.setAttribute("style","fill: none; stroke: "+L.color.getContextStyle()+"; stroke-width: "+L.linewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+
L.linecap+"; stroke-linejoin: "+L.linejoin),i.appendChild(M))}}else if(G instanceof THREE.RenderableFace3){if(q=G.v1,p=G.v2,s=G.v3,q.positionScreen.x*=m,q.positionScreen.y*=-n,p.positionScreen.x*=m,p.positionScreen.y*=-n,s.positionScreen.x*=m,s.positionScreen.y*=-n,A.addPoint(q.positionScreen.x,q.positionScreen.y),A.addPoint(p.positionScreen.x,p.positionScreen.y),A.addPoint(s.positionScreen.x,s.positionScreen.y),t.intersects(A)){var O=q,da=p,ma=s;d.info.render.vertices+=3;d.info.render.faces++;M=
b(J++);M.setAttribute("d","M "+O.positionScreen.x+" "+O.positionScreen.y+" L "+da.positionScreen.x+" "+da.positionScreen.y+" L "+ma.positionScreen.x+","+ma.positionScreen.y+"z");L instanceof THREE.MeshBasicMaterial?(r.copy(L.color),L.vertexColors===THREE.FaceColors&&(r.r*=G.color.r,r.g*=G.color.g,r.b*=G.color.b)):L instanceof THREE.MeshLambertMaterial?(C.copy(L.color),w.copy(L.emissive),L.vertexColors===THREE.FaceColors&&(C.r*=G.color.r,C.g*=G.color.g,C.b*=G.color.b),x?(r.r=v.r,r.g=v.g,r.b=v.b,a(g,
G.centroidWorld,G.normalWorld,r),r.r=r.r*C.r+w.r,r.g=r.g*C.g+w.g,r.b=r.b*C.b+w.b):r.copy(C)):L instanceof THREE.MeshDepthMaterial?(D=1-L.__2near/(L.__farPlusNear-G.z*L.__farMinusNear),r.setRGB(D,D,D)):L instanceof THREE.MeshNormalMaterial&&r.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z));L.wireframe?M.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+L.wireframeLinewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.wireframeLinecap+"; stroke-linejoin: "+
L.wireframeLinejoin):M.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+L.opacity);i.appendChild(M)}}else if(G instanceof THREE.RenderableFace4&&(q=G.v1,p=G.v2,s=G.v3,u=G.v4,q.positionScreen.x*=m,q.positionScreen.y*=-n,p.positionScreen.x*=m,p.positionScreen.y*=-n,s.positionScreen.x*=m,s.positionScreen.y*=-n,u.positionScreen.x*=m,u.positionScreen.y*=-n,A.addPoint(q.positionScreen.x,q.positionScreen.y),A.addPoint(p.positionScreen.x,p.positionScreen.y),A.addPoint(s.positionScreen.x,
s.positionScreen.y),A.addPoint(u.positionScreen.x,u.positionScreen.y),t.intersects(A))){var O=q,da=p,ma=s,H=u;d.info.render.vertices+=4;d.info.render.faces++;M=b(J++);M.setAttribute("d","M "+O.positionScreen.x+" "+O.positionScreen.y+" L "+da.positionScreen.x+" "+da.positionScreen.y+" L "+ma.positionScreen.x+","+ma.positionScreen.y+" L "+H.positionScreen.x+","+H.positionScreen.y+"z");L instanceof THREE.MeshBasicMaterial?(r.copy(L.color),L.vertexColors===THREE.FaceColors&&(r.r*=G.color.r,r.g*=G.color.g,
r.b*=G.color.b)):L instanceof THREE.MeshLambertMaterial?(C.copy(L.color),w.copy(L.emissive),L.vertexColors===THREE.FaceColors&&(C.r*=G.color.r,C.g*=G.color.g,C.b*=G.color.b),x?(r.r=v.r,r.g=v.g,r.b=v.b,a(g,G.centroidWorld,G.normalWorld,r),r.r=r.r*C.r+w.r,r.g=r.g*C.g+w.g,r.b=r.b*C.b+w.b):r.copy(C)):L instanceof THREE.MeshDepthMaterial?(D=1-L.__2near/(L.__farPlusNear-G.z*L.__farMinusNear),r.setRGB(D,D,D)):L instanceof THREE.MeshNormalMaterial&&r.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z));
L.wireframe?M.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+L.wireframeLinewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.wireframeLinecap+"; stroke-linejoin: "+L.wireframeLinejoin):M.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+L.opacity);i.appendChild(M)}}}};THREE.BasicShader={uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"};THREE.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"};THREE.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"};THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"};THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );\n}"};THREE.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v * color, texel.w );\n}"};THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,f=2*Math.ceil(3*a)+1;25<f&&(f=25);e=0.5*(f-1);c=Array(f);for(b=d=0;b<f;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<f;++b)c[b]/=d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};THREE.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"};THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"};THREE.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd = color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nfloat opacity  = rgbaM.w;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, opacity );\n} else {\ngl_FragColor = vec4( rgbB, opacity );\n}\n}"};THREE.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float hue;\nuniform float saturation;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\nfloat angle = hue * 3.14159265;\nfloat s = sin(angle), c = cos(angle);\nvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\nfloat len = length(gl_FragColor.rgb);\ngl_FragColor.rgb = vec3(\ndot(gl_FragColor.rgb, weights.xyz),\ndot(gl_FragColor.rgb, weights.zxy),\ndot(gl_FragColor.rgb, weights.yzx)\n);\nfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (saturation > 0.0) {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n} else {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n}\n}"};THREE.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};THREE.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};THREE.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"};THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:0.3},lumInfluence:{type:"f",value:0.9}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\nuniform float fogNear;\nuniform float fogFar;\nuniform bool fogEnabled;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nfloat width = size.x;\nfloat height = size.y;\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\nconst int samples = 8;\nconst float radius = 5.0;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\nconst vec3 onlyAOColor = vec3( 1.0, 0.7, 0.5 );\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( width / 2.0 ) );\nfloat gg = fract( coord.t * ( height / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat doFog() {\nfloat zdepth = unpackDepth( texture2D( tDepth, vUv ) );\nfloat depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );\nreturn smoothstep( fogNear, fogFar, depth );\n}\nfloat readDepth( const in vec2 coord ) {\nreturn cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat pw;\nfloat ph;\nfloat ao;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\npw = cos( l ) * r;\nph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nif ( fogEnabled ) {\nao = mix( ao, 1.0, doFog() );\n}\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};THREE.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"};THREE.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvoid main() {\nfloat depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\ngl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\n}"};THREE.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"};
